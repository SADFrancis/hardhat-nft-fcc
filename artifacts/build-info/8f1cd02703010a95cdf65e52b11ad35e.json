{"id":"8f1cd02703010a95cdf65e52b11ad35e","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./ConfirmedOwnerWithProposal.sol\";\n\n/**\n * @title The ConfirmedOwner contract\n * @notice A contract with helpers for basic contract ownership.\n */\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\n}\n"},"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./interfaces/OwnableInterface.sol\";\n\n/**\n * @title The ConfirmedOwner contract\n * @notice A contract with helpers for basic contract ownership.\n */\ncontract ConfirmedOwnerWithProposal is OwnableInterface {\n  address private s_owner;\n  address private s_pendingOwner;\n\n  event OwnershipTransferRequested(address indexed from, address indexed to);\n  event OwnershipTransferred(address indexed from, address indexed to);\n\n  constructor(address newOwner, address pendingOwner) {\n    require(newOwner != address(0), \"Cannot set owner to zero\");\n\n    s_owner = newOwner;\n    if (pendingOwner != address(0)) {\n      _transferOwnership(pendingOwner);\n    }\n  }\n\n  /**\n   * @notice Allows an owner to begin transferring ownership to a new address,\n   * pending.\n   */\n  function transferOwnership(address to) public override onlyOwner {\n    _transferOwnership(to);\n  }\n\n  /**\n   * @notice Allows an ownership transfer to be completed by the recipient.\n   */\n  function acceptOwnership() external override {\n    require(msg.sender == s_pendingOwner, \"Must be proposed owner\");\n\n    address oldOwner = s_owner;\n    s_owner = msg.sender;\n    s_pendingOwner = address(0);\n\n    emit OwnershipTransferred(oldOwner, msg.sender);\n  }\n\n  /**\n   * @notice Get the current owner\n   */\n  function owner() public view override returns (address) {\n    return s_owner;\n  }\n\n  /**\n   * @notice validate, transfer ownership, and emit relevant events\n   */\n  function _transferOwnership(address to) private {\n    require(to != msg.sender, \"Cannot transfer to self\");\n\n    s_pendingOwner = to;\n\n    emit OwnershipTransferRequested(s_owner, to);\n  }\n\n  /**\n   * @notice validate access\n   */\n  function _validateOwnership() internal view {\n    require(msg.sender == s_owner, \"Only callable by owner\");\n  }\n\n  /**\n   * @notice Reverts if called by anyone other than the contract owner.\n   */\n  modifier onlyOwner() {\n    _validateOwnership();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n\n  function approve(address spender, uint256 value) external returns (bool success);\n\n  function balanceOf(address owner) external view returns (uint256 balance);\n\n  function decimals() external view returns (uint8 decimalPlaces);\n\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n\n  function name() external view returns (string memory tokenName);\n\n  function symbol() external view returns (string memory tokenSymbol);\n\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n\n  function transfer(address to, uint256 value) external returns (bool success);\n\n  function transferAndCall(\n    address to,\n    uint256 value,\n    bytes calldata data\n  ) external returns (bool success);\n\n  function transferFrom(\n    address from,\n    address to,\n    uint256 value\n  ) external returns (bool success);\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface OwnableInterface {\n  function owner() external returns (address);\n\n  function transferOwnership(address recipient) external;\n\n  function acceptOwnership() external;\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig()\n    external\n    view\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    );\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(uint64 subId)\n    external\n    view\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    );\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n}\n"},"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol":{"content":"// SPDX-License-Identifier: MIT\n// A mock for testing code that relies on VRFCoordinatorV2.\npragma solidity ^0.8.0;\n\nimport \"../interfaces/LinkTokenInterface.sol\";\nimport \"../interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"../VRFConsumerBaseV2.sol\";\n\ncontract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface {\n  uint96 public immutable BASE_FEE;\n  uint96 public immutable GAS_PRICE_LINK;\n\n  error InvalidSubscription();\n  error InsufficientBalance();\n  error MustBeSubOwner(address owner);\n\n  event RandomWordsRequested(\n    bytes32 indexed keyHash,\n    uint256 requestId,\n    uint256 preSeed,\n    uint64 indexed subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords,\n    address indexed sender\n  );\n  event RandomWordsFulfilled(uint256 indexed requestId, uint256 outputSeed, uint96 payment, bool success);\n  event SubscriptionCreated(uint64 indexed subId, address owner);\n  event SubscriptionFunded(uint64 indexed subId, uint256 oldBalance, uint256 newBalance);\n  event SubscriptionCanceled(uint64 indexed subId, address to, uint256 amount);\n\n  uint64 s_currentSubId;\n  uint256 s_nextRequestId = 1;\n  uint256 s_nextPreSeed = 100;\n  struct Subscription {\n    address owner;\n    uint96 balance;\n  }\n  mapping(uint64 => Subscription) s_subscriptions; /* subId */ /* subscription */\n\n  struct Request {\n    uint64 subId;\n    uint32 callbackGasLimit;\n    uint32 numWords;\n  }\n  mapping(uint256 => Request) s_requests; /* requestId */ /* request */\n\n  constructor(uint96 _baseFee, uint96 _gasPriceLink) {\n    BASE_FEE = _baseFee;\n    GAS_PRICE_LINK = _gasPriceLink;\n  }\n\n  /**\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n   * @notice consumer.\n   *\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n   * @dev against the real coordinator a small amount of additional LINK is required.\n   *\n   * @param _requestId the request to fulfill\n   * @param _consumer the VRF randomness consumer to send the result to\n   */\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external {\n    uint256 startGas = gasleft();\n    if (s_requests[_requestId].subId == 0) {\n      revert(\"nonexistent request\");\n    }\n    Request memory req = s_requests[_requestId];\n\n    uint256[] memory words = new uint256[](req.numWords);\n    for (uint256 i = 0; i < req.numWords; i++) {\n      words[i] = uint256(keccak256(abi.encode(_requestId, i)));\n    }\n\n    VRFConsumerBaseV2 v;\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, words);\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\n\n    uint96 payment = uint96(BASE_FEE + ((startGas - gasleft()) * GAS_PRICE_LINK));\n    if (s_subscriptions[req.subId].balance < payment) {\n      revert InsufficientBalance();\n    }\n    s_subscriptions[req.subId].balance -= payment;\n    delete (s_requests[_requestId]);\n    emit RandomWordsFulfilled(_requestId, _requestId, payment, success);\n  }\n\n  /**\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n   *\n   * @param _subId the subscription to fund\n   * @param _amount the amount to fund\n   */\n  function fundSubscription(uint64 _subId, uint96 _amount) public {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    uint96 oldBalance = s_subscriptions[_subId].balance;\n    s_subscriptions[_subId].balance += _amount;\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\n  }\n\n  function requestRandomWords(\n    bytes32 _keyHash,\n    uint64 _subId,\n    uint16 _minimumRequestConfirmations,\n    uint32 _callbackGasLimit,\n    uint32 _numWords\n  ) external override returns (uint256) {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n\n    uint256 requestId = s_nextRequestId++;\n    uint256 preSeed = s_nextPreSeed++;\n\n    s_requests[requestId] = Request({subId: _subId, callbackGasLimit: _callbackGasLimit, numWords: _numWords});\n\n    emit RandomWordsRequested(\n      _keyHash,\n      requestId,\n      preSeed,\n      _subId,\n      _minimumRequestConfirmations,\n      _callbackGasLimit,\n      _numWords,\n      msg.sender\n    );\n    return requestId;\n  }\n\n  function createSubscription() external override returns (uint64 _subId) {\n    s_currentSubId++;\n    s_subscriptions[s_currentSubId] = Subscription({owner: msg.sender, balance: 0});\n    emit SubscriptionCreated(s_currentSubId, msg.sender);\n    return s_currentSubId;\n  }\n\n  function getSubscription(uint64 _subId)\n    external\n    view\n    override\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    )\n  {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    return (s_subscriptions[_subId].balance, 0, s_subscriptions[_subId].owner, new address[](0));\n  }\n\n  function cancelSubscription(uint64 _subId, address _to) external override onlySubOwner(_subId) {\n    emit SubscriptionCanceled(_subId, _to, s_subscriptions[_subId].balance);\n    delete (s_subscriptions[_subId]);\n  }\n\n  modifier onlySubOwner(uint64 _subId) {\n    address owner = s_subscriptions[_subId].owner;\n    if (owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    if (msg.sender != owner) {\n      revert MustBeSubOwner(owner);\n    }\n    _;\n  }\n\n  function getRequestConfig()\n    external\n    pure\n    override\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    )\n  {\n    return (3, 2000000, new bytes32[](0));\n  }\n\n  function addConsumer(uint64 _subId, address _consumer) external pure override {\n    revert(\"not implemented\");\n  }\n\n  function removeConsumer(uint64 _subId, address _consumer) external pure override {\n    revert(\"not implemented\");\n  }\n\n  function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\n    revert(\"not implemented\");\n  }\n\n  function acceptSubscriptionOwnerTransfer(uint64 _subId) external pure override {\n    revert(\"not implemented\");\n  }\n}\n"},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256, /* firstTokenId */\n        uint256 batchSize\n    ) internal virtual {\n        if (batchSize > 1) {\n            if (from != address(0)) {\n                _balances[from] -= batchSize;\n            }\n            if (to != address(0)) {\n                _balances[to] += batchSize;\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\n     * the storage mapping.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"base64-sol/base64.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0;\n\n/// @title Base64\n/// @author Brecht Devos - <brecht@loopring.org>\n/// @notice Provides functions for encoding/decoding base64\nlibrary Base64 {\n    string internal constant TABLE_ENCODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    bytes  internal constant TABLE_DECODE = hex\"0000000000000000000000000000000000000000000000000000000000000000\"\n                                            hex\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\"\n                                            hex\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\"\n                                            hex\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\";\n\n    function encode(bytes memory data) internal pure returns (string memory) {\n        if (data.length == 0) return '';\n\n        // load the table into memory\n        string memory table = TABLE_ENCODE;\n\n        // multiply by 4/3 rounded up\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\n\n        // add some extra buffer at the end required for the writing\n        string memory result = new string(encodedLen + 32);\n\n        assembly {\n            // set the actual output length\n            mstore(result, encodedLen)\n\n            // prepare the lookup table\n            let tablePtr := add(table, 1)\n\n            // input ptr\n            let dataPtr := data\n            let endPtr := add(dataPtr, mload(data))\n\n            // result ptr, jump over length\n            let resultPtr := add(result, 32)\n\n            // run over the input, 3 bytes at a time\n            for {} lt(dataPtr, endPtr) {}\n            {\n                // read 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // write 4 characters\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\n                resultPtr := add(resultPtr, 1)\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\n                resultPtr := add(resultPtr, 1)\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\n                resultPtr := add(resultPtr, 1)\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\n                resultPtr := add(resultPtr, 1)\n            }\n\n            // padding with '='\n            switch mod(mload(data), 3)\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\n        }\n\n        return result;\n    }\n\n    function decode(string memory _data) internal pure returns (bytes memory) {\n        bytes memory data = bytes(_data);\n\n        if (data.length == 0) return new bytes(0);\n        require(data.length % 4 == 0, \"invalid base64 decoder input\");\n\n        // load the table into memory\n        bytes memory table = TABLE_DECODE;\n\n        // every 4 characters represent 3 bytes\n        uint256 decodedLen = (data.length / 4) * 3;\n\n        // add some extra buffer at the end required for the writing\n        bytes memory result = new bytes(decodedLen + 32);\n\n        assembly {\n            // padding with '='\n            let lastBytes := mload(add(data, mload(data)))\n            if eq(and(lastBytes, 0xFF), 0x3d) {\n                decodedLen := sub(decodedLen, 1)\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\n                    decodedLen := sub(decodedLen, 1)\n                }\n            }\n\n            // set the actual output length\n            mstore(result, decodedLen)\n\n            // prepare the lookup table\n            let tablePtr := add(table, 1)\n\n            // input ptr\n            let dataPtr := data\n            let endPtr := add(dataPtr, mload(data))\n\n            // result ptr, jump over length\n            let resultPtr := add(result, 32)\n\n            // run over the input, 4 characters at a time\n            for {} lt(dataPtr, endPtr) {}\n            {\n               // read 4 characters\n               dataPtr := add(dataPtr, 4)\n               let input := mload(dataPtr)\n\n               // write 3 bytes\n               let output := add(\n                   add(\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\n                   add(\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\n                    )\n                )\n                mstore(resultPtr, shl(232, output))\n                resultPtr := add(resultPtr, 3)\n            }\n        }\n\n        return result;\n    }\n}\n"},"contracts/BasicNft.sol":{"content":"// SPDX-License-Identifier: MIT\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\npragma solidity ^0.8.7;\n\ncontract BasicNft is ERC721 {\n    string public constant TOKEN_URI =\n        \"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json\";\n    uint256 private s_tokenCounter;\n    constructor() ERC721(\"Dogie\",\"DOG\") {\n        s_tokenCounter =0;\n    }\n\n    function mintNft() public returns (uint256){\n        _safeMint(msg.sender,s_tokenCounter);\n        s_tokenCounter++;\n        return s_tokenCounter;\n    }\n\n    function tokenURI(uint256 /*tokenId*/) public pure override returns (string memory){\n        return TOKEN_URI;\n    }\n\n\n\n\n    function getTokenCounter() public view returns (uint256) {\n        return s_tokenCounter;\n    }\n\n}"},"contracts/DynamicSvgNft.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"base64-sol/base64.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\n\ncontract DynamicSvgNft is ERC721{\n    // mint\n    // store our SVG information somewhere\n    // Some logic to say \"Show X Logic\" or \"Show Y image\"\n\n    uint256 private s_tokenCounter;\n    string private i_lowImageUri;\n    string private i_highImageUri;\n    string private constant base64EncodedSvgPrefix= \"data:image/svg+xml;base64,\";\n    AggregatorV3Interface internal immutable i_priceFeed;\n    mapping(uint256 => int256) public s_tokenIdToHighValue;\n\n    event CreatedNFT(uint256 indexed tokenId, int256 highValue);\n\n    constructor(address priceFeedAddress, string memory lowSvg, string memory highSvg) ERC721(\"Dynamic SVG NFT\", \"DSN\"){\n        s_tokenCounter = 0;\n        i_lowImageUri = svgToImageURI(lowSvg);\n        i_highImageUri = svgToImageURI(highSvg);\n        i_priceFeed = AggregatorV3Interface(priceFeedAddress);\n    }\n\n    function svgToImageURI(string memory svg) public pure returns (string memory){\n        string memory svgBase64Encoded = Base64.encode(bytes(string(abi.encodePacked(svg))));\n        return string(abi.encodePacked(base64EncodedSvgPrefix,svgBase64Encoded));\n\n    }\n\n    function mintNft(int256 highValue) public {\n        s_tokenIdToHighValue[s_tokenCounter]= highValue;\n        _safeMint(msg.sender, s_tokenCounter);\n        s_tokenCounter +=1; // best practice to increment before minting or emitting? Tests say before emission, after minting\n        emit CreatedNFT(s_tokenCounter,highValue);\n    }\n\n\n    function _baseURI() internal pure override returns(string memory){\n        return \"data:application/json;base64,\";\n    }\n\n    // the plan is to encode the svg as a compressed string, then place it in the JSON \n    // then encode the JSON to be the string for the token URI\n    // _exists \n    function tokenURI(uint256 tokenId) public view virtual override returns(string memory) {\n        require(_exists(tokenId), \"URI Query for nonexistent token\");        \n        \n        //(/*uint80 roundId*/, uint256 price, /*uint256 startAt*/, /*uint256 updatedAt*/, /*uint80 answeredInRound*/  )\n        (,int256 price,,,) = i_priceFeed.latestRoundData();\n        string memory imageURI = i_lowImageUri;\n        if (price >= s_tokenIdToHighValue[tokenId]){\n            imageURI = i_highImageUri;\n        }\n        // data:image/svg+xml;base64, ---> prefix for images\n        // data:application/json;base64, ----> prefix for json\n        // base64 encode for SVG\n         \n        //returns a string of a concatenated JSON prefix and encoded JSON data from string to bytes to base64 \n        // This will produce a string that can be depacked by browser to restore original data\n        return string(        \n            abi.encodePacked(\n                _baseURI(),\n                Base64.encode(\n                    bytes(\n                            abi.encodePacked(\n                                '{\"name\":\"',\n                                name(), // You can add whatever name here\n                                '\", \"description\":\"An NFT that changes based on the Chainlink Feed\", ',\n                                '\"attributes\": [{\"trait_type\": \"coolness\", \"value\": 100}], \"image\":\"',\n                                imageURI,\n                                '\"}'\n                        )\n                    )\n                )\n            )\n        ); \n    }\n\n\n    function getTokenCounter() public view returns (uint256){\n        return s_tokenCounter;\n    }\n    function getLowImageUri() public view returns (string memory){\n        return i_lowImageUri;\n    }\n    function getHighImageUri() public view returns (string memory){\n        return i_highImageUri;\n    }    \n\n}"},"contracts/RandomIpfsNft.sol":{"content":"// SPDX-License-Identifier: MIT\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport '@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol';\nimport '@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol';\nimport '@chainlink/contracts/src/v0.8/ConfirmedOwner.sol';\n\n\npragma solidity ^0.8.7;\n\nerror RandomIpfsNft__RangeOutOfBounds();\nerror RandomIpfsNft__NotEnoughETHToCoverMintFee();\nerror RandomIpfsNft__ContractBalanceTransferFailed();\n\n\ncontract RandomIpfsNft is ERC721URIStorage, VRFConsumerBaseV2, Ownable {\n\n    // Type Declaration\n    enum Breed {\n        PUG,\n        SHIBA_INU,\n        ST_BERNARD\n    }\n\n\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\n    bytes32 private immutable i_keyhash; //gas Lane\n    uint64 private immutable i_subscriptionId;\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\n    uint32 private immutable i_callbackGasLimit;\n    uint32 private constant NUM_WORDS = 1;\n    \n    // VRF helpers\n    mapping(uint256 => address) public s_requestIdToSender;\n\n    // NFT variables\n    uint256 private s_tokenCounter;\n    uint256 internal constant MAX_CHANCE_VALUE = 100;\n    string[] internal s_dogTokenUris;\n    uint256 internal i_mintFee;\n\n    // Events\n    event NftRequested(uint256 indexed requestId, address requester);\n    event NftMinted(Breed dogBreed, address minter);\n\n    constructor(\n        address vrfCoodrindatorV2, \n        bytes32 keyhash, /* gasLane */ \n        uint64 subscriptionId,\n        uint32 callbackGasLimit,\n        string[3] memory dogTokenUris,\n        uint256 mintFee\n        ) \n        VRFConsumerBaseV2(vrfCoodrindatorV2)\n        ERC721(\"Random IPFS NFT\", \"RIN\") \n        {\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoodrindatorV2);\n        i_keyhash = keyhash;\n        i_subscriptionId = subscriptionId;\n        i_callbackGasLimit = callbackGasLimit;\n        i_mintFee = mintFee; \n        s_dogTokenUris = dogTokenUris;\n        s_tokenCounter = 0;\n    }\n\n    function requestNft() public payable returns(uint256 requestId){\n        if(msg.value < i_mintFee){\n            revert RandomIpfsNft__NotEnoughETHToCoverMintFee();}\n        requestId = i_vrfCoordinator.requestRandomWords(\n            i_keyhash, /* Or gasLane once again */\n            i_subscriptionId,\n            REQUEST_CONFIRMATIONS,\n            i_callbackGasLimit,\n            NUM_WORDS\n        );\n\n        s_requestIdToSender[requestId] = msg.sender;\n        emit NftRequested(requestId, msg.sender);\n    }\n\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\n        address dogOwner = s_requestIdToSender[requestId];\n        uint256 newTokenId = s_tokenCounter;\n        uint256 moddedRng = randomWords[0] % MAX_CHANCE_VALUE;\n        //0 - 99\n        // 7 - PUG\n        // 88 -> St. Bernard\n        // 45 -> St. Bernard\n        // 12 -> Shiba Inu\n        // 10% of Pug, 30% of Shiba Inu, 60% chance of St. Bernard\n\n        Breed dogBreed = getBreedFromModdedRng(moddedRng);\n        _safeMint(dogOwner, newTokenId);\n        _setTokenURI(newTokenId,s_dogTokenUris[uint256(dogBreed)]);\n        s_tokenCounter += 1;\n        emit NftMinted(dogBreed, dogOwner);\n        }\n\n    function withdraw() public onlyOwner {\n        uint256 amount = address(this).balance;\n        (bool success,) = payable(msg.sender).call{value: amount}(\"\");\n        if(!success){revert RandomIpfsNft__ContractBalanceTransferFailed();}\n    }\n\n    function getBreedFromModdedRng(uint256 moddedRng) public pure returns(Breed){\n        uint256 cumulativeSum = 0;\n        uint256[3] memory chanceArray = getChanceArray();\n        for(uint256 i=0; i<chanceArray.length; i++){\n            if(moddedRng >= cumulativeSum && moddedRng < cumulativeSum + chanceArray[i]){\n                return Breed(i);\n            }\n            cumulativeSum += chanceArray[i];\n        } \n        revert RandomIpfsNft__RangeOutOfBounds();\n    }\n\n    function getChanceArray() public pure returns(uint256[3] memory) {\n        return [10,30, MAX_CHANCE_VALUE];\n    }\n\n    function getTokenCounter() public view returns (uint256){\n        return s_tokenCounter;\n    }\n\n    function getMintFee() public view returns(uint256){\n        return i_mintFee;\n    }\n\n    function getDogTokenUris(uint256 index) public view returns (string memory) {\n        return s_dogTokenUris[index];\n    }\n}"},"contracts/test/VRFCoordinatorV2Mock.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\";"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:186:24:\n    |\n186 |   function addConsumer(uint64 _subId, address _consumer) external pure override {\n    |                        ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5777,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":5764},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:186:39:\n    |\n186 |   function addConsumer(uint64 _subId, address _consumer) external pure override {\n    |                                       ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5796,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":5779},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:190:27:\n    |\n190 |   function removeConsumer(uint64 _subId, address _consumer) external pure override {\n    |                           ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5898,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":5885},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:190:42:\n    |\n190 |   function removeConsumer(uint64 _subId, address _consumer) external pure override {\n    |                                          ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5917,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":5900},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:194:45:\n    |\n194 |   function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\n    |                                             ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":6037,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":6024},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:194:60:\n    |\n194 |   function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\n    |                                                            ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":6056,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":6039},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:198:44:\n    |\n198 |   function acceptSubscriptionOwnerTransfer(uint64 _subId) external pure override {\n    |                                            ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":6175,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":6162},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol","exportedSymbols":{"ConfirmedOwner":[19],"ConfirmedOwnerWithProposal":[181],"OwnableInterface":[396]},"id":20,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"absolutePath":"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol","file":"./ConfirmedOwnerWithProposal.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":20,"sourceUnit":182,"src":"57:42:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4,"name":"ConfirmedOwnerWithProposal","nodeType":"IdentifierPath","referencedDeclaration":181,"src":"239:26:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"239:26:0"}],"canonicalName":"ConfirmedOwner","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"101:110:0","text":" @title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":19,"linearizedBaseContracts":[19,181,396],"name":"ConfirmedOwner","nameLocation":"221:14:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":17,"nodeType":"Block","src":"349:2:0","statements":[]},"id":18,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":10,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"327:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":13,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"345:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":12,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"337:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"337:7:0","typeDescriptions":{}}},"id":14,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"337:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":15,"kind":"baseConstructorSpecifier","modifierName":{"id":9,"name":"ConfirmedOwnerWithProposal","nodeType":"IdentifierPath","referencedDeclaration":181,"src":"300:26:0"},"nodeType":"ModifierInvocation","src":"300:48:0"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7,"mutability":"mutable","name":"newOwner","nameLocation":"290:8:0","nodeType":"VariableDeclaration","scope":18,"src":"282:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"282:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"281:18:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"349:0:0"},"scope":19,"src":"270:81:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":20,"src":"212:141:0","usedErrors":[]}],"src":"32:322:0"},"id":0},"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol","exportedSymbols":{"ConfirmedOwnerWithProposal":[181],"OwnableInterface":[396]},"id":182,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":21,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol","file":"./interfaces/OwnableInterface.sol","id":22,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":182,"sourceUnit":397,"src":"57:43:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":24,"name":"OwnableInterface","nodeType":"IdentifierPath","referencedDeclaration":396,"src":"252:16:1"},"id":25,"nodeType":"InheritanceSpecifier","src":"252:16:1"}],"canonicalName":"ConfirmedOwnerWithProposal","contractDependencies":[],"contractKind":"contract","documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"102:110:1","text":" @title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":181,"linearizedBaseContracts":[181,396],"name":"ConfirmedOwnerWithProposal","nameLocation":"222:26:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":27,"mutability":"mutable","name":"s_owner","nameLocation":"289:7:1","nodeType":"VariableDeclaration","scope":181,"src":"273:23:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"273:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":29,"mutability":"mutable","name":"s_pendingOwner","nameLocation":"316:14:1","nodeType":"VariableDeclaration","scope":181,"src":"300:30:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"300:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":35,"name":"OwnershipTransferRequested","nameLocation":"341:26:1","nodeType":"EventDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"384:4:1","nodeType":"VariableDeclaration","scope":35,"src":"368:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"368:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":33,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"406:2:1","nodeType":"VariableDeclaration","scope":35,"src":"390:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"367:42:1"},"src":"335:75:1"},{"anonymous":false,"id":41,"name":"OwnershipTransferred","nameLocation":"419:20:1","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"456:4:1","nodeType":"VariableDeclaration","scope":41,"src":"440:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"440:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"478:2:1","nodeType":"VariableDeclaration","scope":41,"src":"462:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"462:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"439:42:1"},"src":"413:69:1"},{"body":{"id":74,"nodeType":"Block","src":"538:179:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"552:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"572:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"564:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"564:7:1","typeDescriptions":{}}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"564:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"552:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","id":55,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"576:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""},"value":"Cannot set owner to zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""}],"id":48,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"544:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"544:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":57,"nodeType":"ExpressionStatement","src":"544:59:1"},{"expression":{"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":58,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"610:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":59,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"620:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"610:18:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":61,"nodeType":"ExpressionStatement","src":"610:18:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"638:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"662:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":64,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"654:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","typeDescriptions":{}}},"id":66,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"654:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"638:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":73,"nodeType":"IfStatement","src":"634:79:1","trueBody":{"id":72,"nodeType":"Block","src":"666:47:1","statements":[{"expression":{"arguments":[{"id":69,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"693:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":68,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"674:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"674:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":71,"nodeType":"ExpressionStatement","src":"674:32:1"}]}}]},"id":75,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"newOwner","nameLocation":"506:8:1","nodeType":"VariableDeclaration","scope":75,"src":"498:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42,"name":"address","nodeType":"ElementaryTypeName","src":"498:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45,"mutability":"mutable","name":"pendingOwner","nameLocation":"524:12:1","nodeType":"VariableDeclaration","scope":75,"src":"516:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"516:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"497:40:1"},"returnParameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"538:0:1"},"scope":181,"src":"486:231:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[392],"body":{"id":88,"nodeType":"Block","src":"891:33:1","statements":[{"expression":{"arguments":[{"id":85,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"916:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":84,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"897:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":86,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"897:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":87,"nodeType":"ExpressionStatement","src":"897:22:1"}]},"documentation":{"id":76,"nodeType":"StructuredDocumentation","src":"721:102:1","text":" @notice Allows an owner to begin transferring ownership to a new address,\n pending."},"functionSelector":"f2fde38b","id":89,"implemented":true,"kind":"function","modifiers":[{"id":82,"kind":"modifierInvocation","modifierName":{"id":81,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":180,"src":"881:9:1"},"nodeType":"ModifierInvocation","src":"881:9:1"}],"name":"transferOwnership","nameLocation":"835:17:1","nodeType":"FunctionDefinition","overrides":{"id":80,"nodeType":"OverrideSpecifier","overrides":[],"src":"872:8:1"},"parameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"to","nameLocation":"861:2:1","nodeType":"VariableDeclaration","scope":89,"src":"853:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":77,"name":"address","nodeType":"ElementaryTypeName","src":"853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"852:12:1"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"891:0:1"},"scope":181,"src":"826:98:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[395],"body":{"id":124,"nodeType":"Block","src":"1061:220:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":95,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1075:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1075:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":97,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1089:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1075:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","id":99,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1105:24:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""},"value":"Must be proposed owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""}],"id":94,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1067:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1067:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":101,"nodeType":"ExpressionStatement","src":"1067:63:1"},{"assignments":[103],"declarations":[{"constant":false,"id":103,"mutability":"mutable","name":"oldOwner","nameLocation":"1145:8:1","nodeType":"VariableDeclaration","scope":124,"src":"1137:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"1137:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":105,"initialValue":{"id":104,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1156:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1137:26:1"},{"expression":{"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":106,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1169:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":107,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1179:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1179:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1169:20:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":110,"nodeType":"ExpressionStatement","src":"1169:20:1"},{"expression":{"id":116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":111,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1195:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1220:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1212:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":112,"name":"address","nodeType":"ElementaryTypeName","src":"1212:7:1","typeDescriptions":{}}},"id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1212:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1195:27:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":117,"nodeType":"ExpressionStatement","src":"1195:27:1"},{"eventCall":{"arguments":[{"id":119,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"1255:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":120,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1265:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1265:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":118,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"1234:20:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1234:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":123,"nodeType":"EmitStatement","src":"1229:47:1"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"928:85:1","text":" @notice Allows an ownership transfer to be completed by the recipient."},"functionSelector":"79ba5097","id":125,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"1025:15:1","nodeType":"FunctionDefinition","overrides":{"id":92,"nodeType":"OverrideSpecifier","overrides":[],"src":"1052:8:1"},"parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"1040:2:1"},"returnParameters":{"id":93,"nodeType":"ParameterList","parameters":[],"src":"1061:0:1"},"scope":181,"src":"1016:265:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[387],"body":{"id":134,"nodeType":"Block","src":"1388:25:1","statements":[{"expression":{"id":132,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1401:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":131,"id":133,"nodeType":"Return","src":"1394:14:1"}]},"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"1285:44:1","text":" @notice Get the current owner"},"functionSelector":"8da5cb5b","id":135,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1341:5:1","nodeType":"FunctionDefinition","overrides":{"id":128,"nodeType":"OverrideSpecifier","overrides":[],"src":"1361:8:1"},"parameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"1346:2:1"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":135,"src":"1379:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"1379:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1378:9:1"},"scope":181,"src":"1332:81:1","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":158,"nodeType":"Block","src":"1545:140:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":142,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"1559:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":143,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1565:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1565:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1559:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","id":146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1577:25:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""},"value":"Cannot transfer to self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""}],"id":141,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1551:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1551:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":148,"nodeType":"ExpressionStatement","src":"1551:52:1"},{"expression":{"id":151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":149,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1610:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":150,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"1627:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1610:19:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":152,"nodeType":"ExpressionStatement","src":"1610:19:1"},{"eventCall":{"arguments":[{"id":154,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1668:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":155,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"1677:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":153,"name":"OwnershipTransferRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"1641:26:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1641:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":157,"nodeType":"EmitStatement","src":"1636:44:1"}]},"documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"1417:77:1","text":" @notice validate, transfer ownership, and emit relevant events"},"id":159,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"1506:18:1","nodeType":"FunctionDefinition","parameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"to","nameLocation":"1533:2:1","nodeType":"VariableDeclaration","scope":159,"src":"1525:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":137,"name":"address","nodeType":"ElementaryTypeName","src":"1525:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1524:12:1"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"1545:0:1"},"scope":181,"src":"1497:188:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":171,"nodeType":"Block","src":"1774:67:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1788:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1788:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":166,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1802:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1788:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","id":168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1811:24:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""},"value":"Only callable by owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""}],"id":163,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1780:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1780:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":170,"nodeType":"ExpressionStatement","src":"1780:56:1"}]},"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"1689:38:1","text":" @notice validate access"},"id":172,"implemented":true,"kind":"function","modifiers":[],"name":"_validateOwnership","nameLocation":"1739:18:1","nodeType":"FunctionDefinition","parameters":{"id":161,"nodeType":"ParameterList","parameters":[],"src":"1757:2:1"},"returnParameters":{"id":162,"nodeType":"ParameterList","parameters":[],"src":"1774:0:1"},"scope":181,"src":"1730:111:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":179,"nodeType":"Block","src":"1950:38:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_validateOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"1956:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1956:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":177,"nodeType":"ExpressionStatement","src":"1956:20:1"},{"id":178,"nodeType":"PlaceholderStatement","src":"1982:1:1"}]},"documentation":{"id":173,"nodeType":"StructuredDocumentation","src":"1845:81:1","text":" @notice Reverts if called by anyone other than the contract owner."},"id":180,"name":"onlyOwner","nameLocation":"1938:9:1","nodeType":"ModifierDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"1947:2:1"},"src":"1929:59:1","virtual":false,"visibility":"internal"}],"scope":182,"src":"213:1777:1","usedErrors":[]}],"src":"32:1959:1"},"id":1},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[239]},"id":240,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":183,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":true,"baseContracts":[],"canonicalName":"VRFConsumerBaseV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"57:5275:2","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":239,"linearizedBaseContracts":[239],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:2","nodeType":"ContractDefinition","nodes":[{"id":190,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:2","nodeType":"ErrorDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"have","nameLocation":"5413:4:2","nodeType":"VariableDeclaration","scope":190,"src":"5405:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":188,"mutability":"mutable","name":"want","nameLocation":"5427:4:2","nodeType":"VariableDeclaration","scope":190,"src":"5419:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:2"},"src":"5373:60:2"},{"constant":false,"id":192,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:2","nodeType":"VariableDeclaration","scope":239,"src":"5436:40:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":202,"nodeType":"Block","src":"5593:43:2","statements":[{"expression":{"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":198,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5599:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":199,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5616:15:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":201,"nodeType":"ExpressionStatement","src":"5599:32:2"}]},"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"5481:72:2","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":203,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:2","nodeType":"VariableDeclaration","scope":203,"src":"5568:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:2"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"5593:0:2"},"scope":239,"src":"5556:80:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"5640:686:2","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":212,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:2","nodeType":"FunctionDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:2","nodeType":"VariableDeclaration","scope":212,"src":"6357:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":205,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":209,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:2","nodeType":"VariableDeclaration","scope":212,"src":"6376:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":207,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":208,"nodeType":"ArrayTypeName","src":"6376:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:2"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[],"src":"6422:0:2"},"scope":239,"src":"6329:94:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":237,"nodeType":"Block","src":"6707:167:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":220,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6717:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":222,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"6731:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":231,"nodeType":"IfStatement","src":"6713:109:2","trueBody":{"id":230,"nodeType":"Block","src":"6747:75:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":225,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6788:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":227,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"6800:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":224,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"6762:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6762:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":229,"nodeType":"RevertStatement","src":"6755:60:2"}]}},{"expression":{"arguments":[{"id":233,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6846:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":234,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"6857:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":232,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6827:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6827:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":236,"nodeType":"ExpressionStatement","src":"6827:42:2"}]},"functionSelector":"1fe543e3","id":238,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:2","nodeType":"FunctionDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:2","nodeType":"VariableDeclaration","scope":238,"src":"6649:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:2","nodeType":"VariableDeclaration","scope":238,"src":"6668:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":216,"nodeType":"ArrayTypeName","src":"6668:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:2"},"returnParameters":{"id":219,"nodeType":"ParameterList","parameters":[],"src":"6707:0:2"},"scope":239,"src":"6618:256:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":240,"src":"5333:1543:2","usedErrors":[190]}],"src":"32:6845:2"},"id":2},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[285]},"id":286,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":241,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"AggregatorV3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":285,"linearizedBaseContracts":[285],"name":"AggregatorV3Interface","nameLocation":"67:21:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":246,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:3","nodeType":"FunctionDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[],"src":"110:2:3"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":246,"src":"136:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":243,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:3"},"scope":285,"src":"93:50:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":251,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:3","nodeType":"FunctionDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[],"src":"167:2:3"},"returnParameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":251,"src":"193:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":248,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:3"},"scope":285,"src":"147:61:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":256,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:3","nodeType":"FunctionDefinition","parameters":{"id":252,"nodeType":"ParameterList","parameters":[],"src":"228:2:3"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"254:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:3"},"scope":285,"src":"212:51:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":271,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"487:12:3","nodeType":"FunctionDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"_roundId","nameLocation":"507:8:3","nodeType":"VariableDeclaration","scope":271,"src":"500:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":257,"name":"uint80","nodeType":"ElementaryTypeName","src":"500:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"499:17:3"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"roundId","nameLocation":"566:7:3","nodeType":"VariableDeclaration","scope":271,"src":"559:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":260,"name":"uint80","nodeType":"ElementaryTypeName","src":"559:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"answer","nameLocation":"588:6:3","nodeType":"VariableDeclaration","scope":271,"src":"581:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":262,"name":"int256","nodeType":"ElementaryTypeName","src":"581:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"startedAt","nameLocation":"610:9:3","nodeType":"VariableDeclaration","scope":271,"src":"602:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"updatedAt","nameLocation":"635:9:3","nodeType":"VariableDeclaration","scope":271,"src":"627:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"answeredInRound","nameLocation":"659:15:3","nodeType":"VariableDeclaration","scope":271,"src":"652:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":268,"name":"uint80","nodeType":"ElementaryTypeName","src":"652:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"551:129:3"},"scope":285,"src":"478:203:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":284,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"694:15:3","nodeType":"FunctionDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[],"src":"709:2:3"},"returnParameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"roundId","nameLocation":"761:7:3","nodeType":"VariableDeclaration","scope":284,"src":"754:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":273,"name":"uint80","nodeType":"ElementaryTypeName","src":"754:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"answer","nameLocation":"783:6:3","nodeType":"VariableDeclaration","scope":284,"src":"776:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":275,"name":"int256","nodeType":"ElementaryTypeName","src":"776:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":278,"mutability":"mutable","name":"startedAt","nameLocation":"805:9:3","nodeType":"VariableDeclaration","scope":284,"src":"797:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":277,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":280,"mutability":"mutable","name":"updatedAt","nameLocation":"830:9:3","nodeType":"VariableDeclaration","scope":284,"src":"822:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":282,"mutability":"mutable","name":"answeredInRound","nameLocation":"854:15:3","nodeType":"VariableDeclaration","scope":284,"src":"847:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":281,"name":"uint80","nodeType":"ElementaryTypeName","src":"847:6:3","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"746:129:3"},"scope":285,"src":"685:191:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":286,"src":"57:821:3","usedErrors":[]}],"src":"32:847:3"},"id":3},"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol","exportedSymbols":{"LinkTokenInterface":[380]},"id":381,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":287,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"LinkTokenInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":380,"linearizedBaseContracts":[380],"name":"LinkTokenInterface","nameLocation":"67:18:4","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd62ed3e","id":296,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"99:9:4","nodeType":"FunctionDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"117:5:4","nodeType":"VariableDeclaration","scope":296,"src":"109:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"109:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"spender","nameLocation":"132:7:4","nodeType":"VariableDeclaration","scope":296,"src":"124:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"124:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"108:32:4"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"remaining","nameLocation":"172:9:4","nodeType":"VariableDeclaration","scope":296,"src":"164:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"164:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"163:19:4"},"scope":380,"src":"90:93:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":305,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"196:7:4","nodeType":"FunctionDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"spender","nameLocation":"212:7:4","nodeType":"VariableDeclaration","scope":305,"src":"204:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"204:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":300,"mutability":"mutable","name":"value","nameLocation":"229:5:4","nodeType":"VariableDeclaration","scope":305,"src":"221:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"221:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"203:32:4"},"returnParameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"success","nameLocation":"259:7:4","nodeType":"VariableDeclaration","scope":305,"src":"254:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":302,"name":"bool","nodeType":"ElementaryTypeName","src":"254:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"253:14:4"},"scope":380,"src":"187:81:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":312,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"281:9:4","nodeType":"FunctionDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"owner","nameLocation":"299:5:4","nodeType":"VariableDeclaration","scope":312,"src":"291:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"291:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"290:15:4"},"returnParameters":{"id":311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"balance","nameLocation":"337:7:4","nodeType":"VariableDeclaration","scope":312,"src":"329:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"328:17:4"},"scope":380,"src":"272:74:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":317,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"359:8:4","nodeType":"FunctionDefinition","parameters":{"id":313,"nodeType":"ParameterList","parameters":[],"src":"367:2:4"},"returnParameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"decimalPlaces","nameLocation":"399:13:4","nodeType":"VariableDeclaration","scope":317,"src":"393:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":314,"name":"uint8","nodeType":"ElementaryTypeName","src":"393:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"392:21:4"},"scope":380,"src":"350:64:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"66188463","id":326,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseApproval","nameLocation":"427:16:4","nodeType":"FunctionDefinition","parameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"spender","nameLocation":"452:7:4","nodeType":"VariableDeclaration","scope":326,"src":"444:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":321,"mutability":"mutable","name":"addedValue","nameLocation":"469:10:4","nodeType":"VariableDeclaration","scope":326,"src":"461:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"461:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"443:37:4"},"returnParameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":324,"mutability":"mutable","name":"success","nameLocation":"504:7:4","nodeType":"VariableDeclaration","scope":326,"src":"499:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":323,"name":"bool","nodeType":"ElementaryTypeName","src":"499:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"498:14:4"},"scope":380,"src":"418:95:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d73dd623","id":333,"implemented":false,"kind":"function","modifiers":[],"name":"increaseApproval","nameLocation":"526:16:4","nodeType":"FunctionDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"spender","nameLocation":"551:7:4","nodeType":"VariableDeclaration","scope":333,"src":"543:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"543:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"subtractedValue","nameLocation":"568:15:4","nodeType":"VariableDeclaration","scope":333,"src":"560:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"542:42:4"},"returnParameters":{"id":332,"nodeType":"ParameterList","parameters":[],"src":"593:0:4"},"scope":380,"src":"517:77:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":338,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"607:4:4","nodeType":"FunctionDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[],"src":"611:2:4"},"returnParameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"mutability":"mutable","name":"tokenName","nameLocation":"651:9:4","nodeType":"VariableDeclaration","scope":338,"src":"637:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":335,"name":"string","nodeType":"ElementaryTypeName","src":"637:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"636:25:4"},"scope":380,"src":"598:64:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":343,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"675:6:4","nodeType":"FunctionDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"681:2:4"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"tokenSymbol","nameLocation":"721:11:4","nodeType":"VariableDeclaration","scope":343,"src":"707:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":340,"name":"string","nodeType":"ElementaryTypeName","src":"707:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"706:27:4"},"scope":380,"src":"666:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":348,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"747:11:4","nodeType":"FunctionDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[],"src":"758:2:4"},"returnParameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"totalTokensIssued","nameLocation":"792:17:4","nodeType":"VariableDeclaration","scope":348,"src":"784:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:27:4"},"scope":380,"src":"738:73:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":357,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"824:8:4","nodeType":"FunctionDefinition","parameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"mutability":"mutable","name":"to","nameLocation":"841:2:4","nodeType":"VariableDeclaration","scope":357,"src":"833:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"833:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":352,"mutability":"mutable","name":"value","nameLocation":"853:5:4","nodeType":"VariableDeclaration","scope":357,"src":"845:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"845:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:27:4"},"returnParameters":{"id":356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"mutability":"mutable","name":"success","nameLocation":"883:7:4","nodeType":"VariableDeclaration","scope":357,"src":"878:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":354,"name":"bool","nodeType":"ElementaryTypeName","src":"878:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"877:14:4"},"scope":380,"src":"815:77:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4000aea0","id":368,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"905:15:4","nodeType":"FunctionDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"to","nameLocation":"934:2:4","nodeType":"VariableDeclaration","scope":368,"src":"926:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"926:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"value","nameLocation":"950:5:4","nodeType":"VariableDeclaration","scope":368,"src":"942:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"942:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":363,"mutability":"mutable","name":"data","nameLocation":"976:4:4","nodeType":"VariableDeclaration","scope":368,"src":"961:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":362,"name":"bytes","nodeType":"ElementaryTypeName","src":"961:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"920:64:4"},"returnParameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"success","nameLocation":"1008:7:4","nodeType":"VariableDeclaration","scope":368,"src":"1003:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":365,"name":"bool","nodeType":"ElementaryTypeName","src":"1003:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1002:14:4"},"scope":380,"src":"896:121:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":379,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1030:12:4","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"from","nameLocation":"1056:4:4","nodeType":"VariableDeclaration","scope":379,"src":"1048:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"to","nameLocation":"1074:2:4","nodeType":"VariableDeclaration","scope":379,"src":"1066:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":371,"name":"address","nodeType":"ElementaryTypeName","src":"1066:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"value","nameLocation":"1090:5:4","nodeType":"VariableDeclaration","scope":379,"src":"1082:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":373,"name":"uint256","nodeType":"ElementaryTypeName","src":"1082:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:57:4"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"success","nameLocation":"1123:7:4","nodeType":"VariableDeclaration","scope":379,"src":"1118:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":376,"name":"bool","nodeType":"ElementaryTypeName","src":"1118:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1117:14:4"},"scope":380,"src":"1021:111:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":381,"src":"57:1077:4","usedErrors":[]}],"src":"32:1103:4"},"id":4},"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol","exportedSymbols":{"OwnableInterface":[396]},"id":397,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":382,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"OwnableInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":396,"linearizedBaseContracts":[396],"name":"OwnableInterface","nameLocation":"67:16:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8da5cb5b","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"97:5:5","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"102:2:5"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"123:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"123:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"122:9:5"},"scope":396,"src":"88:44:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f2fde38b","id":392,"implemented":false,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"145:17:5","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"recipient","nameLocation":"171:9:5","nodeType":"VariableDeclaration","scope":392,"src":"163:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":388,"name":"address","nodeType":"ElementaryTypeName","src":"163:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"162:19:5"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"190:0:5"},"scope":396,"src":"136:55:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"79ba5097","id":395,"implemented":false,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"204:15:5","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[],"src":"219:2:5"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[],"src":"230:0:5"},"scope":396,"src":"195:36:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":397,"src":"57:176:5","usedErrors":[]}],"src":"32:202:5"},"id":5},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[485]},"id":486,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":398,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFCoordinatorV2Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":485,"linearizedBaseContracts":[485],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":399,"nodeType":"StructuredDocumentation","src":"97:267:6","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":409,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:6","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[],"src":"392:2:6"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"437:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":401,"name":"uint16","nodeType":"ElementaryTypeName","src":"437:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"451:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":403,"name":"uint32","nodeType":"ElementaryTypeName","src":"451:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"465:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"465:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":406,"nodeType":"ArrayTypeName","src":"465:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"429:58:6"},"scope":485,"src":"367:121:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"492:1511:6","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":425,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2015:18:6","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"keyHash","nameLocation":"2047:7:6","nodeType":"VariableDeclaration","scope":425,"src":"2039:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2039:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"subId","nameLocation":"2067:5:6","nodeType":"VariableDeclaration","scope":425,"src":"2060:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":413,"name":"uint64","nodeType":"ElementaryTypeName","src":"2060:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":416,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2085:27:6","nodeType":"VariableDeclaration","scope":425,"src":"2078:34:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":415,"name":"uint16","nodeType":"ElementaryTypeName","src":"2078:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2125:16:6","nodeType":"VariableDeclaration","scope":425,"src":"2118:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":417,"name":"uint32","nodeType":"ElementaryTypeName","src":"2118:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"numWords","nameLocation":"2154:8:6","nodeType":"VariableDeclaration","scope":425,"src":"2147:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":419,"name":"uint32","nodeType":"ElementaryTypeName","src":"2147:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2033:133:6"},"returnParameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"requestId","nameLocation":"2193:9:6","nodeType":"VariableDeclaration","scope":425,"src":"2185:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2184:19:6"},"scope":485,"src":"2006:198:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":426,"nodeType":"StructuredDocumentation","src":"2208:384:6","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":431,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2604:18:6","nodeType":"FunctionDefinition","parameters":{"id":427,"nodeType":"ParameterList","parameters":[],"src":"2622:2:6"},"returnParameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"subId","nameLocation":"2650:5:6","nodeType":"VariableDeclaration","scope":431,"src":"2643:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":428,"name":"uint64","nodeType":"ElementaryTypeName","src":"2643:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2642:14:6"},"scope":485,"src":"2595:62:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":432,"nodeType":"StructuredDocumentation","src":"2661:381:6","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":446,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3054:15:6","nodeType":"FunctionDefinition","parameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"subId","nameLocation":"3077:5:6","nodeType":"VariableDeclaration","scope":446,"src":"3070:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":433,"name":"uint64","nodeType":"ElementaryTypeName","src":"3070:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3069:14:6"},"returnParameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"balance","nameLocation":"3133:7:6","nodeType":"VariableDeclaration","scope":446,"src":"3126:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":436,"name":"uint96","nodeType":"ElementaryTypeName","src":"3126:6:6","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"reqCount","nameLocation":"3155:8:6","nodeType":"VariableDeclaration","scope":446,"src":"3148:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":438,"name":"uint64","nodeType":"ElementaryTypeName","src":"3148:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":441,"mutability":"mutable","name":"owner","nameLocation":"3179:5:6","nodeType":"VariableDeclaration","scope":446,"src":"3171:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"3171:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":444,"mutability":"mutable","name":"consumers","nameLocation":"3209:9:6","nodeType":"VariableDeclaration","scope":446,"src":"3192:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"3192:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":443,"nodeType":"ArrayTypeName","src":"3192:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3118:106:6"},"scope":485,"src":"3045:180:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"3229:164:6","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":454,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3405:32:6","nodeType":"FunctionDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"subId","nameLocation":"3445:5:6","nodeType":"VariableDeclaration","scope":454,"src":"3438:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":448,"name":"uint64","nodeType":"ElementaryTypeName","src":"3438:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"newOwner","nameLocation":"3460:8:6","nodeType":"VariableDeclaration","scope":454,"src":"3452:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:32:6"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"3478:0:6"},"scope":485,"src":"3396:83:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":455,"nodeType":"StructuredDocumentation","src":"3483:212:6","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":460,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3707:31:6","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"subId","nameLocation":"3746:5:6","nodeType":"VariableDeclaration","scope":460,"src":"3739:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":456,"name":"uint64","nodeType":"ElementaryTypeName","src":"3739:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3738:14:6"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"3761:0:6"},"scope":485,"src":"3698:64:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"3766:170:6","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":468,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3948:11:6","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"subId","nameLocation":"3967:5:6","nodeType":"VariableDeclaration","scope":468,"src":"3960:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":462,"name":"uint64","nodeType":"ElementaryTypeName","src":"3960:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":465,"mutability":"mutable","name":"consumer","nameLocation":"3982:8:6","nodeType":"VariableDeclaration","scope":468,"src":"3974:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"3974:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3959:32:6"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[],"src":"4000:0:6"},"scope":485,"src":"3939:62:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"4005:172:6","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":476,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4189:14:6","nodeType":"FunctionDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"mutability":"mutable","name":"subId","nameLocation":"4211:5:6","nodeType":"VariableDeclaration","scope":476,"src":"4204:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":470,"name":"uint64","nodeType":"ElementaryTypeName","src":"4204:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"consumer","nameLocation":"4226:8:6","nodeType":"VariableDeclaration","scope":476,"src":"4218:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"4218:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4203:32:6"},"returnParameters":{"id":475,"nodeType":"ParameterList","parameters":[],"src":"4244:0:6"},"scope":485,"src":"4180:65:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":477,"nodeType":"StructuredDocumentation","src":"4249:140:6","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":484,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4401:18:6","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"mutability":"mutable","name":"subId","nameLocation":"4427:5:6","nodeType":"VariableDeclaration","scope":484,"src":"4420:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":478,"name":"uint64","nodeType":"ElementaryTypeName","src":"4420:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"to","nameLocation":"4442:2:6","nodeType":"VariableDeclaration","scope":484,"src":"4434:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"4434:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:26:6"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[],"src":"4454:0:6"},"scope":485,"src":"4392:63:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":486,"src":"57:4400:6","usedErrors":[]}],"src":"32:4426:6"},"id":6},"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","exportedSymbols":{"LinkTokenInterface":[380],"VRFConsumerBaseV2":[239],"VRFCoordinatorV2Interface":[485],"VRFCoordinatorV2Mock":[1064]},"id":1065,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":487,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"92:23:7"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol","file":"../interfaces/LinkTokenInterface.sol","id":488,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1065,"sourceUnit":381,"src":"117:46:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"../interfaces/VRFCoordinatorV2Interface.sol","id":489,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1065,"sourceUnit":486,"src":"164:53:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"../VRFConsumerBaseV2.sol","id":490,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1065,"sourceUnit":240,"src":"218:34:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":491,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":485,"src":"287:25:7"},"id":492,"nodeType":"InheritanceSpecifier","src":"287:25:7"}],"canonicalName":"VRFCoordinatorV2Mock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1064,"linearizedBaseContracts":[1064,485],"name":"VRFCoordinatorV2Mock","nameLocation":"263:20:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"3d18651e","id":494,"mutability":"immutable","name":"BASE_FEE","nameLocation":"341:8:7","nodeType":"VariableDeclaration","scope":1064,"src":"317:32:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":493,"name":"uint96","nodeType":"ElementaryTypeName","src":"317:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"a410347f","id":496,"mutability":"immutable","name":"GAS_PRICE_LINK","nameLocation":"377:14:7","nodeType":"VariableDeclaration","scope":1064,"src":"353:38:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":495,"name":"uint96","nodeType":"ElementaryTypeName","src":"353:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"id":498,"name":"InvalidSubscription","nameLocation":"402:19:7","nodeType":"ErrorDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"421:2:7"},"src":"396:28:7"},{"id":500,"name":"InsufficientBalance","nameLocation":"433:19:7","nodeType":"ErrorDefinition","parameters":{"id":499,"nodeType":"ParameterList","parameters":[],"src":"452:2:7"},"src":"427:28:7"},{"id":504,"name":"MustBeSubOwner","nameLocation":"464:14:7","nodeType":"ErrorDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"owner","nameLocation":"487:5:7","nodeType":"VariableDeclaration","scope":504,"src":"479:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":501,"name":"address","nodeType":"ElementaryTypeName","src":"479:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"478:15:7"},"src":"458:36:7"},{"anonymous":false,"id":522,"name":"RandomWordsRequested","nameLocation":"504:20:7","nodeType":"EventDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"indexed":true,"mutability":"mutable","name":"keyHash","nameLocation":"546:7:7","nodeType":"VariableDeclaration","scope":522,"src":"530:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"530:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":508,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"567:9:7","nodeType":"VariableDeclaration","scope":522,"src":"559:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint256","nodeType":"ElementaryTypeName","src":"559:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":510,"indexed":false,"mutability":"mutable","name":"preSeed","nameLocation":"590:7:7","nodeType":"VariableDeclaration","scope":522,"src":"582:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"582:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":512,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"618:5:7","nodeType":"VariableDeclaration","scope":522,"src":"603:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":511,"name":"uint64","nodeType":"ElementaryTypeName","src":"603:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":514,"indexed":false,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"636:27:7","nodeType":"VariableDeclaration","scope":522,"src":"629:34:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":513,"name":"uint16","nodeType":"ElementaryTypeName","src":"629:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":516,"indexed":false,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"676:16:7","nodeType":"VariableDeclaration","scope":522,"src":"669:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":515,"name":"uint32","nodeType":"ElementaryTypeName","src":"669:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":518,"indexed":false,"mutability":"mutable","name":"numWords","nameLocation":"705:8:7","nodeType":"VariableDeclaration","scope":522,"src":"698:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":517,"name":"uint32","nodeType":"ElementaryTypeName","src":"698:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":520,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"735:6:7","nodeType":"VariableDeclaration","scope":522,"src":"719:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"719:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"524:221:7"},"src":"498:248:7"},{"anonymous":false,"id":532,"name":"RandomWordsFulfilled","nameLocation":"755:20:7","nodeType":"EventDefinition","parameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"792:9:7","nodeType":"VariableDeclaration","scope":532,"src":"776:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"776:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":526,"indexed":false,"mutability":"mutable","name":"outputSeed","nameLocation":"811:10:7","nodeType":"VariableDeclaration","scope":532,"src":"803:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":525,"name":"uint256","nodeType":"ElementaryTypeName","src":"803:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":528,"indexed":false,"mutability":"mutable","name":"payment","nameLocation":"830:7:7","nodeType":"VariableDeclaration","scope":532,"src":"823:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":527,"name":"uint96","nodeType":"ElementaryTypeName","src":"823:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":530,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"844:7:7","nodeType":"VariableDeclaration","scope":532,"src":"839:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":529,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"775:77:7"},"src":"749:104:7"},{"anonymous":false,"id":538,"name":"SubscriptionCreated","nameLocation":"862:19:7","nodeType":"EventDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"897:5:7","nodeType":"VariableDeclaration","scope":538,"src":"882:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":533,"name":"uint64","nodeType":"ElementaryTypeName","src":"882:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":536,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"912:5:7","nodeType":"VariableDeclaration","scope":538,"src":"904:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":535,"name":"address","nodeType":"ElementaryTypeName","src":"904:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"881:37:7"},"src":"856:63:7"},{"anonymous":false,"id":546,"name":"SubscriptionFunded","nameLocation":"928:18:7","nodeType":"EventDefinition","parameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"962:5:7","nodeType":"VariableDeclaration","scope":546,"src":"947:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":539,"name":"uint64","nodeType":"ElementaryTypeName","src":"947:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":542,"indexed":false,"mutability":"mutable","name":"oldBalance","nameLocation":"977:10:7","nodeType":"VariableDeclaration","scope":546,"src":"969:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":541,"name":"uint256","nodeType":"ElementaryTypeName","src":"969:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":544,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"997:10:7","nodeType":"VariableDeclaration","scope":546,"src":"989:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":543,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"946:62:7"},"src":"922:87:7"},{"anonymous":false,"id":554,"name":"SubscriptionCanceled","nameLocation":"1018:20:7","nodeType":"EventDefinition","parameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1054:5:7","nodeType":"VariableDeclaration","scope":554,"src":"1039:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":547,"name":"uint64","nodeType":"ElementaryTypeName","src":"1039:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":550,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1069:2:7","nodeType":"VariableDeclaration","scope":554,"src":"1061:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"1061:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":552,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1081:6:7","nodeType":"VariableDeclaration","scope":554,"src":"1073:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":551,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:50:7"},"src":"1012:77:7"},{"constant":false,"id":556,"mutability":"mutable","name":"s_currentSubId","nameLocation":"1100:14:7","nodeType":"VariableDeclaration","scope":1064,"src":"1093:21:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":555,"name":"uint64","nodeType":"ElementaryTypeName","src":"1093:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"s_nextRequestId","nameLocation":"1126:15:7","nodeType":"VariableDeclaration","scope":1064,"src":"1118:27:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1118:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1144:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"s_nextPreSeed","nameLocation":"1157:13:7","nodeType":"VariableDeclaration","scope":1064,"src":"1149:27:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"1149:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1173:3:7","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"canonicalName":"VRFCoordinatorV2Mock.Subscription","id":567,"members":[{"constant":false,"id":564,"mutability":"mutable","name":"owner","nameLocation":"1214:5:7","nodeType":"VariableDeclaration","scope":567,"src":"1206:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"balance","nameLocation":"1232:7:7","nodeType":"VariableDeclaration","scope":567,"src":"1225:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":565,"name":"uint96","nodeType":"ElementaryTypeName","src":"1225:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"Subscription","nameLocation":"1187:12:7","nodeType":"StructDefinition","scope":1064,"src":"1180:64:7","visibility":"public"},{"constant":false,"id":572,"mutability":"mutable","name":"s_subscriptions","nameLocation":"1279:15:7","nodeType":"VariableDeclaration","scope":1064,"src":"1247:47:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$567_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)"},"typeName":{"id":571,"keyType":{"id":568,"name":"uint64","nodeType":"ElementaryTypeName","src":"1255:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"1247:31:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$567_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)"},"valueType":{"id":570,"nodeType":"UserDefinedTypeName","pathNode":{"id":569,"name":"Subscription","nodeType":"IdentifierPath","referencedDeclaration":567,"src":"1265:12:7"},"referencedDeclaration":567,"src":"1265:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$567_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Subscription"}}},"visibility":"internal"},{"canonicalName":"VRFCoordinatorV2Mock.Request","id":579,"members":[{"constant":false,"id":574,"mutability":"mutable","name":"subId","nameLocation":"1358:5:7","nodeType":"VariableDeclaration","scope":579,"src":"1351:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":573,"name":"uint64","nodeType":"ElementaryTypeName","src":"1351:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":576,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1376:16:7","nodeType":"VariableDeclaration","scope":579,"src":"1369:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":575,"name":"uint32","nodeType":"ElementaryTypeName","src":"1369:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":578,"mutability":"mutable","name":"numWords","nameLocation":"1405:8:7","nodeType":"VariableDeclaration","scope":579,"src":"1398:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":577,"name":"uint32","nodeType":"ElementaryTypeName","src":"1398:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"Request","nameLocation":"1337:7:7","nodeType":"StructDefinition","scope":1064,"src":"1330:88:7","visibility":"public"},{"constant":false,"id":584,"mutability":"mutable","name":"s_requests","nameLocation":"1449:10:7","nodeType":"VariableDeclaration","scope":1064,"src":"1421:38:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$579_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)"},"typeName":{"id":583,"keyType":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1429:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1421:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$579_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)"},"valueType":{"id":582,"nodeType":"UserDefinedTypeName","pathNode":{"id":581,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":579,"src":"1440:7:7"},"referencedDeclaration":579,"src":"1440:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$579_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"}}},"visibility":"internal"},{"body":{"id":599,"nodeType":"Block","src":"1545:66:7","statements":[{"expression":{"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":591,"name":"BASE_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"1551:8:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":592,"name":"_baseFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"1562:8:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1551:19:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":594,"nodeType":"ExpressionStatement","src":"1551:19:7"},{"expression":{"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":595,"name":"GAS_PRICE_LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"1576:14:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":596,"name":"_gasPriceLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"1593:13:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1576:30:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":598,"nodeType":"ExpressionStatement","src":"1576:30:7"}]},"id":600,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"_baseFee","nameLocation":"1513:8:7","nodeType":"VariableDeclaration","scope":600,"src":"1506:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":585,"name":"uint96","nodeType":"ElementaryTypeName","src":"1506:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":588,"mutability":"mutable","name":"_gasPriceLink","nameLocation":"1530:13:7","nodeType":"VariableDeclaration","scope":600,"src":"1523:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":587,"name":"uint96","nodeType":"ElementaryTypeName","src":"1523:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"1505:39:7"},"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[],"src":"1545:0:7"},"scope":1064,"src":"1494:117:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":746,"nodeType":"Block","src":"2241:902:7","statements":[{"assignments":[609],"declarations":[{"constant":false,"id":609,"mutability":"mutable","name":"startGas","nameLocation":"2255:8:7","nodeType":"VariableDeclaration","scope":746,"src":"2247:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"2247:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":612,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":610,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"2266:7:7","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2266:9:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2247:28:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":613,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"2285:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$579_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":615,"indexExpression":{"id":614,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"2296:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2285:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$579_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"id":616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":574,"src":"2285:28:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2285:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":624,"nodeType":"IfStatement","src":"2281:83:7","trueBody":{"id":623,"nodeType":"Block","src":"2320:44:7","statements":[{"expression":{"arguments":[{"hexValue":"6e6f6e6578697374656e742072657175657374","id":620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2335:21:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","typeString":"literal_string \"nonexistent request\""},"value":"nonexistent request"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","typeString":"literal_string \"nonexistent request\""}],"id":619,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2328:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2328:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":622,"nodeType":"ExpressionStatement","src":"2328:29:7"}]}},{"assignments":[627],"declarations":[{"constant":false,"id":627,"mutability":"mutable","name":"req","nameLocation":"2384:3:7","nodeType":"VariableDeclaration","scope":746,"src":"2369:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$579_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"},"typeName":{"id":626,"nodeType":"UserDefinedTypeName","pathNode":{"id":625,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":579,"src":"2369:7:7"},"referencedDeclaration":579,"src":"2369:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$579_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"}},"visibility":"internal"}],"id":631,"initialValue":{"baseExpression":{"id":628,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"2390:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$579_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":630,"indexExpression":{"id":629,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"2401:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2390:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$579_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2369:43:7"},{"assignments":[636],"declarations":[{"constant":false,"id":636,"mutability":"mutable","name":"words","nameLocation":"2436:5:7","nodeType":"VariableDeclaration","scope":746,"src":"2419:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":634,"name":"uint256","nodeType":"ElementaryTypeName","src":"2419:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":635,"nodeType":"ArrayTypeName","src":"2419:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":643,"initialValue":{"arguments":[{"expression":{"id":640,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"2458:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$579_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":578,"src":"2458:12:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2444:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":637,"name":"uint256","nodeType":"ElementaryTypeName","src":"2448:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":638,"nodeType":"ArrayTypeName","src":"2448:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2444:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2419:52:7"},{"body":{"id":670,"nodeType":"Block","src":"2520:71:7","statements":[{"expression":{"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":655,"name":"words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"2528:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":657,"indexExpression":{"id":656,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"2534:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2528:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":663,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"2568:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":664,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"2580:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":661,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2557:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2557:10:7","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2557:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":660,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2547:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2547:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2539:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":658,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:7","typeDescriptions":{}}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2539:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2528:56:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":669,"nodeType":"ExpressionStatement","src":"2528:56:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":648,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"2497:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":649,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"2501:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$579_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":578,"src":"2501:12:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2497:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":671,"initializationExpression":{"assignments":[645],"declarations":[{"constant":false,"id":645,"mutability":"mutable","name":"i","nameLocation":"2490:1:7","nodeType":"VariableDeclaration","scope":671,"src":"2482:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":644,"name":"uint256","nodeType":"ElementaryTypeName","src":"2482:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":647,"initialValue":{"hexValue":"30","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2494:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2482:13:7"},"loopExpression":{"expression":{"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2515:3:7","subExpression":{"id":652,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"2515:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":654,"nodeType":"ExpressionStatement","src":"2515:3:7"},"nodeType":"ForStatement","src":"2477:114:7"},{"assignments":[674],"declarations":[{"constant":false,"id":674,"mutability":"mutable","name":"v","nameLocation":"2615:1:7","nodeType":"VariableDeclaration","scope":746,"src":"2597:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$239","typeString":"contract VRFConsumerBaseV2"},"typeName":{"id":673,"nodeType":"UserDefinedTypeName","pathNode":{"id":672,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":239,"src":"2597:17:7"},"referencedDeclaration":239,"src":"2597:17:7","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$239","typeString":"contract VRFConsumerBaseV2"}},"visibility":"internal"}],"id":675,"nodeType":"VariableDeclarationStatement","src":"2597:19:7"},{"assignments":[677],"declarations":[{"constant":false,"id":677,"mutability":"mutable","name":"callReq","nameLocation":"2635:7:7","nodeType":"VariableDeclaration","scope":746,"src":"2622:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":676,"name":"bytes","nodeType":"ElementaryTypeName","src":"2622:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":686,"initialValue":{"arguments":[{"expression":{"expression":{"id":680,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"2668:1:7","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$239","typeString":"contract VRFConsumerBaseV2"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rawFulfillRandomWords","nodeType":"MemberAccess","referencedDeclaration":238,"src":"2668:23:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory) external"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2668:32:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":683,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"2702:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":684,"name":"words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"2714:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":678,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2645:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2645:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2645:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2622:98:7"},{"assignments":[688,null],"declarations":[{"constant":false,"id":688,"mutability":"mutable","name":"success","nameLocation":"2732:7:7","nodeType":"VariableDeclaration","scope":746,"src":"2727:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":687,"name":"bool","nodeType":"ElementaryTypeName","src":"2727:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":696,"initialValue":{"arguments":[{"id":694,"name":"callReq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"2787:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":689,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"2745:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2745:14:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":691,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"2765:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$579_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":576,"src":"2765:20:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"src":"2745:41:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2745:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2726:69:7"},{"assignments":[698],"declarations":[{"constant":false,"id":698,"mutability":"mutable","name":"payment","nameLocation":"2809:7:7","nodeType":"VariableDeclaration","scope":746,"src":"2802:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":697,"name":"uint96","nodeType":"ElementaryTypeName","src":"2802:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":712,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":701,"name":"BASE_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"2826:8:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":702,"name":"startGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"2839:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":703,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"2850:7:7","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2850:9:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2838:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":707,"name":"GAS_PRICE_LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"2863:14:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2838:39:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":709,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2837:41:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2826:52:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2819:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":699,"name":"uint96","nodeType":"ElementaryTypeName","src":"2819:6:7","typeDescriptions":{}}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2819:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"2802:77:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":713,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"2889:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$567_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":716,"indexExpression":{"expression":{"id":714,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"2905:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$579_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":574,"src":"2905:9:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2889:26:7","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$567_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":717,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":566,"src":"2889:34:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":718,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"2926:7:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2889:44:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":724,"nodeType":"IfStatement","src":"2885:93:7","trueBody":{"id":723,"nodeType":"Block","src":"2935:43:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":720,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"2950:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2950:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":722,"nodeType":"RevertStatement","src":"2943:28:7"}]}},{"expression":{"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":725,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"2983:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$567_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":728,"indexExpression":{"expression":{"id":726,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"2999:3:7","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$579_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":574,"src":"2999:9:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2983:26:7","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$567_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":566,"src":"2983:34:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":730,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"3021:7:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2983:45:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":732,"nodeType":"ExpressionStatement","src":"2983:45:7"},{"expression":{"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3034:31:7","subExpression":{"components":[{"baseExpression":{"id":733,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"3042:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$579_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":735,"indexExpression":{"id":734,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"3053:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3042:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$579_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}}],"id":736,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"3041:24:7","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$579_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":738,"nodeType":"ExpressionStatement","src":"3034:31:7"},{"eventCall":{"arguments":[{"id":740,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"3097:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":741,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"3109:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":742,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"3121:7:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":743,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"3130:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":739,"name":"RandomWordsFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"3076:20:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint96_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,uint96,bool)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3076:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":745,"nodeType":"EmitStatement","src":"3071:67:7"}]},"documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"1615:547:7","text":" @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n @notice consumer.\n @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n @dev against the real coordinator a small amount of additional LINK is required.\n @param _requestId the request to fulfill\n @param _consumer the VRF randomness consumer to send the result to"},"functionSelector":"808974ff","id":747,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"2174:18:7","nodeType":"FunctionDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"_requestId","nameLocation":"2201:10:7","nodeType":"VariableDeclaration","scope":747,"src":"2193:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"2193:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"_consumer","nameLocation":"2221:9:7","nodeType":"VariableDeclaration","scope":747,"src":"2213:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"2213:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2192:39:7"},"returnParameters":{"id":607,"nodeType":"ParameterList","parameters":[],"src":"2241:0:7"},"scope":1064,"src":"2165:978:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":791,"nodeType":"Block","src":"3409:278:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":755,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"3419:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$567_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":757,"indexExpression":{"id":756,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"3435:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3419:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$567_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":564,"src":"3419:29:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3452:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:7","typeDescriptions":{}}},"id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3452:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3419:43:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":768,"nodeType":"IfStatement","src":"3415:92:7","trueBody":{"id":767,"nodeType":"Block","src":"3464:43:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":764,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"3479:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3479:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":766,"nodeType":"RevertStatement","src":"3472:28:7"}]}},{"assignments":[770],"declarations":[{"constant":false,"id":770,"mutability":"mutable","name":"oldBalance","nameLocation":"3519:10:7","nodeType":"VariableDeclaration","scope":791,"src":"3512:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":769,"name":"uint96","nodeType":"ElementaryTypeName","src":"3512:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":775,"initialValue":{"expression":{"baseExpression":{"id":771,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"3532:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$567_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":773,"indexExpression":{"id":772,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"3548:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3532:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$567_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":566,"src":"3532:31:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"3512:51:7"},{"expression":{"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":776,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"3569:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$567_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":778,"indexExpression":{"id":777,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"3585:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3569:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$567_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":566,"src":"3569:31:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":780,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"3604:7:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"3569:42:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":782,"nodeType":"ExpressionStatement","src":"3569:42:7"},{"eventCall":{"arguments":[{"id":784,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"3641:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":785,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"3649:10:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":786,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"3661:10:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":787,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"3674:7:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"3661:20:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":783,"name":"SubscriptionFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"3622:18:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint64,uint256,uint256)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3622:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":790,"nodeType":"EmitStatement","src":"3617:65:7"}]},"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"3147:195:7","text":" @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n @param _subId the subscription to fund\n @param _amount the amount to fund"},"functionSelector":"afc69b53","id":792,"implemented":true,"kind":"function","modifiers":[],"name":"fundSubscription","nameLocation":"3354:16:7","nodeType":"FunctionDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"_subId","nameLocation":"3378:6:7","nodeType":"VariableDeclaration","scope":792,"src":"3371:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":749,"name":"uint64","nodeType":"ElementaryTypeName","src":"3371:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":752,"mutability":"mutable","name":"_amount","nameLocation":"3393:7:7","nodeType":"VariableDeclaration","scope":792,"src":"3386:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":751,"name":"uint96","nodeType":"ElementaryTypeName","src":"3386:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3370:31:7"},"returnParameters":{"id":754,"nodeType":"ParameterList","parameters":[],"src":"3409:0:7"},"scope":1064,"src":"3345:342:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[425],"body":{"id":856,"nodeType":"Block","src":"3893:516:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":808,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"3903:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$567_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":810,"indexExpression":{"id":809,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"3919:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3903:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$567_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":564,"src":"3903:29:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3936:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"3936:7:7","typeDescriptions":{}}},"id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3936:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3903:43:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":821,"nodeType":"IfStatement","src":"3899:92:7","trueBody":{"id":820,"nodeType":"Block","src":"3948:43:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":817,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"3963:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3963:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":819,"nodeType":"RevertStatement","src":"3956:28:7"}]}},{"assignments":[823],"declarations":[{"constant":false,"id":823,"mutability":"mutable","name":"requestId","nameLocation":"4005:9:7","nodeType":"VariableDeclaration","scope":856,"src":"3997:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":826,"initialValue":{"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4017:17:7","subExpression":{"id":824,"name":"s_nextRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"4017:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3997:37:7"},{"assignments":[828],"declarations":[{"constant":false,"id":828,"mutability":"mutable","name":"preSeed","nameLocation":"4048:7:7","nodeType":"VariableDeclaration","scope":856,"src":"4040:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"4040:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":831,"initialValue":{"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4058:15:7","subExpression":{"id":829,"name":"s_nextPreSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4058:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4040:33:7"},{"expression":{"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":832,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4080:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$579_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":834,"indexExpression":{"id":833,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"4091:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4080:21:7","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$579_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":836,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"4120:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":837,"name":"_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"4146:17:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":838,"name":"_numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"4175:9:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":835,"name":"Request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4104:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Request_$579_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2Mock.Request storage pointer)"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["subId","callbackGasLimit","numWords"],"nodeType":"FunctionCall","src":"4104:82:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Request_$579_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"src":"4080:106:7","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$579_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"id":841,"nodeType":"ExpressionStatement","src":"4080:106:7"},{"eventCall":{"arguments":[{"id":843,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"4226:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":844,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"4242:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":845,"name":"preSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"4259:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":846,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"4274:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":847,"name":"_minimumRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"4288:28:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":848,"name":"_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"4324:17:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":849,"name":"_numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"4349:9:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":850,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4366:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4366:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":842,"name":"RandomWordsRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"4198:20:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$_t_address_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint64,uint16,uint32,uint32,address)"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4198:184:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":853,"nodeType":"EmitStatement","src":"4193:189:7"},{"expression":{"id":854,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"4395:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":807,"id":855,"nodeType":"Return","src":"4388:16:7"}]},"functionSelector":"5d3b1d30","id":857,"implemented":true,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"3700:18:7","nodeType":"FunctionDefinition","overrides":{"id":804,"nodeType":"OverrideSpecifier","overrides":[],"src":"3866:8:7"},"parameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"_keyHash","nameLocation":"3732:8:7","nodeType":"VariableDeclaration","scope":857,"src":"3724:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":793,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3724:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":796,"mutability":"mutable","name":"_subId","nameLocation":"3753:6:7","nodeType":"VariableDeclaration","scope":857,"src":"3746:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":795,"name":"uint64","nodeType":"ElementaryTypeName","src":"3746:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":798,"mutability":"mutable","name":"_minimumRequestConfirmations","nameLocation":"3772:28:7","nodeType":"VariableDeclaration","scope":857,"src":"3765:35:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":797,"name":"uint16","nodeType":"ElementaryTypeName","src":"3765:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":800,"mutability":"mutable","name":"_callbackGasLimit","nameLocation":"3813:17:7","nodeType":"VariableDeclaration","scope":857,"src":"3806:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":799,"name":"uint32","nodeType":"ElementaryTypeName","src":"3806:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"_numWords","nameLocation":"3843:9:7","nodeType":"VariableDeclaration","scope":857,"src":"3836:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":801,"name":"uint32","nodeType":"ElementaryTypeName","src":"3836:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3718:138:7"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":857,"src":"3884:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"3884:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3883:9:7"},"scope":1064,"src":"3691:718:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[431],"body":{"id":884,"nodeType":"Block","src":"4485:197:7","statements":[{"expression":{"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4491:16:7","subExpression":{"id":863,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"4491:14:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":865,"nodeType":"ExpressionStatement","src":"4491:16:7"},{"expression":{"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":866,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"4513:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$567_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":868,"indexExpression":{"id":867,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"4529:14:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4513:31:7","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$567_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":870,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4568:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4568:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4589:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":869,"name":"Subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"4547:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Subscription_$567_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2Mock.Subscription storage pointer)"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["owner","balance"],"nodeType":"FunctionCall","src":"4547:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$567_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Subscription memory"}},"src":"4513:79:7","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$567_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":875,"nodeType":"ExpressionStatement","src":"4513:79:7"},{"eventCall":{"arguments":[{"id":877,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"4623:14:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":878,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4639:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4639:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":876,"name":"SubscriptionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"4603:19:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4603:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":881,"nodeType":"EmitStatement","src":"4598:52:7"},{"expression":{"id":882,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"4663:14:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":862,"id":883,"nodeType":"Return","src":"4656:21:7"}]},"functionSelector":"a21a23e4","id":885,"implemented":true,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"4422:18:7","nodeType":"FunctionDefinition","overrides":{"id":859,"nodeType":"OverrideSpecifier","overrides":[],"src":"4452:8:7"},"parameters":{"id":858,"nodeType":"ParameterList","parameters":[],"src":"4440:2:7"},"returnParameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"_subId","nameLocation":"4477:6:7","nodeType":"VariableDeclaration","scope":885,"src":"4470:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":860,"name":"uint64","nodeType":"ElementaryTypeName","src":"4470:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4469:15:7"},"scope":1064,"src":"4413:269:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[446],"body":{"id":930,"nodeType":"Block","src":"4882:200:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":900,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"4892:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$567_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":902,"indexExpression":{"id":901,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"4908:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4892:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$567_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":564,"src":"4892:29:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4925:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"4925:7:7","typeDescriptions":{}}},"id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4925:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4892:43:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":913,"nodeType":"IfStatement","src":"4888:92:7","trueBody":{"id":912,"nodeType":"Block","src":"4937:43:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":909,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"4952:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4952:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":911,"nodeType":"RevertStatement","src":"4945:28:7"}]}},{"expression":{"components":[{"expression":{"baseExpression":{"id":914,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"4993:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$567_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":916,"indexExpression":{"id":915,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"5009:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4993:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$567_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":566,"src":"4993:31:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5026:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"baseExpression":{"id":919,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"5029:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$567_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":921,"indexExpression":{"id":920,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"5045:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5029:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$567_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":564,"src":"5029:29:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5074:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5060:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"5064:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":924,"nodeType":"ArrayTypeName","src":"5064:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5060:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"id":928,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4992:85:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_rational_0_by_1_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"tuple(uint96,int_const 0,address,address[] memory)"}},"functionReturnParameters":899,"id":929,"nodeType":"Return","src":"4985:92:7"}]},"functionSelector":"a47c7696","id":931,"implemented":true,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"4695:15:7","nodeType":"FunctionDefinition","overrides":{"id":889,"nodeType":"OverrideSpecifier","overrides":[],"src":"4752:8:7"},"parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"_subId","nameLocation":"4718:6:7","nodeType":"VariableDeclaration","scope":931,"src":"4711:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":886,"name":"uint64","nodeType":"ElementaryTypeName","src":"4711:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4710:15:7"},"returnParameters":{"id":899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"balance","nameLocation":"4788:7:7","nodeType":"VariableDeclaration","scope":931,"src":"4781:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":890,"name":"uint96","nodeType":"ElementaryTypeName","src":"4781:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":893,"mutability":"mutable","name":"reqCount","nameLocation":"4810:8:7","nodeType":"VariableDeclaration","scope":931,"src":"4803:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":892,"name":"uint64","nodeType":"ElementaryTypeName","src":"4803:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":895,"mutability":"mutable","name":"owner","nameLocation":"4834:5:7","nodeType":"VariableDeclaration","scope":931,"src":"4826:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":898,"mutability":"mutable","name":"consumers","nameLocation":"4864:9:7","nodeType":"VariableDeclaration","scope":931,"src":"4847:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"4847:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":897,"nodeType":"ArrayTypeName","src":"4847:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4773:106:7"},"scope":1064,"src":"4686:396:7","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[484],"body":{"id":957,"nodeType":"Block","src":"5181:120:7","statements":[{"eventCall":{"arguments":[{"id":943,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"5213:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":944,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"5221:3:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":945,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"5226:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$567_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":947,"indexExpression":{"id":946,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"5242:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5226:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$567_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":566,"src":"5226:31:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":942,"name":"SubscriptionCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"5192:20:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint64,address,uint256)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5192:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":950,"nodeType":"EmitStatement","src":"5187:71:7"},{"expression":{"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5264:32:7","subExpression":{"components":[{"baseExpression":{"id":951,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"5272:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$567_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":953,"indexExpression":{"id":952,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"5288:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5272:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$567_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}}],"id":954,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"5271:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$567_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":956,"nodeType":"ExpressionStatement","src":"5264:32:7"}]},"functionSelector":"d7ae1d30","id":958,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":939,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"5173:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":940,"kind":"modifierInvocation","modifierName":{"id":938,"name":"onlySubOwner","nodeType":"IdentifierPath","referencedDeclaration":992,"src":"5160:12:7"},"nodeType":"ModifierInvocation","src":"5160:20:7"}],"name":"cancelSubscription","nameLocation":"5095:18:7","nodeType":"FunctionDefinition","overrides":{"id":937,"nodeType":"OverrideSpecifier","overrides":[],"src":"5151:8:7"},"parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"_subId","nameLocation":"5121:6:7","nodeType":"VariableDeclaration","scope":958,"src":"5114:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":932,"name":"uint64","nodeType":"ElementaryTypeName","src":"5114:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"_to","nameLocation":"5137:3:7","nodeType":"VariableDeclaration","scope":958,"src":"5129:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"5129:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5113:28:7"},"returnParameters":{"id":941,"nodeType":"ParameterList","parameters":[],"src":"5181:0:7"},"scope":1064,"src":"5086:215:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":991,"nodeType":"Block","src":"5342:209:7","statements":[{"assignments":[963],"declarations":[{"constant":false,"id":963,"mutability":"mutable","name":"owner","nameLocation":"5356:5:7","nodeType":"VariableDeclaration","scope":991,"src":"5348:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"5348:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":968,"initialValue":{"expression":{"baseExpression":{"id":964,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"5364:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$567_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":966,"indexExpression":{"id":965,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"5380:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5364:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$567_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":967,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":564,"src":"5364:29:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5348:45:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":969,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"5403:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5420:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5412:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":970,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:7","typeDescriptions":{}}},"id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5412:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5403:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":979,"nodeType":"IfStatement","src":"5399:68:7","trueBody":{"id":978,"nodeType":"Block","src":"5424:43:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":975,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"5439:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5439:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":977,"nodeType":"RevertStatement","src":"5432:28:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":980,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5476:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5476:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":982,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"5490:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":989,"nodeType":"IfStatement","src":"5472:68:7","trueBody":{"id":988,"nodeType":"Block","src":"5497:43:7","statements":[{"errorCall":{"arguments":[{"id":985,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"5527:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":984,"name":"MustBeSubOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"5512:14:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5512:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":987,"nodeType":"RevertStatement","src":"5505:28:7"}]}},{"id":990,"nodeType":"PlaceholderStatement","src":"5545:1:7"}]},"id":992,"name":"onlySubOwner","nameLocation":"5314:12:7","nodeType":"ModifierDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"_subId","nameLocation":"5334:6:7","nodeType":"VariableDeclaration","scope":992,"src":"5327:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":959,"name":"uint64","nodeType":"ElementaryTypeName","src":"5327:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5326:15:7"},"src":"5305:246:7","virtual":false,"visibility":"internal"},{"baseFunctions":[409],"body":{"id":1012,"nodeType":"Block","src":"5691:48:7","statements":[{"expression":{"components":[{"hexValue":"33","id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5705:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},{"hexValue":"32303030303030","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5708:7:7","typeDescriptions":{"typeIdentifier":"t_rational_2000000_by_1","typeString":"int_const 2000000"},"value":"2000000"},{"arguments":[{"hexValue":"30","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5731:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5717:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1006,"nodeType":"ArrayTypeName","src":"5721:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5717:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"id":1010,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5704:30:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_3_by_1_$_t_rational_2000000_by_1_$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"tuple(int_const 3,int_const 2000000,bytes32[] memory)"}},"functionReturnParameters":1002,"id":1011,"nodeType":"Return","src":"5697:37:7"}]},"functionSelector":"00012291","id":1013,"implemented":true,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"5564:16:7","nodeType":"FunctionDefinition","overrides":{"id":994,"nodeType":"OverrideSpecifier","overrides":[],"src":"5609:8:7"},"parameters":{"id":993,"nodeType":"ParameterList","parameters":[],"src":"5580:2:7"},"returnParameters":{"id":1002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1013,"src":"5638:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":995,"name":"uint16","nodeType":"ElementaryTypeName","src":"5638:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1013,"src":"5652:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":997,"name":"uint32","nodeType":"ElementaryTypeName","src":"5652:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1013,"src":"5666:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":999,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5666:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1000,"nodeType":"ArrayTypeName","src":"5666:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5630:58:7"},"scope":1064,"src":"5555:184:7","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[468],"body":{"id":1025,"nodeType":"Block","src":"5821:36:7","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5834:17:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":1021,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"5827:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5827:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1024,"nodeType":"ExpressionStatement","src":"5827:25:7"}]},"functionSelector":"7341c10c","id":1026,"implemented":true,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"5752:11:7","nodeType":"FunctionDefinition","overrides":{"id":1019,"nodeType":"OverrideSpecifier","overrides":[],"src":"5812:8:7"},"parameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"_subId","nameLocation":"5771:6:7","nodeType":"VariableDeclaration","scope":1026,"src":"5764:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1014,"name":"uint64","nodeType":"ElementaryTypeName","src":"5764:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1017,"mutability":"mutable","name":"_consumer","nameLocation":"5787:9:7","nodeType":"VariableDeclaration","scope":1026,"src":"5779:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"5779:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5763:34:7"},"returnParameters":{"id":1020,"nodeType":"ParameterList","parameters":[],"src":"5821:0:7"},"scope":1064,"src":"5743:114:7","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[476],"body":{"id":1038,"nodeType":"Block","src":"5942:36:7","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5955:17:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":1034,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"5948:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5948:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1037,"nodeType":"ExpressionStatement","src":"5948:25:7"}]},"functionSelector":"9f87fad7","id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"5870:14:7","nodeType":"FunctionDefinition","overrides":{"id":1032,"nodeType":"OverrideSpecifier","overrides":[],"src":"5933:8:7"},"parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"_subId","nameLocation":"5892:6:7","nodeType":"VariableDeclaration","scope":1039,"src":"5885:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1027,"name":"uint64","nodeType":"ElementaryTypeName","src":"5885:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"_consumer","nameLocation":"5908:9:7","nodeType":"VariableDeclaration","scope":1039,"src":"5900:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5884:34:7"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[],"src":"5942:0:7"},"scope":1064,"src":"5861:117:7","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[454],"body":{"id":1051,"nodeType":"Block","src":"6081:36:7","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6094:17:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":1047,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"6087:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6087:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1050,"nodeType":"ExpressionStatement","src":"6087:25:7"}]},"functionSelector":"04c357cb","id":1052,"implemented":true,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"5991:32:7","nodeType":"FunctionDefinition","overrides":{"id":1045,"nodeType":"OverrideSpecifier","overrides":[],"src":"6072:8:7"},"parameters":{"id":1044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1041,"mutability":"mutable","name":"_subId","nameLocation":"6031:6:7","nodeType":"VariableDeclaration","scope":1052,"src":"6024:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1040,"name":"uint64","nodeType":"ElementaryTypeName","src":"6024:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1043,"mutability":"mutable","name":"_newOwner","nameLocation":"6047:9:7","nodeType":"VariableDeclaration","scope":1052,"src":"6039:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1042,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6023:34:7"},"returnParameters":{"id":1046,"nodeType":"ParameterList","parameters":[],"src":"6081:0:7"},"scope":1064,"src":"5982:135:7","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[460],"body":{"id":1062,"nodeType":"Block","src":"6200:36:7","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6213:17:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":1058,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"6206:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6206:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1061,"nodeType":"ExpressionStatement","src":"6206:25:7"}]},"functionSelector":"82359740","id":1063,"implemented":true,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"6130:31:7","nodeType":"FunctionDefinition","overrides":{"id":1056,"nodeType":"OverrideSpecifier","overrides":[],"src":"6191:8:7"},"parameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"_subId","nameLocation":"6169:6:7","nodeType":"VariableDeclaration","scope":1063,"src":"6162:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1053,"name":"uint64","nodeType":"ElementaryTypeName","src":"6162:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6161:15:7"},"returnParameters":{"id":1057,"nodeType":"ParameterList","parameters":[],"src":"6200:0:7"},"scope":1064,"src":"6121:115:7","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":1065,"src":"254:5984:7","usedErrors":[498,500,504]}],"src":"92:6147:7"},"id":7},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2760],"Ownable":[1177]},"id":1178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1066,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1067,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1178,"sourceUnit":2761,"src":"127:30:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1069,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2760,"src":"683:7:8"},"id":1070,"nodeType":"InheritanceSpecifier","src":"683:7:8"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1068,"nodeType":"StructuredDocumentation","src":"159:494:8","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":1177,"linearizedBaseContracts":[1177,2760],"name":"Ownable","nameLocation":"672:7:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1072,"mutability":"mutable","name":"_owner","nameLocation":"713:6:8","nodeType":"VariableDeclaration","scope":1177,"src":"697:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":1078,"name":"OwnershipTransferred","nameLocation":"732:20:8","nodeType":"EventDefinition","parameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:8","nodeType":"VariableDeclaration","scope":1078,"src":"753:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1073,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1076,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:8","nodeType":"VariableDeclaration","scope":1078,"src":"784:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:8"},"src":"726:84:8"},{"body":{"id":1087,"nodeType":"Block","src":"926:49:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1083,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"955:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1082,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"936:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1086,"nodeType":"ExpressionStatement","src":"936:32:8"}]},"documentation":{"id":1079,"nodeType":"StructuredDocumentation","src":"816:91:8","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":1088,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"923:2:8"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[],"src":"926:0:8"},"scope":1177,"src":"912:63:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1095,"nodeType":"Block","src":"1084:41:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1091,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"1094:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1093,"nodeType":"ExpressionStatement","src":"1094:13:8"},{"id":1094,"nodeType":"PlaceholderStatement","src":"1117:1:8"}]},"documentation":{"id":1089,"nodeType":"StructuredDocumentation","src":"981:77:8","text":" @dev Throws if called by any account other than the owner."},"id":1096,"name":"onlyOwner","nameLocation":"1072:9:8","nodeType":"ModifierDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[],"src":"1081:2:8"},"src":"1063:62:8","virtual":false,"visibility":"internal"},{"body":{"id":1104,"nodeType":"Block","src":"1256:30:8","statements":[{"expression":{"id":1102,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"1273:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1101,"id":1103,"nodeType":"Return","src":"1266:13:8"}]},"documentation":{"id":1097,"nodeType":"StructuredDocumentation","src":"1131:65:8","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":1105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:8","nodeType":"FunctionDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[],"src":"1215:2:8"},"returnParameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1105,"src":"1247:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1099,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:8"},"scope":1177,"src":"1201:85:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1118,"nodeType":"Block","src":"1404:85:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1110,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"1422:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1112,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"1433:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":1109,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1117,"nodeType":"ExpressionStatement","src":"1414:68:8"}]},"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"1292:62:8","text":" @dev Throws if the sender is not the owner."},"id":1119,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:8","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[],"src":"1379:2:8"},"returnParameters":{"id":1108,"nodeType":"ParameterList","parameters":[],"src":"1404:0:8"},"scope":1177,"src":"1359:130:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1132,"nodeType":"Block","src":"1885:47:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1126,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:8","typeDescriptions":{}}},"id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1125,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"1895:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1131,"nodeType":"ExpressionStatement","src":"1895:30:8"}]},"documentation":{"id":1120,"nodeType":"StructuredDocumentation","src":"1495:331:8","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":1133,"implemented":true,"kind":"function","modifiers":[{"id":1123,"kind":"modifierInvocation","modifierName":{"id":1122,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1096,"src":"1875:9:8"},"nodeType":"ModifierInvocation","src":"1875:9:8"}],"name":"renounceOwnership","nameLocation":"1840:17:8","nodeType":"FunctionDefinition","parameters":{"id":1121,"nodeType":"ParameterList","parameters":[],"src":"1857:2:8"},"returnParameters":{"id":1124,"nodeType":"ParameterList","parameters":[],"src":"1885:0:8"},"scope":1177,"src":"1831:101:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1155,"nodeType":"Block","src":"2151:128:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"2169:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:8","typeDescriptions":{}}},"id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":1148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":1141,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1150,"nodeType":"ExpressionStatement","src":"2161:73:8"},{"expression":{"arguments":[{"id":1152,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"2263:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1151,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"2244:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1154,"nodeType":"ExpressionStatement","src":"2244:28:8"}]},"documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"1938:138:8","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":1156,"implemented":true,"kind":"function","modifiers":[{"id":1139,"kind":"modifierInvocation","modifierName":{"id":1138,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1096,"src":"2141:9:8"},"nodeType":"ModifierInvocation","src":"2141:9:8"}],"name":"transferOwnership","nameLocation":"2090:17:8","nodeType":"FunctionDefinition","parameters":{"id":1137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:8","nodeType":"VariableDeclaration","scope":1156,"src":"2108:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:8"},"returnParameters":{"id":1140,"nodeType":"ParameterList","parameters":[],"src":"2151:0:8"},"scope":1177,"src":"2081:198:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1175,"nodeType":"Block","src":"2496:124:8","statements":[{"assignments":[1163],"declarations":[{"constant":false,"id":1163,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:8","nodeType":"VariableDeclaration","scope":1175,"src":"2506:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1165,"initialValue":{"id":1164,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"2525:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:8"},{"expression":{"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1166,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"2541:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1167,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"2550:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1169,"nodeType":"ExpressionStatement","src":"2541:17:8"},{"eventCall":{"arguments":[{"id":1171,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"2594:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1172,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"2604:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1170,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"2573:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1174,"nodeType":"EmitStatement","src":"2568:45:8"}]},"documentation":{"id":1157,"nodeType":"StructuredDocumentation","src":"2285:143:8","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":1176,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:8","nodeType":"FunctionDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:8","nodeType":"VariableDeclaration","scope":1176,"src":"2461:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1158,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:8"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[],"src":"2496:0:8"},"scope":1177,"src":"2433:187:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1178,"src":"654:1968:8","usedErrors":[]}],"src":"102:2521:8"},"id":8},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[2738],"Context":[2760],"ERC165":[2959],"ERC721":[2122],"IERC165":[2971],"IERC721":[2238],"IERC721Metadata":[2408],"IERC721Receiver":[2256],"Math":[3836],"Strings":[2935]},"id":2123,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1179,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1180,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2123,"sourceUnit":2239,"src":"132:23:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":1181,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2123,"sourceUnit":2257,"src":"156:31:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1182,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2123,"sourceUnit":2409,"src":"188:42:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2123,"sourceUnit":2739,"src":"231:33:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1184,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2123,"sourceUnit":2761,"src":"265:33:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2123,"sourceUnit":2936,"src":"299:33:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1186,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2123,"sourceUnit":2960,"src":"333:46:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1188,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2760,"src":"647:7:9"},"id":1189,"nodeType":"InheritanceSpecifier","src":"647:7:9"},{"baseName":{"id":1190,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2959,"src":"656:6:9"},"id":1191,"nodeType":"InheritanceSpecifier","src":"656:6:9"},{"baseName":{"id":1192,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2238,"src":"664:7:9"},"id":1193,"nodeType":"InheritanceSpecifier","src":"664:7:9"},{"baseName":{"id":1194,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":2408,"src":"673:15:9"},"id":1195,"nodeType":"InheritanceSpecifier","src":"673:15:9"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":1187,"nodeType":"StructuredDocumentation","src":"381:246:9","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2122,"linearizedBaseContracts":[2122,2408,2238,2959,2971,2760],"name":"ERC721","nameLocation":"637:6:9","nodeType":"ContractDefinition","nodes":[{"id":1198,"libraryName":{"id":1196,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":2738,"src":"701:7:9"},"nodeType":"UsingForDirective","src":"695:26:9","typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":1201,"libraryName":{"id":1199,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":2935,"src":"732:7:9"},"nodeType":"UsingForDirective","src":"726:26:9","typeName":{"id":1200,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1203,"mutability":"mutable","name":"_name","nameLocation":"791:5:9","nodeType":"VariableDeclaration","scope":2122,"src":"776:20:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1202,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1205,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:9","nodeType":"VariableDeclaration","scope":2122,"src":"823:22:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1204,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1209,"mutability":"mutable","name":"_owners","nameLocation":"934:7:9","nodeType":"VariableDeclaration","scope":2122,"src":"898:43:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1208,"keyType":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1207,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1213,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:9","nodeType":"VariableDeclaration","scope":2122,"src":"992:45:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1212,"keyType":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1211,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1217,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:9","nodeType":"VariableDeclaration","scope":2122,"src":"1093:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1216,"keyType":{"id":1214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1215,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1223,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:9","nodeType":"VariableDeclaration","scope":2122,"src":"1199:71:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1222,"keyType":{"id":1218,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":1221,"keyType":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1220,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1239,"nodeType":"Block","src":"1446:57:9","statements":[{"expression":{"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1231,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"1456:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1232,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"1464:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1234,"nodeType":"ExpressionStatement","src":"1456:13:9"},{"expression":{"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1235,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"1479:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1236,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"1489:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1238,"nodeType":"ExpressionStatement","src":"1479:17:9"}]},"documentation":{"id":1224,"nodeType":"StructuredDocumentation","src":"1277:108:9","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1240,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"mutability":"mutable","name":"name_","nameLocation":"1416:5:9","nodeType":"VariableDeclaration","scope":1240,"src":"1402:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1225,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1228,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:9","nodeType":"VariableDeclaration","scope":1240,"src":"1423:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1227,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:9"},"returnParameters":{"id":1230,"nodeType":"ParameterList","parameters":[],"src":"1446:0:9"},"scope":2122,"src":"1390:113:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2958,2970],"body":{"id":1270,"nodeType":"Block","src":"1678:192:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1251,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"1707:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1253,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"1727:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2238_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2238_$","typeString":"type(contract IERC721)"}],"id":1252,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2238","typeString":"type(contract IERC721)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1257,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"1763:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1259,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"1783:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2408_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2408_$","typeString":"type(contract IERC721Metadata)"}],"id":1258,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2408","typeString":"type(contract IERC721Metadata)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1266,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"1851:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1264,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2122_$","typeString":"type(contract super ERC721)"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2958,"src":"1827:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1250,"id":1269,"nodeType":"Return","src":"1688:175:9"}]},"documentation":{"id":1241,"nodeType":"StructuredDocumentation","src":"1509:56:9","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1271,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:9","nodeType":"FunctionDefinition","overrides":{"id":1247,"nodeType":"OverrideSpecifier","overrides":[{"id":1245,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2959,"src":"1646:6:9"},{"id":1246,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2971,"src":"1654:7:9"}],"src":"1637:25:9"},"parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:9","nodeType":"VariableDeclaration","scope":1271,"src":"1597:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1242,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:9"},"returnParameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1271,"src":"1672:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1248,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:9"},"scope":2122,"src":"1570:300:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2163],"body":{"id":1294,"nodeType":"Block","src":"2010:123:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1281,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"2028:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1282,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:9","typeDescriptions":{}}},"id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":1280,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1289,"nodeType":"ExpressionStatement","src":"2020:73:9"},{"expression":{"baseExpression":{"id":1290,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"2110:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1292,"indexExpression":{"id":1291,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"2120:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1279,"id":1293,"nodeType":"Return","src":"2103:23:9"}]},"documentation":{"id":1272,"nodeType":"StructuredDocumentation","src":"1876:48:9","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1295,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:9","nodeType":"FunctionDefinition","overrides":{"id":1276,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:9"},"parameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"owner","nameLocation":"1956:5:9","nodeType":"VariableDeclaration","scope":1295,"src":"1948:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:9"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1295,"src":"2001:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:9"},"scope":2122,"src":"1929:204:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2171],"body":{"id":1322,"nodeType":"Block","src":"2271:138:9","statements":[{"assignments":[1305],"declarations":[{"constant":false,"id":1305,"mutability":"mutable","name":"owner","nameLocation":"2289:5:9","nodeType":"VariableDeclaration","scope":1322,"src":"2281:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1309,"initialValue":{"arguments":[{"id":1307,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"2306:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1306,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"2297:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2297:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1311,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"2332:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:9","typeDescriptions":{}}},"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2341:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2324:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1319,"nodeType":"ExpressionStatement","src":"2324:56:9"},{"expression":{"id":1320,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"2397:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1303,"id":1321,"nodeType":"Return","src":"2390:12:9"}]},"documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"2139:46:9","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1323,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:9","nodeType":"FunctionDefinition","overrides":{"id":1300,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:9"},"parameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:9","nodeType":"VariableDeclaration","scope":1323,"src":"2207:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:9"},"returnParameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1323,"src":"2262:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1301,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:9"},"scope":2122,"src":"2190:219:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2393],"body":{"id":1332,"nodeType":"Block","src":"2540:29:9","statements":[{"expression":{"id":1330,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"2557:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1329,"id":1331,"nodeType":"Return","src":"2550:12:9"}]},"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"2415:51:9","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1333,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2480:4:9","nodeType":"FunctionDefinition","overrides":{"id":1326,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:9"},"parameters":{"id":1325,"nodeType":"ParameterList","parameters":[],"src":"2484:2:9"},"returnParameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1333,"src":"2525:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1327,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:9"},"scope":2122,"src":"2471:98:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2399],"body":{"id":1342,"nodeType":"Block","src":"2704:31:9","statements":[{"expression":{"id":1340,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"2721:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1339,"id":1341,"nodeType":"Return","src":"2714:14:9"}]},"documentation":{"id":1334,"nodeType":"StructuredDocumentation","src":"2575:53:9","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1343,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2642:6:9","nodeType":"FunctionDefinition","overrides":{"id":1336,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:9"},"parameters":{"id":1335,"nodeType":"ParameterList","parameters":[],"src":"2648:2:9"},"returnParameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1343,"src":"2689:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1337,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:9"},"scope":2122,"src":"2633:102:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2407],"body":{"id":1381,"nodeType":"Block","src":"2889:188:9","statements":[{"expression":{"arguments":[{"id":1353,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"2914:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1352,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"2899:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2899:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1355,"nodeType":"ExpressionStatement","src":"2899:23:9"},{"assignments":[1357],"declarations":[{"constant":false,"id":1357,"mutability":"mutable","name":"baseURI","nameLocation":"2947:7:9","nodeType":"VariableDeclaration","scope":1381,"src":"2933:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1356,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1360,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1358,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"2957:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2957:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:9"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1363,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"2990:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1361,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:9","typeDescriptions":{}}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2984:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2984:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:9","trueExpression":{"arguments":[{"arguments":[{"id":1372,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"3036:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1373,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"3045:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2818,"src":"3045:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3045:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1370,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3019:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1368,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:9","typeDescriptions":{}}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3012:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1351,"id":1380,"nodeType":"Return","src":"2977:93:9"}]},"documentation":{"id":1344,"nodeType":"StructuredDocumentation","src":"2741:55:9","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1382,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2810:8:9","nodeType":"FunctionDefinition","overrides":{"id":1348,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:9"},"parameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"tokenId","nameLocation":"2827:7:9","nodeType":"VariableDeclaration","scope":1382,"src":"2819:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1345,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:9"},"returnParameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1382,"src":"2874:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1349,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:9"},"scope":2122,"src":"2801:276:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1390,"nodeType":"Block","src":"3385:26:9","statements":[{"expression":{"hexValue":"","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1387,"id":1389,"nodeType":"Return","src":"3395:9:9"}]},"documentation":{"id":1383,"nodeType":"StructuredDocumentation","src":"3083:231:9","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1391,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3328:8:9","nodeType":"FunctionDefinition","parameters":{"id":1384,"nodeType":"ParameterList","parameters":[],"src":"3336:2:9"},"returnParameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1391,"src":"3370:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1385,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:9"},"scope":2122,"src":"3319:92:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2211],"body":{"id":1433,"nodeType":"Block","src":"3538:336:9","statements":[{"assignments":[1401],"declarations":[{"constant":false,"id":1401,"mutability":"mutable","name":"owner","nameLocation":"3556:5:9","nodeType":"VariableDeclaration","scope":1433,"src":"3548:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1400,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1406,"initialValue":{"arguments":[{"id":1404,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"3579:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1402,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"3564:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2122_$","typeString":"type(contract ERC721)"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1323,"src":"3564:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3564:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1408,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"3605:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1409,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"3611:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":1407,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3597:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1413,"nodeType":"ExpressionStatement","src":"3597:57:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1415,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"3686:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3686:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1417,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"3702:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1420,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"3728:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1421,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"3735:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3735:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1419,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"3711:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3711:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":1414,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3665:170:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1427,"nodeType":"ExpressionStatement","src":"3665:170:9"},{"expression":{"arguments":[{"id":1429,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"3855:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1430,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"3859:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1428,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"3846:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1432,"nodeType":"ExpressionStatement","src":"3846:21:9"}]},"documentation":{"id":1392,"nodeType":"StructuredDocumentation","src":"3417:46:9","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1434,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3477:7:9","nodeType":"FunctionDefinition","overrides":{"id":1398,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:9"},"parameters":{"id":1397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"to","nameLocation":"3493:2:9","nodeType":"VariableDeclaration","scope":1434,"src":"3485:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"tokenId","nameLocation":"3505:7:9","nodeType":"VariableDeclaration","scope":1434,"src":"3497:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1395,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:9"},"returnParameters":{"id":1399,"nodeType":"ParameterList","parameters":[],"src":"3538:0:9"},"scope":2122,"src":"3468:406:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2227],"body":{"id":1451,"nodeType":"Block","src":"4020:82:9","statements":[{"expression":{"arguments":[{"id":1444,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"4045:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1443,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"4030:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1446,"nodeType":"ExpressionStatement","src":"4030:23:9"},{"expression":{"baseExpression":{"id":1447,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"4071:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1449,"indexExpression":{"id":1448,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"4087:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1442,"id":1450,"nodeType":"Return","src":"4064:31:9"}]},"documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"3880:50:9","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1452,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:9","nodeType":"FunctionDefinition","overrides":{"id":1439,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:9"},"parameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1437,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:9","nodeType":"VariableDeclaration","scope":1452,"src":"3956:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:9"},"returnParameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1452,"src":"4011:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:9"},"scope":2122,"src":"3935:167:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2219],"body":{"id":1468,"nodeType":"Block","src":"4253:69:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1462,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"4282:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1464,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"4296:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1465,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"4306:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1461,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"4263:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1467,"nodeType":"ExpressionStatement","src":"4263:52:9"}]},"documentation":{"id":1453,"nodeType":"StructuredDocumentation","src":"4108:56:9","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1469,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:9","nodeType":"FunctionDefinition","overrides":{"id":1459,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:9"},"parameters":{"id":1458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"operator","nameLocation":"4204:8:9","nodeType":"VariableDeclaration","scope":1469,"src":"4196:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1454,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1457,"mutability":"mutable","name":"approved","nameLocation":"4219:8:9","nodeType":"VariableDeclaration","scope":1469,"src":"4214:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1456,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:9"},"returnParameters":{"id":1460,"nodeType":"ParameterList","parameters":[],"src":"4253:0:9"},"scope":2122,"src":"4169:153:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2237],"body":{"id":1486,"nodeType":"Block","src":"4491:59:9","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1480,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"4508:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1482,"indexExpression":{"id":1481,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"4527:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1484,"indexExpression":{"id":1483,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"4534:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1479,"id":1485,"nodeType":"Return","src":"4501:42:9"}]},"documentation":{"id":1470,"nodeType":"StructuredDocumentation","src":"4328:55:9","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1487,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:9","nodeType":"FunctionDefinition","overrides":{"id":1476,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:9"},"parameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"owner","nameLocation":"4422:5:9","nodeType":"VariableDeclaration","scope":1487,"src":"4414:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1471,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"operator","nameLocation":"4437:8:9","nodeType":"VariableDeclaration","scope":1487,"src":"4429:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1473,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:9"},"returnParameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1487,"src":"4485:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1477,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:9"},"scope":2122,"src":"4388:162:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2203],"body":{"id":1513,"nodeType":"Block","src":"4731:207:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1500,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"4820:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4820:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1502,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"4834:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1499,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"4801:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4801:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4844:47:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1498,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4793:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4793:99:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1506,"nodeType":"ExpressionStatement","src":"4793:99:9"},{"expression":{"arguments":[{"id":1508,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"4913:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1509,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"4919:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1510,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"4923:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1507,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"4903:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4903:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1512,"nodeType":"ExpressionStatement","src":"4903:28:9"}]},"documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"4556:51:9","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1514,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:9","nodeType":"FunctionDefinition","overrides":{"id":1496,"nodeType":"OverrideSpecifier","overrides":[],"src":"4722:8:9"},"parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"mutability":"mutable","name":"from","nameLocation":"4651:4:9","nodeType":"VariableDeclaration","scope":1514,"src":"4643:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1489,"name":"address","nodeType":"ElementaryTypeName","src":"4643:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"to","nameLocation":"4673:2:9","nodeType":"VariableDeclaration","scope":1514,"src":"4665:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1491,"name":"address","nodeType":"ElementaryTypeName","src":"4665:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"tokenId","nameLocation":"4693:7:9","nodeType":"VariableDeclaration","scope":1514,"src":"4685:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"4685:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:73:9"},"returnParameters":{"id":1497,"nodeType":"ParameterList","parameters":[],"src":"4731:0:9"},"scope":2122,"src":"4612:326:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2193],"body":{"id":1532,"nodeType":"Block","src":"5127:56:9","statements":[{"expression":{"arguments":[{"id":1526,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"5154:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1527,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"5160:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1528,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"5164:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5173:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1525,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1533,1563],"referencedDeclaration":1563,"src":"5137:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1531,"nodeType":"ExpressionStatement","src":"5137:39:9"}]},"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"4944:55:9","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1533,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5013:16:9","nodeType":"FunctionDefinition","overrides":{"id":1523,"nodeType":"OverrideSpecifier","overrides":[],"src":"5118:8:9"},"parameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1517,"mutability":"mutable","name":"from","nameLocation":"5047:4:9","nodeType":"VariableDeclaration","scope":1533,"src":"5039:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"5039:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"to","nameLocation":"5069:2:9","nodeType":"VariableDeclaration","scope":1533,"src":"5061:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"tokenId","nameLocation":"5089:7:9","nodeType":"VariableDeclaration","scope":1533,"src":"5081:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1520,"name":"uint256","nodeType":"ElementaryTypeName","src":"5081:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5029:73:9"},"returnParameters":{"id":1524,"nodeType":"ParameterList","parameters":[],"src":"5127:0:9"},"scope":2122,"src":"5004:179:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2183],"body":{"id":1562,"nodeType":"Block","src":"5399:164:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1548,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"5436:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5436:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1550,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"5450:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1547,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"5417:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5417:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5460:47:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1546,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5409:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5409:99:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1554,"nodeType":"ExpressionStatement","src":"5409:99:9"},{"expression":{"arguments":[{"id":1556,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"5532:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1557,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"5538:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1558,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"5542:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1559,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"5551:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1555,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"5518:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5518:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1561,"nodeType":"ExpressionStatement","src":"5518:38:9"}]},"documentation":{"id":1534,"nodeType":"StructuredDocumentation","src":"5189:55:9","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1563,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5258:16:9","nodeType":"FunctionDefinition","overrides":{"id":1544,"nodeType":"OverrideSpecifier","overrides":[],"src":"5390:8:9"},"parameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"from","nameLocation":"5292:4:9","nodeType":"VariableDeclaration","scope":1563,"src":"5284:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1535,"name":"address","nodeType":"ElementaryTypeName","src":"5284:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1538,"mutability":"mutable","name":"to","nameLocation":"5314:2:9","nodeType":"VariableDeclaration","scope":1563,"src":"5306:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1537,"name":"address","nodeType":"ElementaryTypeName","src":"5306:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1540,"mutability":"mutable","name":"tokenId","nameLocation":"5334:7:9","nodeType":"VariableDeclaration","scope":1563,"src":"5326:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1539,"name":"uint256","nodeType":"ElementaryTypeName","src":"5326:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1542,"mutability":"mutable","name":"data","nameLocation":"5364:4:9","nodeType":"VariableDeclaration","scope":1563,"src":"5351:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1541,"name":"bytes","nodeType":"ElementaryTypeName","src":"5351:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5274:100:9"},"returnParameters":{"id":1545,"nodeType":"ParameterList","parameters":[],"src":"5399:0:9"},"scope":2122,"src":"5249:314:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1591,"nodeType":"Block","src":"6564:165:9","statements":[{"expression":{"arguments":[{"id":1576,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"6584:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1577,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"6590:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1578,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"6594:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1575,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"6574:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6574:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1580,"nodeType":"ExpressionStatement","src":"6574:28:9"},{"expression":{"arguments":[{"arguments":[{"id":1583,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"6643:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1584,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"6649:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1585,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"6653:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1586,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"6662:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1582,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"6620:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6620:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6669:52:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1581,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6612:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6612:110:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1590,"nodeType":"ExpressionStatement","src":"6612:110:9"}]},"documentation":{"id":1564,"nodeType":"StructuredDocumentation","src":"5569:850:9","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1592,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6433:13:9","nodeType":"FunctionDefinition","parameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1566,"mutability":"mutable","name":"from","nameLocation":"6464:4:9","nodeType":"VariableDeclaration","scope":1592,"src":"6456:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1565,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1568,"mutability":"mutable","name":"to","nameLocation":"6486:2:9","nodeType":"VariableDeclaration","scope":1592,"src":"6478:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1567,"name":"address","nodeType":"ElementaryTypeName","src":"6478:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1570,"mutability":"mutable","name":"tokenId","nameLocation":"6506:7:9","nodeType":"VariableDeclaration","scope":1592,"src":"6498:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"6498:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1572,"mutability":"mutable","name":"data","nameLocation":"6536:4:9","nodeType":"VariableDeclaration","scope":1592,"src":"6523:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1571,"name":"bytes","nodeType":"ElementaryTypeName","src":"6523:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6446:100:9"},"returnParameters":{"id":1574,"nodeType":"ParameterList","parameters":[],"src":"6564:0:9"},"scope":2122,"src":"6424:305:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1604,"nodeType":"Block","src":"6913:40:9","statements":[{"expression":{"baseExpression":{"id":1600,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6930:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1602,"indexExpression":{"id":1601,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"6938:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6930:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1599,"id":1603,"nodeType":"Return","src":"6923:23:9"}]},"documentation":{"id":1593,"nodeType":"StructuredDocumentation","src":"6735:98:9","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":1605,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6847:8:9","nodeType":"FunctionDefinition","parameters":{"id":1596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"tokenId","nameLocation":"6864:7:9","nodeType":"VariableDeclaration","scope":1605,"src":"6856:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1594,"name":"uint256","nodeType":"ElementaryTypeName","src":"6856:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6855:17:9"},"returnParameters":{"id":1599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1605,"src":"6904:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"6904:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6903:9:9"},"scope":2122,"src":"6838:115:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1622,"nodeType":"Block","src":"7327:55:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1614,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"7353:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1613,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"7344:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7373:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7365:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1616,"name":"address","nodeType":"ElementaryTypeName","src":"7365:7:9","typeDescriptions":{}}},"id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7365:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7344:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1612,"id":1621,"nodeType":"Return","src":"7337:38:9"}]},"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"6959:292:9","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":1623,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7265:7:9","nodeType":"FunctionDefinition","parameters":{"id":1609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1608,"mutability":"mutable","name":"tokenId","nameLocation":"7281:7:9","nodeType":"VariableDeclaration","scope":1623,"src":"7273:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1607,"name":"uint256","nodeType":"ElementaryTypeName","src":"7273:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7272:17:9"},"returnParameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1623,"src":"7321:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1610,"name":"bool","nodeType":"ElementaryTypeName","src":"7321:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7320:6:9"},"scope":2122,"src":"7256:126:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1656,"nodeType":"Block","src":"7639:162:9","statements":[{"assignments":[1634],"declarations":[{"constant":false,"id":1634,"mutability":"mutable","name":"owner","nameLocation":"7657:5:9","nodeType":"VariableDeclaration","scope":1656,"src":"7649:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1633,"name":"address","nodeType":"ElementaryTypeName","src":"7649:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1639,"initialValue":{"arguments":[{"id":1637,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7680:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1635,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"7665:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2122_$","typeString":"type(contract ERC721)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1323,"src":"7665:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7665:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7649:39:9"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1640,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"7706:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1641,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"7717:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7706:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1644,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"7743:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1645,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"7750:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1643,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"7726:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7726:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7706:52:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1649,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7774:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1648,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"7762:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7762:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1651,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"7786:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7762:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7706:87:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7705:89:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1632,"id":1655,"nodeType":"Return","src":"7698:96:9"}]},"documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"7388:147:9","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7549:18:9","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"spender","nameLocation":"7576:7:9","nodeType":"VariableDeclaration","scope":1657,"src":"7568:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1625,"name":"address","nodeType":"ElementaryTypeName","src":"7568:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1628,"mutability":"mutable","name":"tokenId","nameLocation":"7593:7:9","nodeType":"VariableDeclaration","scope":1657,"src":"7585:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1627,"name":"uint256","nodeType":"ElementaryTypeName","src":"7585:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7567:34:9"},"returnParameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1657,"src":"7633:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1630,"name":"bool","nodeType":"ElementaryTypeName","src":"7633:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7632:6:9"},"scope":2122,"src":"7540:261:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1671,"nodeType":"Block","src":"8196:43:9","statements":[{"expression":{"arguments":[{"id":1666,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"8216:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1667,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"8220:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8229:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1665,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1672,1701],"referencedDeclaration":1701,"src":"8206:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8206:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1670,"nodeType":"ExpressionStatement","src":"8206:26:9"}]},"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"7807:319:9","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1672,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8140:9:9","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"to","nameLocation":"8158:2:9","nodeType":"VariableDeclaration","scope":1672,"src":"8150:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1659,"name":"address","nodeType":"ElementaryTypeName","src":"8150:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"tokenId","nameLocation":"8170:7:9","nodeType":"VariableDeclaration","scope":1672,"src":"8162:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"8162:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8149:29:9"},"returnParameters":{"id":1664,"nodeType":"ParameterList","parameters":[],"src":"8196:0:9"},"scope":2122,"src":"8131:108:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1700,"nodeType":"Block","src":"8574:195:9","statements":[{"expression":{"arguments":[{"id":1683,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"8590:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1684,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"8594:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1682,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"8584:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8584:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1686,"nodeType":"ExpressionStatement","src":"8584:18:9"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8664:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8656:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1689,"name":"address","nodeType":"ElementaryTypeName","src":"8656:7:9","typeDescriptions":{}}},"id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8656:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1693,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"8668:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1694,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"8672:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1695,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"8681:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1688,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"8633:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8633:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8700:52:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1687,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8612:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8612:150:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1699,"nodeType":"ExpressionStatement","src":"8612:150:9"}]},"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"8245:210:9","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1701,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8469:9:9","nodeType":"FunctionDefinition","parameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"to","nameLocation":"8496:2:9","nodeType":"VariableDeclaration","scope":1701,"src":"8488:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1674,"name":"address","nodeType":"ElementaryTypeName","src":"8488:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1677,"mutability":"mutable","name":"tokenId","nameLocation":"8516:7:9","nodeType":"VariableDeclaration","scope":1701,"src":"8508:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1676,"name":"uint256","nodeType":"ElementaryTypeName","src":"8508:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1679,"mutability":"mutable","name":"data","nameLocation":"8546:4:9","nodeType":"VariableDeclaration","scope":1701,"src":"8533:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1678,"name":"bytes","nodeType":"ElementaryTypeName","src":"8533:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8478:78:9"},"returnParameters":{"id":1681,"nodeType":"ParameterList","parameters":[],"src":"8574:0:9"},"scope":2122,"src":"8460:309:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1777,"nodeType":"Block","src":"9152:859:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1710,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"9170:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9184:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9176:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1711,"name":"address","nodeType":"ElementaryTypeName","src":"9176:7:9","typeDescriptions":{}}},"id":1714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9176:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9170:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9188:34:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":1709,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9162:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9162:61:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1718,"nodeType":"ExpressionStatement","src":"9162:61:9"},{"expression":{"arguments":[{"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9241:17:9","subExpression":{"arguments":[{"id":1721,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"9250:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1720,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"9242:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9242:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9260:30:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1719,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9233:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9233:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1726,"nodeType":"ExpressionStatement","src":"9233:58:9"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9331:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9323:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1728,"name":"address","nodeType":"ElementaryTypeName","src":"9323:7:9","typeDescriptions":{}}},"id":1731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9323:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1732,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"9335:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1733,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"9339:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9348:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1727,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"9302:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9302:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1736,"nodeType":"ExpressionStatement","src":"9302:48:9"},{"expression":{"arguments":[{"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9445:17:9","subExpression":{"arguments":[{"id":1739,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"9454:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1738,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"9446:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9446:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9464:30:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1737,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9437:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9437:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1744,"nodeType":"ExpressionStatement","src":"9437:58:9"},{"id":1751,"nodeType":"UncheckedBlock","src":"9506:360:9","statements":[{"expression":{"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1745,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"9837:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1747,"indexExpression":{"id":1746,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"9847:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9837:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9854:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9837:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1750,"nodeType":"ExpressionStatement","src":"9837:18:9"}]},{"expression":{"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1752,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"9876:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1754,"indexExpression":{"id":1753,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"9884:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9876:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1755,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"9895:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9876:21:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1757,"nodeType":"ExpressionStatement","src":"9876:21:9"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1759,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:9","typeDescriptions":{}}},"id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9922:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1763,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"9934:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1764,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"9938:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1758,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"9913:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9913:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1766,"nodeType":"EmitStatement","src":"9908:38:9"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9985:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9977:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"9977:7:9","typeDescriptions":{}}},"id":1771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9977:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1772,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"9989:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1773,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"9993:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10002:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1767,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"9957:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9957:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1776,"nodeType":"ExpressionStatement","src":"9957:47:9"}]},"documentation":{"id":1702,"nodeType":"StructuredDocumentation","src":"8775:311:9","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1778,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9100:5:9","nodeType":"FunctionDefinition","parameters":{"id":1707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"to","nameLocation":"9114:2:9","nodeType":"VariableDeclaration","scope":1778,"src":"9106:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1703,"name":"address","nodeType":"ElementaryTypeName","src":"9106:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1706,"mutability":"mutable","name":"tokenId","nameLocation":"9126:7:9","nodeType":"VariableDeclaration","scope":1778,"src":"9118:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"9118:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9105:29:9"},"returnParameters":{"id":1708,"nodeType":"ParameterList","parameters":[],"src":"9152:0:9"},"scope":2122,"src":"9091:920:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1844,"nodeType":"Block","src":"10386:713:9","statements":[{"assignments":[1785],"declarations":[{"constant":false,"id":1785,"mutability":"mutable","name":"owner","nameLocation":"10404:5:9","nodeType":"VariableDeclaration","scope":1844,"src":"10396:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1784,"name":"address","nodeType":"ElementaryTypeName","src":"10396:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1790,"initialValue":{"arguments":[{"id":1788,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"10427:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1786,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"10412:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2122_$","typeString":"type(contract ERC721)"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1323,"src":"10412:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10412:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10396:39:9"},{"expression":{"arguments":[{"id":1792,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"10467:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10482:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10474:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1793,"name":"address","nodeType":"ElementaryTypeName","src":"10474:7:9","typeDescriptions":{}}},"id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10474:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1797,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"10486:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10495:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1791,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"10446:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10446:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1800,"nodeType":"ExpressionStatement","src":"10446:51:9"},{"expression":{"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1801,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"10599:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1804,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"10622:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1802,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"10607:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2122_$","typeString":"type(contract ERC721)"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1323,"src":"10607:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10607:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10599:31:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1807,"nodeType":"ExpressionStatement","src":"10599:31:9"},{"expression":{"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10668:31:9","subExpression":{"baseExpression":{"id":1808,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"10675:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1810,"indexExpression":{"id":1809,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"10691:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10675:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1812,"nodeType":"ExpressionStatement","src":"10668:31:9"},{"id":1819,"nodeType":"UncheckedBlock","src":"10710:237:9","statements":[{"expression":{"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1813,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"10915:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1815,"indexExpression":{"id":1814,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"10925:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10915:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10935:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10915:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1818,"nodeType":"ExpressionStatement","src":"10915:21:9"}]},{"expression":{"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10956:23:9","subExpression":{"baseExpression":{"id":1820,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"10963:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1822,"indexExpression":{"id":1821,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"10971:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10963:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1824,"nodeType":"ExpressionStatement","src":"10956:23:9"},{"eventCall":{"arguments":[{"id":1826,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"11004:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11019:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11011:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"11011:7:9","typeDescriptions":{}}},"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11011:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1831,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"11023:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1825,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"10995:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10995:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1833,"nodeType":"EmitStatement","src":"10990:41:9"},{"expression":{"arguments":[{"id":1835,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"11062:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11077:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11069:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1836,"name":"address","nodeType":"ElementaryTypeName","src":"11069:7:9","typeDescriptions":{}}},"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11069:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1840,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"11081:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11090:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1834,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"11042:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11042:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1843,"nodeType":"ExpressionStatement","src":"11042:50:9"}]},"documentation":{"id":1779,"nodeType":"StructuredDocumentation","src":"10017:315:9","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1845,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10346:5:9","nodeType":"FunctionDefinition","parameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"tokenId","nameLocation":"10360:7:9","nodeType":"VariableDeclaration","scope":1845,"src":"10352:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"10352:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10351:17:9"},"returnParameters":{"id":1783,"nodeType":"ParameterList","parameters":[],"src":"10386:0:9"},"scope":2122,"src":"10337:762:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1929,"nodeType":"Block","src":"11532:1124:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1858,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"11565:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1856,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"11550:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2122_$","typeString":"type(contract ERC721)"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1323,"src":"11550:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11550:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1860,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"11577:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11550:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11583:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1855,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11542:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11542:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1864,"nodeType":"ExpressionStatement","src":"11542:81:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1866,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"11641:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11655:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11647:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1867,"name":"address","nodeType":"ElementaryTypeName","src":"11647:7:9","typeDescriptions":{}}},"id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11647:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11641:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11659:38:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":1865,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11633:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11633:65:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1874,"nodeType":"ExpressionStatement","src":"11633:65:9"},{"expression":{"arguments":[{"id":1876,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"11730:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1877,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"11736:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1878,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"11740:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11749:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1875,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"11709:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11709:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1881,"nodeType":"ExpressionStatement","src":"11709:42:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1885,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"11866:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1883,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"11851:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2122_$","typeString":"type(contract ERC721)"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1323,"src":"11851:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11851:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1887,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"11878:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11851:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11884:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1882,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11843:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11843:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1891,"nodeType":"ExpressionStatement","src":"11843:81:9"},{"expression":{"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11986:31:9","subExpression":{"baseExpression":{"id":1892,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"11993:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1894,"indexExpression":{"id":1893,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"12009:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11993:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1896,"nodeType":"ExpressionStatement","src":"11986:31:9"},{"id":1909,"nodeType":"UncheckedBlock","src":"12028:496:9","statements":[{"expression":{"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1897,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"12461:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1899,"indexExpression":{"id":1898,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"12471:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12461:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12480:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12461:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1902,"nodeType":"ExpressionStatement","src":"12461:20:9"},{"expression":{"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1903,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"12495:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1905,"indexExpression":{"id":1904,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"12505:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12495:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12512:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12495:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1908,"nodeType":"ExpressionStatement","src":"12495:18:9"}]},{"expression":{"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1910,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12533:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1912,"indexExpression":{"id":1911,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"12541:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12533:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1913,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"12552:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12533:21:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1915,"nodeType":"ExpressionStatement","src":"12533:21:9"},{"eventCall":{"arguments":[{"id":1917,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"12579:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1918,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"12585:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1919,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"12589:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1916,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"12570:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12570:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1921,"nodeType":"EmitStatement","src":"12565:32:9"},{"expression":{"arguments":[{"id":1923,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"12628:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1924,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"12634:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1925,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"12638:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12647:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1922,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"12608:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12608:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1928,"nodeType":"ExpressionStatement","src":"12608:41:9"}]},"documentation":{"id":1846,"nodeType":"StructuredDocumentation","src":"11105:313:9","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1930,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11432:9:9","nodeType":"FunctionDefinition","parameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"from","nameLocation":"11459:4:9","nodeType":"VariableDeclaration","scope":1930,"src":"11451:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1847,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"to","nameLocation":"11481:2:9","nodeType":"VariableDeclaration","scope":1930,"src":"11473:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"11473:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"tokenId","nameLocation":"11501:7:9","nodeType":"VariableDeclaration","scope":1930,"src":"11493:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"11493:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11441:73:9"},"returnParameters":{"id":1854,"nodeType":"ParameterList","parameters":[],"src":"11532:0:9"},"scope":2122,"src":"11423:1233:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1953,"nodeType":"Block","src":"12832:107:9","statements":[{"expression":{"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1938,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"12842:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1940,"indexExpression":{"id":1939,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"12858:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12842:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1941,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"12869:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12842:29:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1943,"nodeType":"ExpressionStatement","src":"12842:29:9"},{"eventCall":{"arguments":[{"arguments":[{"id":1947,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"12910:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1945,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"12895:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2122_$","typeString":"type(contract ERC721)"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1323,"src":"12895:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12895:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1949,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"12920:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1950,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"12924:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1944,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"12886:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12886:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1952,"nodeType":"EmitStatement","src":"12881:51:9"}]},"documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"12662:101:9","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":1954,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12777:8:9","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"to","nameLocation":"12794:2:9","nodeType":"VariableDeclaration","scope":1954,"src":"12786:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1932,"name":"address","nodeType":"ElementaryTypeName","src":"12786:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1935,"mutability":"mutable","name":"tokenId","nameLocation":"12806:7:9","nodeType":"VariableDeclaration","scope":1954,"src":"12798:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"12798:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12785:29:9"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[],"src":"12832:0:9"},"scope":2122,"src":"12768:171:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1985,"nodeType":"Block","src":"13198:184:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1965,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"13216:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1966,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"13225:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13216:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13235:27:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":1964,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13208:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13208:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1970,"nodeType":"ExpressionStatement","src":"13208:55:9"},{"expression":{"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1971,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"13273:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1974,"indexExpression":{"id":1972,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"13292:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13273:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1975,"indexExpression":{"id":1973,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"13299:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13273:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1976,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"13311:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13273:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1978,"nodeType":"ExpressionStatement","src":"13273:46:9"},{"eventCall":{"arguments":[{"id":1980,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"13349:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1981,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"13356:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1982,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"13366:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1979,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"13334:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13334:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1984,"nodeType":"EmitStatement","src":"13329:46:9"}]},"documentation":{"id":1955,"nodeType":"StructuredDocumentation","src":"12945:125:9","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1986,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13084:18:9","nodeType":"FunctionDefinition","parameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1957,"mutability":"mutable","name":"owner","nameLocation":"13120:5:9","nodeType":"VariableDeclaration","scope":1986,"src":"13112:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1956,"name":"address","nodeType":"ElementaryTypeName","src":"13112:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1959,"mutability":"mutable","name":"operator","nameLocation":"13143:8:9","nodeType":"VariableDeclaration","scope":1986,"src":"13135:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"13135:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1961,"mutability":"mutable","name":"approved","nameLocation":"13166:8:9","nodeType":"VariableDeclaration","scope":1986,"src":"13161:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1960,"name":"bool","nodeType":"ElementaryTypeName","src":"13161:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13102:78:9"},"returnParameters":{"id":1963,"nodeType":"ParameterList","parameters":[],"src":"13198:0:9"},"scope":2122,"src":"13075:307:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1999,"nodeType":"Block","src":"13529:70:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1994,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"13555:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1993,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"13547:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13547:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13565:26:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1992,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13539:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13539:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1998,"nodeType":"ExpressionStatement","src":"13539:53:9"}]},"documentation":{"id":1987,"nodeType":"StructuredDocumentation","src":"13388:73:9","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":2000,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13475:14:9","nodeType":"FunctionDefinition","parameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"tokenId","nameLocation":"13498:7:9","nodeType":"VariableDeclaration","scope":2000,"src":"13490:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1988,"name":"uint256","nodeType":"ElementaryTypeName","src":"13490:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13489:17:9"},"returnParameters":{"id":1991,"nodeType":"ParameterList","parameters":[],"src":"13529:0:9"},"scope":2122,"src":"13466:133:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2061,"nodeType":"Block","src":"14306:676:9","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2014,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"14320:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2426,"src":"14320:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14320:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2059,"nodeType":"Block","src":"14940:36:9","statements":[{"expression":{"hexValue":"74727565","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14961:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2013,"id":2058,"nodeType":"Return","src":"14954:11:9"}]},"id":2060,"nodeType":"IfStatement","src":"14316:660:9","trueBody":{"id":2056,"nodeType":"Block","src":"14337:597:9","statements":[{"clauses":[{"block":{"id":2036,"nodeType":"Block","src":"14451:91:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2030,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"14476:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2031,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"14486:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2256_$","typeString":"type(contract IERC721Receiver)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2255,"src":"14486:32:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"14486:41:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14476:51:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2013,"id":2035,"nodeType":"Return","src":"14469:58:9"}]},"errorName":"","id":2037,"nodeType":"TryCatchClause","parameters":{"id":2029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2028,"mutability":"mutable","name":"retval","nameLocation":"14443:6:9","nodeType":"VariableDeclaration","scope":2037,"src":"14436:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2027,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14436:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14435:15:9"},"src":"14427:115:9"},{"block":{"id":2053,"nodeType":"Block","src":"14571:353:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2041,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"14593:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14593:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14610:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14593:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2051,"nodeType":"Block","src":"14720:190:9","statements":[{"AST":{"nodeType":"YulBlock","src":"14806:86:9","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14843:2:9","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14847:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14839:3:9"},"nodeType":"YulFunctionCall","src":"14839:15:9"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14862:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14856:5:9"},"nodeType":"YulFunctionCall","src":"14856:13:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14832:6:9"},"nodeType":"YulFunctionCall","src":"14832:38:9"},"nodeType":"YulExpressionStatement","src":"14832:38:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2039,"isOffset":false,"isSlot":false,"src":"14847:6:9","valueSize":1},{"declaration":2039,"isOffset":false,"isSlot":false,"src":"14862:6:9","valueSize":1}],"id":2050,"nodeType":"InlineAssembly","src":"14797:95:9"}]},"id":2052,"nodeType":"IfStatement","src":"14589:321:9","trueBody":{"id":2049,"nodeType":"Block","src":"14613:101:9","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14642:52:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":2045,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14635:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14635:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2048,"nodeType":"ExpressionStatement","src":"14635:60:9"}]}}]},"errorName":"","id":2054,"nodeType":"TryCatchClause","parameters":{"id":2040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2039,"mutability":"mutable","name":"reason","nameLocation":"14563:6:9","nodeType":"VariableDeclaration","scope":2054,"src":"14550:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2038,"name":"bytes","nodeType":"ElementaryTypeName","src":"14550:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14549:21:9"},"src":"14543:381:9"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2021,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"14392:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14392:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2023,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"14406:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2024,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"14412:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2025,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"14421:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2018,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"14371:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2017,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"14355:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2256_$","typeString":"type(contract IERC721Receiver)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14355:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2256","typeString":"contract IERC721Receiver"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2255,"src":"14355:36:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14355:71:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2055,"nodeType":"TryStatement","src":"14351:573:9"}]}}]},"documentation":{"id":2001,"nodeType":"StructuredDocumentation","src":"13605:541:9","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":2062,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"14160:22:9","nodeType":"FunctionDefinition","parameters":{"id":2010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"from","nameLocation":"14200:4:9","nodeType":"VariableDeclaration","scope":2062,"src":"14192:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2002,"name":"address","nodeType":"ElementaryTypeName","src":"14192:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2005,"mutability":"mutable","name":"to","nameLocation":"14222:2:9","nodeType":"VariableDeclaration","scope":2062,"src":"14214:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2004,"name":"address","nodeType":"ElementaryTypeName","src":"14214:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2007,"mutability":"mutable","name":"tokenId","nameLocation":"14242:7:9","nodeType":"VariableDeclaration","scope":2062,"src":"14234:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"14234:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2009,"mutability":"mutable","name":"data","nameLocation":"14272:4:9","nodeType":"VariableDeclaration","scope":2062,"src":"14259:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2008,"name":"bytes","nodeType":"ElementaryTypeName","src":"14259:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14182:100:9"},"returnParameters":{"id":2013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2062,"src":"14300:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2011,"name":"bool","nodeType":"ElementaryTypeName","src":"14300:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14299:6:9"},"scope":2122,"src":"14151:831:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2107,"nodeType":"Block","src":"15856:238:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2074,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"15870:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15882:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15870:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2106,"nodeType":"IfStatement","src":"15866:222:9","trueBody":{"id":2105,"nodeType":"Block","src":"15885:203:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2077,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"15903:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15919:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15911:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2078,"name":"address","nodeType":"ElementaryTypeName","src":"15911:7:9","typeDescriptions":{}}},"id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15911:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15903:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2090,"nodeType":"IfStatement","src":"15899:85:9","trueBody":{"id":2089,"nodeType":"Block","src":"15923:61:9","statements":[{"expression":{"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2083,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"15941:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2085,"indexExpression":{"id":2084,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"15951:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15941:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2086,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"15960:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15941:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2088,"nodeType":"ExpressionStatement","src":"15941:28:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2091,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"16001:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16015:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16007:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2092,"name":"address","nodeType":"ElementaryTypeName","src":"16007:7:9","typeDescriptions":{}}},"id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16007:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16001:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2104,"nodeType":"IfStatement","src":"15997:81:9","trueBody":{"id":2103,"nodeType":"Block","src":"16019:59:9","statements":[{"expression":{"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2097,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"16037:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2099,"indexExpression":{"id":2098,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"16047:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16037:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2100,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"16054:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16037:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2102,"nodeType":"ExpressionStatement","src":"16037:26:9"}]}}]}}]},"documentation":{"id":2063,"nodeType":"StructuredDocumentation","src":"14988:705:9","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2108,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"15707:20:9","nodeType":"FunctionDefinition","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"mutability":"mutable","name":"from","nameLocation":"15745:4:9","nodeType":"VariableDeclaration","scope":2108,"src":"15737:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2064,"name":"address","nodeType":"ElementaryTypeName","src":"15737:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2067,"mutability":"mutable","name":"to","nameLocation":"15767:2:9","nodeType":"VariableDeclaration","scope":2108,"src":"15759:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2066,"name":"address","nodeType":"ElementaryTypeName","src":"15759:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2108,"src":"15779:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"15779:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2071,"mutability":"mutable","name":"batchSize","nameLocation":"15823:9:9","nodeType":"VariableDeclaration","scope":2108,"src":"15815:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2070,"name":"uint256","nodeType":"ElementaryTypeName","src":"15815:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15727:111:9"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[],"src":"15856:0:9"},"scope":2122,"src":"15698:396:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2120,"nodeType":"Block","src":"16951:2:9","statements":[]},"documentation":{"id":2109,"nodeType":"StructuredDocumentation","src":"16100:695:9","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2121,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16809:19:9","nodeType":"FunctionDefinition","parameters":{"id":2118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2111,"mutability":"mutable","name":"from","nameLocation":"16846:4:9","nodeType":"VariableDeclaration","scope":2121,"src":"16838:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2110,"name":"address","nodeType":"ElementaryTypeName","src":"16838:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2113,"mutability":"mutable","name":"to","nameLocation":"16868:2:9","nodeType":"VariableDeclaration","scope":2121,"src":"16860:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2112,"name":"address","nodeType":"ElementaryTypeName","src":"16860:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2115,"mutability":"mutable","name":"firstTokenId","nameLocation":"16888:12:9","nodeType":"VariableDeclaration","scope":2121,"src":"16880:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2114,"name":"uint256","nodeType":"ElementaryTypeName","src":"16880:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2117,"mutability":"mutable","name":"batchSize","nameLocation":"16918:9:9","nodeType":"VariableDeclaration","scope":2121,"src":"16910:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2116,"name":"uint256","nodeType":"ElementaryTypeName","src":"16910:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16828:105:9"},"returnParameters":{"id":2119,"nodeType":"ParameterList","parameters":[],"src":"16951:0:9"},"scope":2122,"src":"16800:153:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2123,"src":"628:16327:9","usedErrors":[]}],"src":"107:16849:9"},"id":9},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2971],"IERC721":[2238]},"id":2239,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2124,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:10"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2125,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2239,"sourceUnit":2972,"src":"133:47:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2127,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2971,"src":"271:7:10"},"id":2128,"nodeType":"InheritanceSpecifier","src":"271:7:10"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2126,"nodeType":"StructuredDocumentation","src":"182:67:10","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":2238,"linearizedBaseContracts":[2238,2971],"name":"IERC721","nameLocation":"260:7:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"285:88:10","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":2137,"name":"Transfer","nameLocation":"384:8:10","nodeType":"EventDefinition","parameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:10","nodeType":"VariableDeclaration","scope":2137,"src":"393:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2130,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2133,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:10","nodeType":"VariableDeclaration","scope":2137,"src":"415:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2132,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2135,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:10","nodeType":"VariableDeclaration","scope":2137,"src":"435:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2134,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:10"},"src":"378:82:10"},{"anonymous":false,"documentation":{"id":2138,"nodeType":"StructuredDocumentation","src":"466:94:10","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":2146,"name":"Approval","nameLocation":"571:8:10","nodeType":"EventDefinition","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:10","nodeType":"VariableDeclaration","scope":2146,"src":"580:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2139,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2142,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:10","nodeType":"VariableDeclaration","scope":2146,"src":"603:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2141,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2144,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:10","nodeType":"VariableDeclaration","scope":2146,"src":"629:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2143,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:10"},"src":"565:89:10"},{"anonymous":false,"documentation":{"id":2147,"nodeType":"StructuredDocumentation","src":"660:117:10","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":2155,"name":"ApprovalForAll","nameLocation":"788:14:10","nodeType":"EventDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:10","nodeType":"VariableDeclaration","scope":2155,"src":"803:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2148,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2151,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:10","nodeType":"VariableDeclaration","scope":2155,"src":"826:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2150,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2153,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:10","nodeType":"VariableDeclaration","scope":2155,"src":"852:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2152,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:10"},"src":"782:85:10"},{"documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"873:76:10","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2163,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:10","nodeType":"FunctionDefinition","parameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"owner","nameLocation":"981:5:10","nodeType":"VariableDeclaration","scope":2163,"src":"973:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2157,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:10"},"returnParameters":{"id":2162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"balance","nameLocation":"1019:7:10","nodeType":"VariableDeclaration","scope":2163,"src":"1011:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2160,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:10"},"scope":2238,"src":"954:74:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2164,"nodeType":"StructuredDocumentation","src":"1034:131:10","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2171,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:10","nodeType":"FunctionDefinition","parameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:10","nodeType":"VariableDeclaration","scope":2171,"src":"1187:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2165,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:10"},"returnParameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2169,"mutability":"mutable","name":"owner","nameLocation":"1235:5:10","nodeType":"VariableDeclaration","scope":2171,"src":"1227:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2168,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:10"},"scope":2238,"src":"1170:72:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2172,"nodeType":"StructuredDocumentation","src":"1248:556:10","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2183,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:10","nodeType":"FunctionDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"from","nameLocation":"1852:4:10","nodeType":"VariableDeclaration","scope":2183,"src":"1844:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2173,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2176,"mutability":"mutable","name":"to","nameLocation":"1874:2:10","nodeType":"VariableDeclaration","scope":2183,"src":"1866:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2175,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:10","nodeType":"VariableDeclaration","scope":2183,"src":"1886:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"data","nameLocation":"1926:4:10","nodeType":"VariableDeclaration","scope":2183,"src":"1911:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2179,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:10"},"returnParameters":{"id":2182,"nodeType":"ParameterList","parameters":[],"src":"1945:0:10"},"scope":2238,"src":"1809:137:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"1952:687:10","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2193,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:10","nodeType":"FunctionDefinition","parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"from","nameLocation":"2687:4:10","nodeType":"VariableDeclaration","scope":2193,"src":"2679:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2185,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2188,"mutability":"mutable","name":"to","nameLocation":"2709:2:10","nodeType":"VariableDeclaration","scope":2193,"src":"2701:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2187,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2190,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:10","nodeType":"VariableDeclaration","scope":2193,"src":"2721:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2189,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:10"},"returnParameters":{"id":2192,"nodeType":"ParameterList","parameters":[],"src":"2751:0:10"},"scope":2238,"src":"2644:108:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2194,"nodeType":"StructuredDocumentation","src":"2758:732:10","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2203,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3504:12:10","nodeType":"FunctionDefinition","parameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"from","nameLocation":"3534:4:10","nodeType":"VariableDeclaration","scope":2203,"src":"3526:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"3526:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2198,"mutability":"mutable","name":"to","nameLocation":"3556:2:10","nodeType":"VariableDeclaration","scope":2203,"src":"3548:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2197,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2200,"mutability":"mutable","name":"tokenId","nameLocation":"3576:7:10","nodeType":"VariableDeclaration","scope":2203,"src":"3568:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"3568:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:73:10"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[],"src":"3598:0:10"},"scope":2238,"src":"3495:104:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2204,"nodeType":"StructuredDocumentation","src":"3605:452:10","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2211,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4071:7:10","nodeType":"FunctionDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"to","nameLocation":"4087:2:10","nodeType":"VariableDeclaration","scope":2211,"src":"4079:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2205,"name":"address","nodeType":"ElementaryTypeName","src":"4079:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2208,"mutability":"mutable","name":"tokenId","nameLocation":"4099:7:10","nodeType":"VariableDeclaration","scope":2211,"src":"4091:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4078:29:10"},"returnParameters":{"id":2210,"nodeType":"ParameterList","parameters":[],"src":"4116:0:10"},"scope":2238,"src":"4062:55:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2212,"nodeType":"StructuredDocumentation","src":"4123:309:10","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2219,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4446:17:10","nodeType":"FunctionDefinition","parameters":{"id":2217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"mutability":"mutable","name":"operator","nameLocation":"4472:8:10","nodeType":"VariableDeclaration","scope":2219,"src":"4464:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2213,"name":"address","nodeType":"ElementaryTypeName","src":"4464:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2216,"mutability":"mutable","name":"_approved","nameLocation":"4487:9:10","nodeType":"VariableDeclaration","scope":2219,"src":"4482:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2215,"name":"bool","nodeType":"ElementaryTypeName","src":"4482:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4463:34:10"},"returnParameters":{"id":2218,"nodeType":"ParameterList","parameters":[],"src":"4506:0:10"},"scope":2238,"src":"4437:70:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2220,"nodeType":"StructuredDocumentation","src":"4513:139:10","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2227,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4666:11:10","nodeType":"FunctionDefinition","parameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2222,"mutability":"mutable","name":"tokenId","nameLocation":"4686:7:10","nodeType":"VariableDeclaration","scope":2227,"src":"4678:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2221,"name":"uint256","nodeType":"ElementaryTypeName","src":"4678:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4677:17:10"},"returnParameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"operator","nameLocation":"4726:8:10","nodeType":"VariableDeclaration","scope":2227,"src":"4718:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2224,"name":"address","nodeType":"ElementaryTypeName","src":"4718:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4717:18:10"},"scope":2238,"src":"4657:79:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2228,"nodeType":"StructuredDocumentation","src":"4742:138:10","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2237,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4894:16:10","nodeType":"FunctionDefinition","parameters":{"id":2233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2230,"mutability":"mutable","name":"owner","nameLocation":"4919:5:10","nodeType":"VariableDeclaration","scope":2237,"src":"4911:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2229,"name":"address","nodeType":"ElementaryTypeName","src":"4911:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2232,"mutability":"mutable","name":"operator","nameLocation":"4934:8:10","nodeType":"VariableDeclaration","scope":2237,"src":"4926:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2231,"name":"address","nodeType":"ElementaryTypeName","src":"4926:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4910:33:10"},"returnParameters":{"id":2236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2237,"src":"4967:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2234,"name":"bool","nodeType":"ElementaryTypeName","src":"4967:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4966:6:10"},"scope":2238,"src":"4885:88:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2239,"src":"250:4725:10","usedErrors":[]}],"src":"108:4868:10"},"id":10},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2256]},"id":2257,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2240,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2241,"nodeType":"StructuredDocumentation","src":"141:152:11","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":2256,"linearizedBaseContracts":[2256],"name":"IERC721Receiver","nameLocation":"304:15:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"326:493:11","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2255,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:11","nodeType":"FunctionDefinition","parameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"operator","nameLocation":"867:8:11","nodeType":"VariableDeclaration","scope":2255,"src":"859:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2243,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2246,"mutability":"mutable","name":"from","nameLocation":"893:4:11","nodeType":"VariableDeclaration","scope":2255,"src":"885:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2248,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:11","nodeType":"VariableDeclaration","scope":2255,"src":"907:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2247,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2250,"mutability":"mutable","name":"data","nameLocation":"947:4:11","nodeType":"VariableDeclaration","scope":2255,"src":"932:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2249,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:11"},"returnParameters":{"id":2254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2255,"src":"976:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2252,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:11"},"scope":2256,"src":"824:160:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2257,"src":"294:692:11","usedErrors":[]}],"src":"116:871:11"},"id":11},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"Address":[2738],"Context":[2760],"ERC165":[2959],"ERC721":[2122],"ERC721URIStorage":[2381],"IERC165":[2971],"IERC721":[2238],"IERC721Metadata":[2408],"IERC721Receiver":[2256],"Math":[3836],"Strings":[2935]},"id":2382,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2258,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2259,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2382,"sourceUnit":2123,"src":"153:23:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2261,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2122,"src":"286:6:12"},"id":2262,"nodeType":"InheritanceSpecifier","src":"286:6:12"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":2260,"nodeType":"StructuredDocumentation","src":"178:69:12","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":false,"id":2381,"linearizedBaseContracts":[2381,2122,2408,2238,2959,2971,2760],"name":"ERC721URIStorage","nameLocation":"266:16:12","nodeType":"ContractDefinition","nodes":[{"id":2265,"libraryName":{"id":2263,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":2935,"src":"305:7:12"},"nodeType":"UsingForDirective","src":"299:26:12","typeName":{"id":2264,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2269,"mutability":"mutable","name":"_tokenURIs","nameLocation":"405:10:12","nodeType":"VariableDeclaration","scope":2381,"src":"370:45:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2268,"keyType":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"370:26:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":2267,"name":"string","nodeType":"ElementaryTypeName","src":"389:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[1382],"body":{"id":2327,"nodeType":"Block","src":"570:520:12","statements":[{"expression":{"arguments":[{"id":2279,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"595:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2278,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"580:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"580:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2281,"nodeType":"ExpressionStatement","src":"580:23:12"},{"assignments":[2283],"declarations":[{"constant":false,"id":2283,"mutability":"mutable","name":"_tokenURI","nameLocation":"628:9:12","nodeType":"VariableDeclaration","scope":2327,"src":"614:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2282,"name":"string","nodeType":"ElementaryTypeName","src":"614:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2287,"initialValue":{"baseExpression":{"id":2284,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"640:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2286,"indexExpression":{"id":2285,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"651:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"640:19:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"614:45:12"},{"assignments":[2289],"declarations":[{"constant":false,"id":2289,"mutability":"mutable","name":"base","nameLocation":"683:4:12","nodeType":"VariableDeclaration","scope":2327,"src":"669:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2288,"name":"string","nodeType":"ElementaryTypeName","src":"669:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2290,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"690:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"690:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"669:31:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2295,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"779:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"773:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2293,"name":"bytes","nodeType":"ElementaryTypeName","src":"773:5:12","typeDescriptions":{}}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"773:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"773:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"795:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"773:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2303,"nodeType":"IfStatement","src":"769:70:12","trueBody":{"id":2302,"nodeType":"Block","src":"798:41:12","statements":[{"expression":{"id":2300,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"819:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2277,"id":2301,"nodeType":"Return","src":"812:16:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2306,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"947:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"941:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2304,"name":"bytes","nodeType":"ElementaryTypeName","src":"941:5:12","typeDescriptions":{}}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"941:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"941:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"967:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"941:27:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2321,"nodeType":"IfStatement","src":"937:106:12","trueBody":{"id":2320,"nodeType":"Block","src":"970:73:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2315,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"1015:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2316,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"1021:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2313,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"998:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"998:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"998:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"991:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2311,"name":"string","nodeType":"ElementaryTypeName","src":"991:6:12","typeDescriptions":{}}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"991:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2277,"id":2319,"nodeType":"Return","src":"984:48:12"}]}},{"expression":{"arguments":[{"id":2324,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"1075:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2322,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1060:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2381_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1382,"src":"1060:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1060:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2277,"id":2326,"nodeType":"Return","src":"1053:30:12"}]},"documentation":{"id":2270,"nodeType":"StructuredDocumentation","src":"422:55:12","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2328,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"491:8:12","nodeType":"FunctionDefinition","overrides":{"id":2274,"nodeType":"OverrideSpecifier","overrides":[],"src":"537:8:12"},"parameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"tokenId","nameLocation":"508:7:12","nodeType":"VariableDeclaration","scope":2328,"src":"500:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2271,"name":"uint256","nodeType":"ElementaryTypeName","src":"500:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"499:17:12"},"returnParameters":{"id":2277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2328,"src":"555:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2275,"name":"string","nodeType":"ElementaryTypeName","src":"555:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"554:15:12"},"scope":2381,"src":"482:608:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2349,"nodeType":"Block","src":"1318:133:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2338,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"1344:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2337,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"1336:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1336:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1354:48:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""},"value":"ERC721URIStorage: URI set of nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""}],"id":2336,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1328:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1328:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2342,"nodeType":"ExpressionStatement","src":"1328:75:12"},{"expression":{"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2343,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"1413:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2345,"indexExpression":{"id":2344,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"1424:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1413:19:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2346,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"1435:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1413:31:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2348,"nodeType":"ExpressionStatement","src":"1413:31:12"}]},"documentation":{"id":2329,"nodeType":"StructuredDocumentation","src":"1096:136:12","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":2350,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1246:12:12","nodeType":"FunctionDefinition","parameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2331,"mutability":"mutable","name":"tokenId","nameLocation":"1267:7:12","nodeType":"VariableDeclaration","scope":2350,"src":"1259:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2330,"name":"uint256","nodeType":"ElementaryTypeName","src":"1259:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2333,"mutability":"mutable","name":"_tokenURI","nameLocation":"1290:9:12","nodeType":"VariableDeclaration","scope":2350,"src":"1276:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2332,"name":"string","nodeType":"ElementaryTypeName","src":"1276:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:42:12"},"returnParameters":{"id":2335,"nodeType":"ParameterList","parameters":[],"src":"1318:0:12"},"scope":2381,"src":"1237:214:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1845],"body":{"id":2379,"nodeType":"Block","src":"1727:142:12","statements":[{"expression":{"arguments":[{"id":2360,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"1749:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2357,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1737:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2381_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1845,"src":"1737:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1737:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2362,"nodeType":"ExpressionStatement","src":"1737:20:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":2365,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"1778:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2367,"indexExpression":{"id":2366,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"1789:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1778:19:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1772:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2363,"name":"bytes","nodeType":"ElementaryTypeName","src":"1772:5:12","typeDescriptions":{}}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1772:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1772:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1809:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1772:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2378,"nodeType":"IfStatement","src":"1768:95:12","trueBody":{"id":2377,"nodeType":"Block","src":"1812:51:12","statements":[{"expression":{"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1826:26:12","subExpression":{"baseExpression":{"id":2372,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"1833:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2374,"indexExpression":{"id":2373,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"1844:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1833:19:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2376,"nodeType":"ExpressionStatement","src":"1826:26:12"}]}}]},"documentation":{"id":2351,"nodeType":"StructuredDocumentation","src":"1457:207:12","text":" @dev See {ERC721-_burn}. This override additionally checks to see if a\n token-specific URI was set for the token, and if so, it deletes the token URI from\n the storage mapping."},"id":2380,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"1678:5:12","nodeType":"FunctionDefinition","overrides":{"id":2355,"nodeType":"OverrideSpecifier","overrides":[],"src":"1718:8:12"},"parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"tokenId","nameLocation":"1692:7:12","nodeType":"VariableDeclaration","scope":2380,"src":"1684:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1683:17:12"},"returnParameters":{"id":2356,"nodeType":"ParameterList","parameters":[],"src":"1727:0:12"},"scope":2381,"src":"1669:200:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2382,"src":"248:1623:12","usedErrors":[]}],"src":"128:1744:12"},"id":12},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[2971],"IERC721":[2238],"IERC721Metadata":[2408]},"id":2409,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2383,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2384,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2409,"sourceUnit":2239,"src":"137:24:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2386,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2238,"src":"326:7:13"},"id":2387,"nodeType":"InheritanceSpecifier","src":"326:7:13"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2385,"nodeType":"StructuredDocumentation","src":"163:133:13","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2408,"linearizedBaseContracts":[2408,2238,2971],"name":"IERC721Metadata","nameLocation":"307:15:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2388,"nodeType":"StructuredDocumentation","src":"340:58:13","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2393,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:13","nodeType":"FunctionDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[],"src":"416:2:13"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2393,"src":"442:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2390,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:13"},"scope":2408,"src":"403:54:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2394,"nodeType":"StructuredDocumentation","src":"463:60:13","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2399,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:13","nodeType":"FunctionDefinition","parameters":{"id":2395,"nodeType":"ParameterList","parameters":[],"src":"543:2:13"},"returnParameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2399,"src":"569:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2396,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:13"},"scope":2408,"src":"528:56:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2400,"nodeType":"StructuredDocumentation","src":"590:90:13","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2407,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:13","nodeType":"FunctionDefinition","parameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:13","nodeType":"VariableDeclaration","scope":2407,"src":"703:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2401,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:13"},"returnParameters":{"id":2406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2407,"src":"743:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2404,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:13"},"scope":2408,"src":"685:73:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2409,"src":"297:463:13","usedErrors":[]}],"src":"112:649:13"},"id":13},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2738]},"id":2739,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2410,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2411,"nodeType":"StructuredDocumentation","src":"126:67:14","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2738,"linearizedBaseContracts":[2738],"name":"Address","nameLocation":"202:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2425,"nodeType":"Block","src":"1241:254:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2419,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"1465:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2418,"id":2424,"nodeType":"Return","src":"1458:30:14"}]},"documentation":{"id":2412,"nodeType":"StructuredDocumentation","src":"216:954:14","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2426,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:14","nodeType":"FunctionDefinition","parameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"account","nameLocation":"1203:7:14","nodeType":"VariableDeclaration","scope":2426,"src":"1195:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2413,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:14"},"returnParameters":{"id":2418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2426,"src":"1235:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2416,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:14"},"scope":2738,"src":"1175:320:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2459,"nodeType":"Block","src":"2483:241:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2437,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2738","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2738","typeString":"library Address"}],"id":2436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2435,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:14","typeDescriptions":{}}},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2440,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"2526:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2434,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2444,"nodeType":"ExpressionStatement","src":"2493:73:14"},{"assignments":[2446,null],"declarations":[{"constant":false,"id":2446,"mutability":"mutable","name":"success","nameLocation":"2583:7:14","nodeType":"VariableDeclaration","scope":2459,"src":"2578:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2445,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2453,"initialValue":{"arguments":[{"hexValue":"","id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2447,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"2596:9:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2449,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"2618:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:14"},{"expression":{"arguments":[{"id":2455,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"2647:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2454,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2458,"nodeType":"ExpressionStatement","src":"2639:78:14"}]},"documentation":{"id":2427,"nodeType":"StructuredDocumentation","src":"1501:906:14","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2460,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:14","nodeType":"FunctionDefinition","parameters":{"id":2432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2429,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:14","nodeType":"VariableDeclaration","scope":2460,"src":"2431:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2428,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2431,"mutability":"mutable","name":"amount","nameLocation":"2466:6:14","nodeType":"VariableDeclaration","scope":2460,"src":"2458:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2430,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:14"},"returnParameters":{"id":2433,"nodeType":"ParameterList","parameters":[],"src":"2483:0:14"},"scope":2738,"src":"2412:312:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2477,"nodeType":"Block","src":"3555:96:14","statements":[{"expression":{"arguments":[{"id":2471,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"3594:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2472,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"3602:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2470,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2518,2562],"referencedDeclaration":2562,"src":"3572:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:72:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2469,"id":2476,"nodeType":"Return","src":"3565:79:14"}]},"documentation":{"id":2461,"nodeType":"StructuredDocumentation","src":"2730:731:14","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2478,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:14","nodeType":"FunctionDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"target","nameLocation":"3496:6:14","nodeType":"VariableDeclaration","scope":2478,"src":"3488:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2462,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"data","nameLocation":"3517:4:14","nodeType":"VariableDeclaration","scope":2478,"src":"3504:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2464,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:14"},"returnParameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2478,"src":"3541:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2467,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:14"},"scope":2738,"src":"3466:185:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2497,"nodeType":"Block","src":"4020:76:14","statements":[{"expression":{"arguments":[{"id":2491,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"4059:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2492,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"4067:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2494,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"4076:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2490,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2518,2562],"referencedDeclaration":2562,"src":"4037:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4037:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2489,"id":2496,"nodeType":"Return","src":"4030:59:14"}]},"documentation":{"id":2479,"nodeType":"StructuredDocumentation","src":"3657:211:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2498,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:14","nodeType":"FunctionDefinition","parameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2481,"mutability":"mutable","name":"target","nameLocation":"3912:6:14","nodeType":"VariableDeclaration","scope":2498,"src":"3904:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2480,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2483,"mutability":"mutable","name":"data","nameLocation":"3941:4:14","nodeType":"VariableDeclaration","scope":2498,"src":"3928:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2482,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2485,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:14","nodeType":"VariableDeclaration","scope":2498,"src":"3955:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2484,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:14"},"returnParameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2498,"src":"4006:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2487,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:14"},"scope":2738,"src":"3873:223:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2517,"nodeType":"Block","src":"4601:111:14","statements":[{"expression":{"arguments":[{"id":2511,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"4640:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2512,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"4648:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"4654:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2510,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2518,2562],"referencedDeclaration":2562,"src":"4618:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4618:87:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2509,"id":2516,"nodeType":"Return","src":"4611:94:14"}]},"documentation":{"id":2499,"nodeType":"StructuredDocumentation","src":"4102:351:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2518,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:14","nodeType":"FunctionDefinition","parameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2501,"mutability":"mutable","name":"target","nameLocation":"4506:6:14","nodeType":"VariableDeclaration","scope":2518,"src":"4498:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2500,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2503,"mutability":"mutable","name":"data","nameLocation":"4535:4:14","nodeType":"VariableDeclaration","scope":2518,"src":"4522:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2502,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"value","nameLocation":"4557:5:14","nodeType":"VariableDeclaration","scope":2518,"src":"4549:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2504,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:14"},"returnParameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2518,"src":"4587:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2507,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:14"},"scope":2738,"src":"4458:254:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2561,"nodeType":"Block","src":"5139:267:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2535,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2738","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2738","typeString":"library Address"}],"id":2534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2533,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:14","typeDescriptions":{}}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5157:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5157:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"5182:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2532,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:81:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2542,"nodeType":"ExpressionStatement","src":"5149:81:14"},{"assignments":[2544,2546],"declarations":[{"constant":false,"id":2544,"mutability":"mutable","name":"success","nameLocation":"5246:7:14","nodeType":"VariableDeclaration","scope":2561,"src":"5241:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2543,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:14","nodeType":"VariableDeclaration","scope":2561,"src":"5255:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2545,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2553,"initialValue":{"arguments":[{"id":2551,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"5308:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2547,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"5282:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5282:11:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"5301:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5282:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:14"},{"expression":{"arguments":[{"id":2555,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"5357:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2556,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"5365:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2557,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"5374:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2558,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"5386:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2554,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"5330:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5330:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2531,"id":2560,"nodeType":"Return","src":"5323:76:14"}]},"documentation":{"id":2519,"nodeType":"StructuredDocumentation","src":"4718:237:14","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2562,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:14","nodeType":"FunctionDefinition","parameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"target","nameLocation":"5008:6:14","nodeType":"VariableDeclaration","scope":2562,"src":"5000:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2520,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2523,"mutability":"mutable","name":"data","nameLocation":"5037:4:14","nodeType":"VariableDeclaration","scope":2562,"src":"5024:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2522,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"value","nameLocation":"5059:5:14","nodeType":"VariableDeclaration","scope":2562,"src":"5051:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2527,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:14","nodeType":"VariableDeclaration","scope":2562,"src":"5074:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2526,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:14"},"returnParameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2562,"src":"5125:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2529,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:14"},"scope":2738,"src":"4960:446:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2578,"nodeType":"Block","src":"5683:97:14","statements":[{"expression":{"arguments":[{"id":2573,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"5719:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2574,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"5727:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2572,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2579,2608],"referencedDeclaration":2608,"src":"5700:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5700:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2571,"id":2577,"nodeType":"Return","src":"5693:80:14"}]},"documentation":{"id":2563,"nodeType":"StructuredDocumentation","src":"5412:166:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2579,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:14","nodeType":"FunctionDefinition","parameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2565,"mutability":"mutable","name":"target","nameLocation":"5619:6:14","nodeType":"VariableDeclaration","scope":2579,"src":"5611:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2564,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2567,"mutability":"mutable","name":"data","nameLocation":"5640:4:14","nodeType":"VariableDeclaration","scope":2579,"src":"5627:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2566,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:14"},"returnParameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2579,"src":"5669:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2569,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:14"},"scope":2738,"src":"5583:197:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2607,"nodeType":"Block","src":"6122:168:14","statements":[{"assignments":[2592,2594],"declarations":[{"constant":false,"id":2592,"mutability":"mutable","name":"success","nameLocation":"6138:7:14","nodeType":"VariableDeclaration","scope":2607,"src":"6133:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2591,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2594,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:14","nodeType":"VariableDeclaration","scope":2607,"src":"6147:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2593,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2599,"initialValue":{"arguments":[{"id":2597,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"6192:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2595,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"6174:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:14","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:14"},{"expression":{"arguments":[{"id":2601,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"6241:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2602,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"6249:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2603,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"6258:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2604,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"6270:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2600,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"6214:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6214:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2590,"id":2606,"nodeType":"Return","src":"6207:76:14"}]},"documentation":{"id":2580,"nodeType":"StructuredDocumentation","src":"5786:173:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2608,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:14","nodeType":"FunctionDefinition","parameters":{"id":2587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"target","nameLocation":"6009:6:14","nodeType":"VariableDeclaration","scope":2608,"src":"6001:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2581,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2584,"mutability":"mutable","name":"data","nameLocation":"6038:4:14","nodeType":"VariableDeclaration","scope":2608,"src":"6025:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2583,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2586,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:14","nodeType":"VariableDeclaration","scope":2608,"src":"6052:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2585,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:14"},"returnParameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2608,"src":"6108:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2588,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:14"},"scope":2738,"src":"5964:326:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2624,"nodeType":"Block","src":"6566:101:14","statements":[{"expression":{"arguments":[{"id":2619,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"6604:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2620,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"6612:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2618,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2625,2654],"referencedDeclaration":2654,"src":"6583:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:77:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2617,"id":2623,"nodeType":"Return","src":"6576:84:14"}]},"documentation":{"id":2609,"nodeType":"StructuredDocumentation","src":"6296:168:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2625,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:14","nodeType":"FunctionDefinition","parameters":{"id":2614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"target","nameLocation":"6507:6:14","nodeType":"VariableDeclaration","scope":2625,"src":"6499:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2610,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2613,"mutability":"mutable","name":"data","nameLocation":"6528:4:14","nodeType":"VariableDeclaration","scope":2625,"src":"6515:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2612,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:14"},"returnParameters":{"id":2617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2625,"src":"6552:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2615,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:14"},"scope":2738,"src":"6469:198:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2653,"nodeType":"Block","src":"7008:170:14","statements":[{"assignments":[2638,2640],"declarations":[{"constant":false,"id":2638,"mutability":"mutable","name":"success","nameLocation":"7024:7:14","nodeType":"VariableDeclaration","scope":2653,"src":"7019:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2637,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2640,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:14","nodeType":"VariableDeclaration","scope":2653,"src":"7033:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2639,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2645,"initialValue":{"arguments":[{"id":2643,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"7080:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2641,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"7060:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:14","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7060:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:14"},{"expression":{"arguments":[{"id":2647,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"7129:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2648,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"7137:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2649,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"7146:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2650,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"7158:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2646,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"7102:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7102:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2636,"id":2652,"nodeType":"Return","src":"7095:76:14"}]},"documentation":{"id":2626,"nodeType":"StructuredDocumentation","src":"6673:175:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2654,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:14","nodeType":"FunctionDefinition","parameters":{"id":2633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"target","nameLocation":"6900:6:14","nodeType":"VariableDeclaration","scope":2654,"src":"6892:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2627,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2630,"mutability":"mutable","name":"data","nameLocation":"6929:4:14","nodeType":"VariableDeclaration","scope":2654,"src":"6916:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2629,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2632,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:14","nodeType":"VariableDeclaration","scope":2654,"src":"6943:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2631,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:14"},"returnParameters":{"id":2636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2654,"src":"6994:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2634,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:14"},"scope":2738,"src":"6853:325:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2692,"nodeType":"Block","src":"7660:434:14","statements":[{"condition":{"id":2668,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"7674:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2690,"nodeType":"Block","src":"8030:58:14","statements":[{"expression":{"arguments":[{"id":2686,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"8052:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2687,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"8064:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2685,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"8044:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8044:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2689,"nodeType":"ExpressionStatement","src":"8044:33:14"}]},"id":2691,"nodeType":"IfStatement","src":"7670:418:14","trueBody":{"id":2684,"nodeType":"Block","src":"7683:341:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2669,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"7701:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7701:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2681,"nodeType":"IfStatement","src":"7697:286:14","trueBody":{"id":2680,"nodeType":"Block","src":"7725:258:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":2675,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"7927:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2674,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"7916:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2673,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2679,"nodeType":"ExpressionStatement","src":"7908:60:14"}]}},{"expression":{"id":2682,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"8003:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2667,"id":2683,"nodeType":"Return","src":"7996:17:14"}]}}]},"documentation":{"id":2655,"nodeType":"StructuredDocumentation","src":"7184:277:14","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2693,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:14","nodeType":"FunctionDefinition","parameters":{"id":2664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2657,"mutability":"mutable","name":"target","nameLocation":"7519:6:14","nodeType":"VariableDeclaration","scope":2693,"src":"7511:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2656,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2659,"mutability":"mutable","name":"success","nameLocation":"7540:7:14","nodeType":"VariableDeclaration","scope":2693,"src":"7535:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2658,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2661,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:14","nodeType":"VariableDeclaration","scope":2693,"src":"7557:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2660,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2663,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:14","nodeType":"VariableDeclaration","scope":2693,"src":"7590:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2662,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:14"},"returnParameters":{"id":2667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2693,"src":"7646:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2665,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:14"},"scope":2738,"src":"7466:628:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2716,"nodeType":"Block","src":"8475:135:14","statements":[{"condition":{"id":2705,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"8489:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2714,"nodeType":"Block","src":"8546:58:14","statements":[{"expression":{"arguments":[{"id":2710,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"8568:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2711,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"8580:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2709,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"8560:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8560:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2713,"nodeType":"ExpressionStatement","src":"8560:33:14"}]},"id":2715,"nodeType":"IfStatement","src":"8485:119:14","trueBody":{"id":2708,"nodeType":"Block","src":"8498:42:14","statements":[{"expression":{"id":2706,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"8519:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2704,"id":2707,"nodeType":"Return","src":"8512:17:14"}]}}]},"documentation":{"id":2694,"nodeType":"StructuredDocumentation","src":"8100:210:14","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2717,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:14","nodeType":"FunctionDefinition","parameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2696,"mutability":"mutable","name":"success","nameLocation":"8355:7:14","nodeType":"VariableDeclaration","scope":2717,"src":"8350:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2695,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2698,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:14","nodeType":"VariableDeclaration","scope":2717,"src":"8372:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2697,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2700,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:14","nodeType":"VariableDeclaration","scope":2717,"src":"8405:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2699,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:14"},"returnParameters":{"id":2704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2717,"src":"8461:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2702,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:14"},"scope":2738,"src":"8315:295:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2736,"nodeType":"Block","src":"8699:457:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2724,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"8775:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8775:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2734,"nodeType":"Block","src":"9105:45:14","statements":[{"expression":{"arguments":[{"id":2731,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"9126:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2730,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9119:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2733,"nodeType":"ExpressionStatement","src":"9119:20:14"}]},"id":2735,"nodeType":"IfStatement","src":"8771:379:14","trueBody":{"id":2729,"nodeType":"Block","src":"8798:301:14","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:14","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:14"},"nodeType":"YulFunctionCall","src":"8997:17:14"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:14","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:14"},"nodeType":"YulFunctionCall","src":"9038:19:14"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:14"},"nodeType":"YulFunctionCall","src":"9031:44:14"},"nodeType":"YulExpressionStatement","src":"9031:44:14"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2719,"isOffset":false,"isSlot":false,"src":"9003:10:14","valueSize":1},{"declaration":2719,"isOffset":false,"isSlot":false,"src":"9046:10:14","valueSize":1}],"id":2728,"nodeType":"InlineAssembly","src":"8947:142:14"}]}}]},"id":2737,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:14","nodeType":"FunctionDefinition","parameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:14","nodeType":"VariableDeclaration","scope":2737,"src":"8633:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2718,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2721,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:14","nodeType":"VariableDeclaration","scope":2737,"src":"8658:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2720,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:14"},"returnParameters":{"id":2723,"nodeType":"ParameterList","parameters":[],"src":"8699:0:14"},"scope":2738,"src":"8616:540:14","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2739,"src":"194:8964:14","usedErrors":[]}],"src":"101:9058:14"},"id":14},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2760]},"id":2761,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2740,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:15"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2741,"nodeType":"StructuredDocumentation","src":"111:496:15","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2760,"linearizedBaseContracts":[2760],"name":"Context","nameLocation":"626:7:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":2749,"nodeType":"Block","src":"702:34:15","statements":[{"expression":{"expression":{"id":2746,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2745,"id":2748,"nodeType":"Return","src":"712:17:15"}]},"id":2750,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:15","nodeType":"FunctionDefinition","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[],"src":"659:2:15"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2750,"src":"693:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2743,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:15"},"scope":2760,"src":"640:96:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2758,"nodeType":"Block","src":"809:32:15","statements":[{"expression":{"expression":{"id":2755,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2754,"id":2757,"nodeType":"Return","src":"819:15:15"}]},"id":2759,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:15","nodeType":"FunctionDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[],"src":"759:2:15"},"returnParameters":{"id":2754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2759,"src":"793:14:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2752,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:15"},"scope":2760,"src":"742:99:15","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2761,"src":"608:235:15","usedErrors":[]}],"src":"86:758:15"},"id":15},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3836],"Strings":[2935]},"id":2936,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2762,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2763,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2936,"sourceUnit":3837,"src":"126:25:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2764,"nodeType":"StructuredDocumentation","src":"153:34:16","text":" @dev String operations."},"fullyImplemented":true,"id":2935,"linearizedBaseContracts":[2935],"name":"Strings","nameLocation":"196:7:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2767,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:16","nodeType":"VariableDeclaration","scope":2935,"src":"210:54:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2765,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2770,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:16","nodeType":"VariableDeclaration","scope":2935,"src":"270:43:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2768,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2817,"nodeType":"Block","src":"486:625:16","statements":[{"id":2816,"nodeType":"UncheckedBlock","src":"496:609:16","statements":[{"assignments":[2779],"declarations":[{"constant":false,"id":2779,"mutability":"mutable","name":"length","nameLocation":"528:6:16","nodeType":"VariableDeclaration","scope":2816,"src":"520:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2778,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2786,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"548:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2780,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"537:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3836_$","typeString":"type(library Math)"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3673,"src":"537:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"537:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:16"},{"assignments":[2788],"declarations":[{"constant":false,"id":2788,"mutability":"mutable","name":"buffer","nameLocation":"586:6:16","nodeType":"VariableDeclaration","scope":2816,"src":"572:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2787,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2793,"initialValue":{"arguments":[{"id":2791,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"606:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2789,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"595:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:16"},{"assignments":[2795],"declarations":[{"constant":false,"id":2795,"mutability":"mutable","name":"ptr","nameLocation":"635:3:16","nodeType":"VariableDeclaration","scope":2816,"src":"627:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2794,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2796,"nodeType":"VariableDeclarationStatement","src":"627:11:16"},{"AST":{"nodeType":"YulBlock","src":"708:67:16","statements":[{"nodeType":"YulAssignment","src":"726:35:16","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:16","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:16"},"nodeType":"YulFunctionCall","src":"745:15:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:16"},"nodeType":"YulFunctionCall","src":"733:28:16"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2788,"isOffset":false,"isSlot":false,"src":"737:6:16","valueSize":1},{"declaration":2779,"isOffset":false,"isSlot":false,"src":"753:6:16","valueSize":1},{"declaration":2795,"isOffset":false,"isSlot":false,"src":"726:3:16","valueSize":1}],"id":2797,"nodeType":"InlineAssembly","src":"699:76:16"},{"body":{"id":2812,"nodeType":"Block","src":"801:267:16","statements":[{"expression":{"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:16","subExpression":{"id":2799,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"819:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2801,"nodeType":"ExpressionStatement","src":"819:5:16"},{"AST":{"nodeType":"YulBlock","src":"902:84:16","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:16","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:16"},"nodeType":"YulFunctionCall","src":"942:14:16"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:16"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:16"},"nodeType":"YulFunctionCall","src":"937:30:16"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:16"},"nodeType":"YulFunctionCall","src":"924:44:16"},"nodeType":"YulExpressionStatement","src":"924:44:16"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2767,"isOffset":false,"isSlot":false,"src":"958:8:16","valueSize":1},{"declaration":2795,"isOffset":false,"isSlot":false,"src":"932:3:16","valueSize":1},{"declaration":2773,"isOffset":false,"isSlot":false,"src":"946:5:16","valueSize":1}],"id":2802,"nodeType":"InlineAssembly","src":"893:93:16"},{"expression":{"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"1003:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2806,"nodeType":"ExpressionStatement","src":"1003:11:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"1036:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2811,"nodeType":"IfStatement","src":"1032:21:16","trueBody":{"id":2810,"nodeType":"Break","src":"1048:5:16"}}]},"condition":{"hexValue":"74727565","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2813,"nodeType":"WhileStatement","src":"788:280:16"},{"expression":{"id":2814,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"1088:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2777,"id":2815,"nodeType":"Return","src":"1081:13:16"}]}]},"documentation":{"id":2771,"nodeType":"StructuredDocumentation","src":"320:90:16","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2818,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:16","nodeType":"FunctionDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"value","nameLocation":"441:5:16","nodeType":"VariableDeclaration","scope":2818,"src":"433:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2772,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:16"},"returnParameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2818,"src":"471:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2775,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:16"},"scope":2935,"src":"415:696:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2837,"nodeType":"Block","src":"1290:100:16","statements":[{"id":2836,"nodeType":"UncheckedBlock","src":"1300:84:16","statements":[{"expression":{"arguments":[{"id":2827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"1343:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"1362:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2828,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"1350:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3836_$","typeString":"type(library Math)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3796,"src":"1350:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1350:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2826,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2838,2914,2934],"referencedDeclaration":2914,"src":"1331:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2825,"id":2835,"nodeType":"Return","src":"1324:49:16"}]}]},"documentation":{"id":2819,"nodeType":"StructuredDocumentation","src":"1117:94:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2838,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:16","nodeType":"FunctionDefinition","parameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2821,"mutability":"mutable","name":"value","nameLocation":"1245:5:16","nodeType":"VariableDeclaration","scope":2838,"src":"1237:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:16"},"returnParameters":{"id":2825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2838,"src":"1275:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2823,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:16"},"scope":2935,"src":"1216:174:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2913,"nodeType":"Block","src":"1603:347:16","statements":[{"assignments":[2849],"declarations":[{"constant":false,"id":2849,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:16","nodeType":"VariableDeclaration","scope":2913,"src":"1613:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2848,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2858,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2853,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"1649:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2850,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:16"},{"expression":{"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2859,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"1670:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2861,"indexExpression":{"hexValue":"30","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2864,"nodeType":"ExpressionStatement","src":"1670:15:16"},{"expression":{"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2865,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"1695:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2867,"indexExpression":{"hexValue":"31","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2870,"nodeType":"ExpressionStatement","src":"1695:15:16"},{"body":{"id":2899,"nodeType":"Block","src":"1765:83:16","statements":[{"expression":{"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2885,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"1779:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2887,"indexExpression":{"id":2886,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"1786:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2888,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"1791:8:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2892,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"1800:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2894,"nodeType":"ExpressionStatement","src":"1779:33:16"},{"expression":{"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"1826:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2898,"nodeType":"ExpressionStatement","src":"1826:11:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2879,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"1753:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2900,"initializationExpression":{"assignments":[2872],"declarations":[{"constant":false,"id":2872,"mutability":"mutable","name":"i","nameLocation":"1733:1:16","nodeType":"VariableDeclaration","scope":2900,"src":"1725:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2878,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2874,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"1741:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:16"},"loopExpression":{"expression":{"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:16","subExpression":{"id":2882,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"1762:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2884,"nodeType":"ExpressionStatement","src":"1760:3:16"},"nodeType":"ForStatement","src":"1720:128:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"1865:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2901,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1857:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2907,"nodeType":"ExpressionStatement","src":"1857:55:16"},{"expression":{"arguments":[{"id":2910,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"1936:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2908,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:16","typeDescriptions":{}}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2847,"id":2912,"nodeType":"Return","src":"1922:21:16"}]},"documentation":{"id":2839,"nodeType":"StructuredDocumentation","src":"1396:112:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2914,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:16","nodeType":"FunctionDefinition","parameters":{"id":2844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"value","nameLocation":"1542:5:16","nodeType":"VariableDeclaration","scope":2914,"src":"1534:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2840,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2843,"mutability":"mutable","name":"length","nameLocation":"1557:6:16","nodeType":"VariableDeclaration","scope":2914,"src":"1549:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2842,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:16"},"returnParameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2914,"src":"1588:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2845,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:16"},"scope":2935,"src":"1513:437:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2933,"nodeType":"Block","src":"2175:76:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2927,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2220:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2925,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:16","typeDescriptions":{}}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2212:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2923,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:16","typeDescriptions":{}}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2204:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2930,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"2228:15:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2922,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2838,2914,2934],"referencedDeclaration":2914,"src":"2192:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2921,"id":2932,"nodeType":"Return","src":"2185:59:16"}]},"documentation":{"id":2915,"nodeType":"StructuredDocumentation","src":"1956:141:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2934,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:16","nodeType":"FunctionDefinition","parameters":{"id":2918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2917,"mutability":"mutable","name":"addr","nameLocation":"2131:4:16","nodeType":"VariableDeclaration","scope":2934,"src":"2123:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2916,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:16"},"returnParameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2934,"src":"2160:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2919,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:16"},"scope":2935,"src":"2102:149:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2936,"src":"188:2065:16","usedErrors":[]}],"src":"101:2153:16"},"id":16},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2959],"IERC165":[2971]},"id":2960,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2937,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:17"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2938,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2960,"sourceUnit":2972,"src":"124:23:17","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2940,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2971,"src":"754:7:17"},"id":2941,"nodeType":"InheritanceSpecifier","src":"754:7:17"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2939,"nodeType":"StructuredDocumentation","src":"149:576:17","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2959,"linearizedBaseContracts":[2959,2971],"name":"ERC165","nameLocation":"744:6:17","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2970],"body":{"id":2957,"nodeType":"Block","src":"920:64:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2950,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"937:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2952,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"957:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2971_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2971_$","typeString":"type(contract IERC165)"}],"id":2951,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2971","typeString":"type(contract IERC165)"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2949,"id":2956,"nodeType":"Return","src":"930:47:17"}]},"documentation":{"id":2942,"nodeType":"StructuredDocumentation","src":"768:56:17","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2958,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:17","nodeType":"FunctionDefinition","overrides":{"id":2946,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:17"},"parameters":{"id":2945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2944,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:17","nodeType":"VariableDeclaration","scope":2958,"src":"856:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2943,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:17"},"returnParameters":{"id":2949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2958,"src":"914:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2947,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:17"},"scope":2959,"src":"829:155:17","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2960,"src":"726:260:17","usedErrors":[]}],"src":"99:888:17"},"id":17},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2971]},"id":2972,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2961,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2962,"nodeType":"StructuredDocumentation","src":"125:279:18","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2971,"linearizedBaseContracts":[2971],"name":"IERC165","nameLocation":"415:7:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2963,"nodeType":"StructuredDocumentation","src":"429:340:18","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2970,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:18","nodeType":"FunctionDefinition","parameters":{"id":2966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2965,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:18","nodeType":"VariableDeclaration","scope":2970,"src":"801:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2964,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:18"},"returnParameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2970,"src":"844:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2967,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:18"},"scope":2971,"src":"774:76:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2972,"src":"405:447:18","usedErrors":[]}],"src":"100:753:18"},"id":18},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3836]},"id":3837,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2973,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2974,"nodeType":"StructuredDocumentation","src":"128:73:19","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3836,"linearizedBaseContracts":[3836],"name":"Math","nameLocation":"210:4:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2978,"members":[{"id":2975,"name":"Down","nameLocation":"245:4:19","nodeType":"EnumValue","src":"245:4:19"},{"id":2976,"name":"Up","nameLocation":"287:2:19","nodeType":"EnumValue","src":"287:2:19"},{"id":2977,"name":"Zero","nameLocation":"318:4:19","nodeType":"EnumValue","src":"318:4:19"}],"name":"Rounding","nameLocation":"226:8:19","nodeType":"EnumDefinition","src":"221:122:19"},{"body":{"id":2995,"nodeType":"Block","src":"480:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2988,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"497:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2989,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"501:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2992,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"509:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:19","trueExpression":{"id":2991,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"505:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2987,"id":2994,"nodeType":"Return","src":"490:20:19"}]},"documentation":{"id":2979,"nodeType":"StructuredDocumentation","src":"349:59:19","text":" @dev Returns the largest of two numbers."},"id":2996,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:19","nodeType":"FunctionDefinition","parameters":{"id":2984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2981,"mutability":"mutable","name":"a","nameLocation":"434:1:19","nodeType":"VariableDeclaration","scope":2996,"src":"426:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2980,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2983,"mutability":"mutable","name":"b","nameLocation":"445:1:19","nodeType":"VariableDeclaration","scope":2996,"src":"437:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:19"},"returnParameters":{"id":2987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2996,"src":"471:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2985,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:19"},"scope":3836,"src":"413:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3013,"nodeType":"Block","src":"655:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3006,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"672:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3007,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"676:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3010,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"684:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:19","trueExpression":{"id":3009,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"680:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3005,"id":3012,"nodeType":"Return","src":"665:20:19"}]},"documentation":{"id":2997,"nodeType":"StructuredDocumentation","src":"523:60:19","text":" @dev Returns the smallest of two numbers."},"id":3014,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:19","nodeType":"FunctionDefinition","parameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"a","nameLocation":"609:1:19","nodeType":"VariableDeclaration","scope":3014,"src":"601:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3001,"mutability":"mutable","name":"b","nameLocation":"620:1:19","nodeType":"VariableDeclaration","scope":3014,"src":"612:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:19"},"returnParameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3014,"src":"646:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:19"},"scope":3836,"src":"588:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3036,"nodeType":"Block","src":"876:82:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3024,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"931:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3025,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"935:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3027,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3028,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"941:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3029,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"945:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3023,"id":3035,"nodeType":"Return","src":"923:28:19"}]},"documentation":{"id":3015,"nodeType":"StructuredDocumentation","src":"698:102:19","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3037,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:19","nodeType":"FunctionDefinition","parameters":{"id":3020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"a","nameLocation":"830:1:19","nodeType":"VariableDeclaration","scope":3037,"src":"822:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3019,"mutability":"mutable","name":"b","nameLocation":"841:1:19","nodeType":"VariableDeclaration","scope":3037,"src":"833:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:19"},"returnParameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3037,"src":"867:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:19"},"scope":3836,"src":"805:153:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3061,"nodeType":"Block","src":"1228:123:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3047,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"1316:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3051,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"1330:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3054,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3055,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"1339:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:19","trueExpression":{"hexValue":"30","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3046,"id":3060,"nodeType":"Return","src":"1309:35:19"}]},"documentation":{"id":3038,"nodeType":"StructuredDocumentation","src":"964:188:19","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3062,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:19","nodeType":"FunctionDefinition","parameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3040,"mutability":"mutable","name":"a","nameLocation":"1182:1:19","nodeType":"VariableDeclaration","scope":3062,"src":"1174:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3042,"mutability":"mutable","name":"b","nameLocation":"1193:1:19","nodeType":"VariableDeclaration","scope":3062,"src":"1185:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:19"},"returnParameters":{"id":3046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3062,"src":"1219:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3044,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:19"},"scope":3836,"src":"1157:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3183,"nodeType":"Block","src":"1795:3797:19","statements":[{"id":3182,"nodeType":"UncheckedBlock","src":"1805:3781:19","statements":[{"assignments":[3075],"declarations":[{"constant":false,"id":3075,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:19","nodeType":"VariableDeclaration","scope":3182,"src":"2126:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3074,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3076,"nodeType":"VariableDeclarationStatement","src":"2126:13:19"},{"assignments":[3078],"declarations":[{"constant":false,"id":3078,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:19","nodeType":"VariableDeclaration","scope":3182,"src":"2198:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3077,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3079,"nodeType":"VariableDeclarationStatement","src":"2198:13:19"},{"AST":{"nodeType":"YulBlock","src":"2278:157:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:19"},"nodeType":"YulFunctionCall","src":"2319:6:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:19"},"nodeType":"YulFunctionCall","src":"2306:20:19"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:19","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:19"},"nodeType":"YulFunctionCall","src":"2352:9:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:19"}]},{"nodeType":"YulAssignment","src":"2378:43:19","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:19"},"nodeType":"YulFunctionCall","src":"2391:14:19"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:19"},"nodeType":"YulFunctionCall","src":"2407:13:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:19"},"nodeType":"YulFunctionCall","src":"2387:34:19"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:19"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3075,"isOffset":false,"isSlot":false,"src":"2343:5:19","valueSize":1},{"declaration":3075,"isOffset":false,"isSlot":false,"src":"2399:5:19","valueSize":1},{"declaration":3075,"isOffset":false,"isSlot":false,"src":"2414:5:19","valueSize":1},{"declaration":3078,"isOffset":false,"isSlot":false,"src":"2378:5:19","valueSize":1},{"declaration":3065,"isOffset":false,"isSlot":false,"src":"2313:1:19","valueSize":1},{"declaration":3065,"isOffset":false,"isSlot":false,"src":"2356:1:19","valueSize":1},{"declaration":3067,"isOffset":false,"isSlot":false,"src":"2316:1:19","valueSize":1},{"declaration":3067,"isOffset":false,"isSlot":false,"src":"2359:1:19","valueSize":1}],"id":3080,"nodeType":"InlineAssembly","src":"2269:166:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3081,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"2516:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3089,"nodeType":"IfStatement","src":"2512:75:19","trueBody":{"id":3088,"nodeType":"Block","src":"2528:59:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3084,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"2553:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3085,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"2561:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3073,"id":3087,"nodeType":"Return","src":"2546:26:19"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3091,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"2697:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3092,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"2711:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3090,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2689:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3095,"nodeType":"ExpressionStatement","src":"2689:28:19"},{"assignments":[3097],"declarations":[{"constant":false,"id":3097,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:19","nodeType":"VariableDeclaration","scope":3182,"src":"2973:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3096,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3098,"nodeType":"VariableDeclarationStatement","src":"2973:17:19"},{"AST":{"nodeType":"YulBlock","src":"3013:291:19","statements":[{"nodeType":"YulAssignment","src":"3082:38:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:19"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:19"},"nodeType":"YulFunctionCall","src":"3095:25:19"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:19"}]},{"nodeType":"YulAssignment","src":"3202:41:19","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:19"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:19"},"nodeType":"YulFunctionCall","src":"3222:20:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:19"},"nodeType":"YulFunctionCall","src":"3211:32:19"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:19"}]},{"nodeType":"YulAssignment","src":"3260:30:19","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:19"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:19"},"nodeType":"YulFunctionCall","src":"3269:21:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:19"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3069,"isOffset":false,"isSlot":false,"src":"3108:11:19","valueSize":1},{"declaration":3075,"isOffset":false,"isSlot":false,"src":"3236:5:19","valueSize":1},{"declaration":3075,"isOffset":false,"isSlot":false,"src":"3260:5:19","valueSize":1},{"declaration":3075,"isOffset":false,"isSlot":false,"src":"3273:5:19","valueSize":1},{"declaration":3078,"isOffset":false,"isSlot":false,"src":"3202:5:19","valueSize":1},{"declaration":3078,"isOffset":false,"isSlot":false,"src":"3215:5:19","valueSize":1},{"declaration":3097,"isOffset":false,"isSlot":false,"src":"3082:9:19","valueSize":1},{"declaration":3097,"isOffset":false,"isSlot":false,"src":"3225:9:19","valueSize":1},{"declaration":3097,"isOffset":false,"isSlot":false,"src":"3280:9:19","valueSize":1},{"declaration":3065,"isOffset":false,"isSlot":false,"src":"3102:1:19","valueSize":1},{"declaration":3067,"isOffset":false,"isSlot":false,"src":"3105:1:19","valueSize":1}],"id":3099,"nodeType":"InlineAssembly","src":"3004:300:19"},{"assignments":[3101],"declarations":[{"constant":false,"id":3101,"mutability":"mutable","name":"twos","nameLocation":"3619:4:19","nodeType":"VariableDeclaration","scope":3182,"src":"3611:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3100,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3109,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3102,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"3626:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:19","subExpression":{"id":3103,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"3642:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:19"},{"AST":{"nodeType":"YulBlock","src":"3681:362:19","statements":[{"nodeType":"YulAssignment","src":"3746:37:19","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:19"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:19"},"nodeType":"YulFunctionCall","src":"3761:22:19"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:19"}]},{"nodeType":"YulAssignment","src":"3850:25:19","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:19"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:19"},"nodeType":"YulFunctionCall","src":"3859:16:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:19"}]},{"nodeType":"YulAssignment","src":"3990:39:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:19","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:19"},"nodeType":"YulFunctionCall","src":"4006:12:19"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:19"},"nodeType":"YulFunctionCall","src":"4002:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:19"},"nodeType":"YulFunctionCall","src":"3998:31:19"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:19"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3069,"isOffset":false,"isSlot":false,"src":"3746:11:19","valueSize":1},{"declaration":3069,"isOffset":false,"isSlot":false,"src":"3765:11:19","valueSize":1},{"declaration":3075,"isOffset":false,"isSlot":false,"src":"3850:5:19","valueSize":1},{"declaration":3075,"isOffset":false,"isSlot":false,"src":"3863:5:19","valueSize":1},{"declaration":3101,"isOffset":false,"isSlot":false,"src":"3778:4:19","valueSize":1},{"declaration":3101,"isOffset":false,"isSlot":false,"src":"3870:4:19","valueSize":1},{"declaration":3101,"isOffset":false,"isSlot":false,"src":"3990:4:19","valueSize":1},{"declaration":3101,"isOffset":false,"isSlot":false,"src":"4013:4:19","valueSize":1},{"declaration":3101,"isOffset":false,"isSlot":false,"src":"4020:4:19","valueSize":1}],"id":3110,"nodeType":"InlineAssembly","src":"3672:371:19"},{"expression":{"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3111,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"4109:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3112,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"4118:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3113,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"4126:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3116,"nodeType":"ExpressionStatement","src":"4109:21:19"},{"assignments":[3118],"declarations":[{"constant":false,"id":3118,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:19","nodeType":"VariableDeclaration","scope":3182,"src":"4448:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3117,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3125,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3120,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"4471:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:19"},{"expression":{"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3126,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4704:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3128,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"4719:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3129,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4733:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3133,"nodeType":"ExpressionStatement","src":"4704:36:19"},{"expression":{"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3134,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4773:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3136,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"4788:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3137,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4802:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3141,"nodeType":"ExpressionStatement","src":"4773:36:19"},{"expression":{"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3142,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4843:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3144,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"4858:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3145,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4872:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3149,"nodeType":"ExpressionStatement","src":"4843:36:19"},{"expression":{"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3150,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4913:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3152,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"4928:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3153,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4942:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3157,"nodeType":"ExpressionStatement","src":"4913:36:19"},{"expression":{"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3158,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"4983:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3160,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"4998:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3161,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"5012:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3165,"nodeType":"ExpressionStatement","src":"4983:36:19"},{"expression":{"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3166,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"5054:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3168,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"5069:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3169,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"5083:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3173,"nodeType":"ExpressionStatement","src":"5054:36:19"},{"expression":{"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3174,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"5524:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3175,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"5533:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3176,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"5541:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3179,"nodeType":"ExpressionStatement","src":"5524:24:19"},{"expression":{"id":3180,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"5569:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3073,"id":3181,"nodeType":"Return","src":"5562:13:19"}]}]},"documentation":{"id":3063,"nodeType":"StructuredDocumentation","src":"1357:305:19","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3184,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:19","nodeType":"FunctionDefinition","parameters":{"id":3070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3065,"mutability":"mutable","name":"x","nameLocation":"1700:1:19","nodeType":"VariableDeclaration","scope":3184,"src":"1692:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3064,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3067,"mutability":"mutable","name":"y","nameLocation":"1719:1:19","nodeType":"VariableDeclaration","scope":3184,"src":"1711:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3066,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3069,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:19","nodeType":"VariableDeclaration","scope":3184,"src":"1730:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3068,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:19"},"returnParameters":{"id":3073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3072,"mutability":"mutable","name":"result","nameLocation":"1787:6:19","nodeType":"VariableDeclaration","scope":3184,"src":"1779:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3071,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:19"},"scope":3836,"src":"1667:3925:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3227,"nodeType":"Block","src":"5872:189:19","statements":[{"assignments":[3200],"declarations":[{"constant":false,"id":3200,"mutability":"mutable","name":"result","nameLocation":"5890:6:19","nodeType":"VariableDeclaration","scope":3227,"src":"5882:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3206,"initialValue":{"arguments":[{"id":3202,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"5906:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3203,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"5909:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3204,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"5912:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3201,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3184,3228],"referencedDeclaration":3184,"src":"5899:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5899:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3207,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"5938:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3208,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"5950:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2978_$","typeString":"type(enum Math.Rounding)"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2976,"src":"5950:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"}},"src":"5938:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3212,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"5972:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3213,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"5975:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3214,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"5978:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3211,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5965:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3224,"nodeType":"IfStatement","src":"5934:98:19","trueBody":{"id":3223,"nodeType":"Block","src":"5996:36:19","statements":[{"expression":{"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3219,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"6010:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3222,"nodeType":"ExpressionStatement","src":"6010:11:19"}]}},{"expression":{"id":3225,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"6048:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3198,"id":3226,"nodeType":"Return","src":"6041:13:19"}]},"documentation":{"id":3185,"nodeType":"StructuredDocumentation","src":"5598:121:19","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3228,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:19","nodeType":"FunctionDefinition","parameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3187,"mutability":"mutable","name":"x","nameLocation":"5757:1:19","nodeType":"VariableDeclaration","scope":3228,"src":"5749:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3186,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"y","nameLocation":"5776:1:19","nodeType":"VariableDeclaration","scope":3228,"src":"5768:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3188,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:19","nodeType":"VariableDeclaration","scope":3228,"src":"5787:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3194,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:19","nodeType":"VariableDeclaration","scope":3228,"src":"5816:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"},"typeName":{"id":3193,"nodeType":"UserDefinedTypeName","pathNode":{"id":3192,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2978,"src":"5816:8:19"},"referencedDeclaration":2978,"src":"5816:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:19"},"returnParameters":{"id":3198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3228,"src":"5863:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:19"},"scope":3836,"src":"5724:337:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3339,"nodeType":"Block","src":"6337:1585:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3236,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"6351:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3242,"nodeType":"IfStatement","src":"6347:45:19","trueBody":{"id":3241,"nodeType":"Block","src":"6359:33:19","statements":[{"expression":{"hexValue":"30","id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3235,"id":3240,"nodeType":"Return","src":"6373:8:19"}]}},{"assignments":[3244],"declarations":[{"constant":false,"id":3244,"mutability":"mutable","name":"result","nameLocation":"7079:6:19","nodeType":"VariableDeclaration","scope":3339,"src":"7071:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3243,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3253,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3247,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7099:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3246,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3508,3544],"referencedDeclaration":3508,"src":"7094:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7094:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:19"},{"id":3338,"nodeType":"UncheckedBlock","src":"7508:408:19","statements":[{"expression":{"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7532:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3255,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7542:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7551:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7555:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3264,"nodeType":"ExpressionStatement","src":"7532:35:19"},{"expression":{"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3265,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7581:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3266,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7591:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3267,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7600:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7604:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3275,"nodeType":"ExpressionStatement","src":"7581:35:19"},{"expression":{"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7630:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3277,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7640:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3278,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7649:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3279,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7653:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3286,"nodeType":"ExpressionStatement","src":"7630:35:19"},{"expression":{"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3287,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7679:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3288,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7689:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7698:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3290,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7702:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3297,"nodeType":"ExpressionStatement","src":"7679:35:19"},{"expression":{"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3298,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7728:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7738:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3300,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7747:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7751:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3308,"nodeType":"ExpressionStatement","src":"7728:35:19"},{"expression":{"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3309,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7777:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3310,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7787:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3311,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7796:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7800:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3319,"nodeType":"ExpressionStatement","src":"7777:35:19"},{"expression":{"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3320,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7826:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3321,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7836:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3322,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7845:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3323,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7849:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3330,"nodeType":"ExpressionStatement","src":"7826:35:19"},{"expression":{"arguments":[{"id":3332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7886:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3333,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7894:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3334,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7898:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3331,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"7882:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7882:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3235,"id":3337,"nodeType":"Return","src":"7875:30:19"}]}]},"documentation":{"id":3229,"nodeType":"StructuredDocumentation","src":"6067:208:19","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3340,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:19","nodeType":"FunctionDefinition","parameters":{"id":3232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"a","nameLocation":"6302:1:19","nodeType":"VariableDeclaration","scope":3340,"src":"6294:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:19"},"returnParameters":{"id":3235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3340,"src":"6328:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3233,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:19"},"scope":3836,"src":"6280:1642:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3375,"nodeType":"Block","src":"8098:161:19","statements":[{"id":3374,"nodeType":"UncheckedBlock","src":"8108:145:19","statements":[{"assignments":[3352],"declarations":[{"constant":false,"id":3352,"mutability":"mutable","name":"result","nameLocation":"8140:6:19","nodeType":"VariableDeclaration","scope":3374,"src":"8132:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3356,"initialValue":{"arguments":[{"id":3354,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"8154:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3353,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3340,3376],"referencedDeclaration":3340,"src":"8149:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8149:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3357,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"8177:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3358,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"8187:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3359,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"8199:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2978_$","typeString":"type(enum Math.Rounding)"}},"id":3360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2976,"src":"8199:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"}},"src":"8187:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3362,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"8214:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3363,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"8223:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3365,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"8232:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:19","trueExpression":{"hexValue":"31","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3350,"id":3373,"nodeType":"Return","src":"8170:72:19"}]}]},"documentation":{"id":3341,"nodeType":"StructuredDocumentation","src":"7928:89:19","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3376,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:19","nodeType":"FunctionDefinition","parameters":{"id":3347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3343,"mutability":"mutable","name":"a","nameLocation":"8044:1:19","nodeType":"VariableDeclaration","scope":3376,"src":"8036:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3342,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3346,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:19","nodeType":"VariableDeclaration","scope":3376,"src":"8047:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"},"typeName":{"id":3345,"nodeType":"UserDefinedTypeName","pathNode":{"id":3344,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2978,"src":"8047:8:19"},"referencedDeclaration":2978,"src":"8047:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:19"},"returnParameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3376,"src":"8089:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3348,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:19"},"scope":3836,"src":"8022:237:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3507,"nodeType":"Block","src":"8444:922:19","statements":[{"assignments":[3385],"declarations":[{"constant":false,"id":3385,"mutability":"mutable","name":"result","nameLocation":"8462:6:19","nodeType":"VariableDeclaration","scope":3507,"src":"8454:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3387,"initialValue":{"hexValue":"30","id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:19"},{"id":3504,"nodeType":"UncheckedBlock","src":"8482:855:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8510:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3402,"nodeType":"IfStatement","src":"8506:99:19","trueBody":{"id":3401,"nodeType":"Block","src":"8528:77:19","statements":[{"expression":{"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8546:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3396,"nodeType":"ExpressionStatement","src":"8546:13:19"},{"expression":{"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3397,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"8577:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3400,"nodeType":"ExpressionStatement","src":"8577:13:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8622:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3417,"nodeType":"IfStatement","src":"8618:96:19","trueBody":{"id":3416,"nodeType":"Block","src":"8639:75:19","statements":[{"expression":{"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8657:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3411,"nodeType":"ExpressionStatement","src":"8657:12:19"},{"expression":{"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3412,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"8687:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3415,"nodeType":"ExpressionStatement","src":"8687:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8731:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3432,"nodeType":"IfStatement","src":"8727:96:19","trueBody":{"id":3431,"nodeType":"Block","src":"8748:75:19","statements":[{"expression":{"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8766:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3426,"nodeType":"ExpressionStatement","src":"8766:12:19"},{"expression":{"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3427,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"8796:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3430,"nodeType":"ExpressionStatement","src":"8796:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8840:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3447,"nodeType":"IfStatement","src":"8836:96:19","trueBody":{"id":3446,"nodeType":"Block","src":"8857:75:19","statements":[{"expression":{"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8875:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3441,"nodeType":"ExpressionStatement","src":"8875:12:19"},{"expression":{"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3442,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"8905:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3445,"nodeType":"ExpressionStatement","src":"8905:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8949:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3462,"nodeType":"IfStatement","src":"8945:93:19","trueBody":{"id":3461,"nodeType":"Block","src":"8965:73:19","statements":[{"expression":{"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"8983:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3456,"nodeType":"ExpressionStatement","src":"8983:11:19"},{"expression":{"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"9012:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3460,"nodeType":"ExpressionStatement","src":"9012:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"9055:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3477,"nodeType":"IfStatement","src":"9051:93:19","trueBody":{"id":3476,"nodeType":"Block","src":"9071:73:19","statements":[{"expression":{"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"9089:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3471,"nodeType":"ExpressionStatement","src":"9089:11:19"},{"expression":{"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"9118:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3475,"nodeType":"ExpressionStatement","src":"9118:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"9161:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3492,"nodeType":"IfStatement","src":"9157:93:19","trueBody":{"id":3491,"nodeType":"Block","src":"9177:73:19","statements":[{"expression":{"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"9195:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3486,"nodeType":"ExpressionStatement","src":"9195:11:19"},{"expression":{"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3487,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"9224:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3490,"nodeType":"ExpressionStatement","src":"9224:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"9267:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3503,"nodeType":"IfStatement","src":"9263:64:19","trueBody":{"id":3502,"nodeType":"Block","src":"9283:44:19","statements":[{"expression":{"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3498,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"9301:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3501,"nodeType":"ExpressionStatement","src":"9301:11:19"}]}}]},{"expression":{"id":3505,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"9353:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3383,"id":3506,"nodeType":"Return","src":"9346:13:19"}]},"documentation":{"id":3377,"nodeType":"StructuredDocumentation","src":"8265:113:19","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3508,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:19","nodeType":"FunctionDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"value","nameLocation":"8405:5:19","nodeType":"VariableDeclaration","scope":3508,"src":"8397:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3378,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:19"},"returnParameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3508,"src":"8435:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3381,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:19"},"scope":3836,"src":"8383:983:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3543,"nodeType":"Block","src":"9599:165:19","statements":[{"id":3542,"nodeType":"UncheckedBlock","src":"9609:149:19","statements":[{"assignments":[3520],"declarations":[{"constant":false,"id":3520,"mutability":"mutable","name":"result","nameLocation":"9641:6:19","nodeType":"VariableDeclaration","scope":3542,"src":"9633:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3519,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3524,"initialValue":{"arguments":[{"id":3522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"9655:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3521,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3508,3544],"referencedDeclaration":3508,"src":"9650:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9650:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3525,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"9682:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3526,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"9692:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3527,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"9704:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2978_$","typeString":"type(enum Math.Rounding)"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2976,"src":"9704:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"}},"src":"9692:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3531,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"9724:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"9733:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:19","trueExpression":{"hexValue":"31","id":3536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3539,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3518,"id":3541,"nodeType":"Return","src":"9675:72:19"}]}]},"documentation":{"id":3509,"nodeType":"StructuredDocumentation","src":"9372:142:19","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3544,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:19","nodeType":"FunctionDefinition","parameters":{"id":3515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3511,"mutability":"mutable","name":"value","nameLocation":"9541:5:19","nodeType":"VariableDeclaration","scope":3544,"src":"9533:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3510,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3514,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:19","nodeType":"VariableDeclaration","scope":3544,"src":"9548:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"},"typeName":{"id":3513,"nodeType":"UserDefinedTypeName","pathNode":{"id":3512,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2978,"src":"9548:8:19"},"referencedDeclaration":2978,"src":"9548:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:19"},"returnParameters":{"id":3518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3544,"src":"9590:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3516,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:19"},"scope":3836,"src":"9519:245:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3672,"nodeType":"Block","src":"9951:828:19","statements":[{"assignments":[3553],"declarations":[{"constant":false,"id":3553,"mutability":"mutable","name":"result","nameLocation":"9969:6:19","nodeType":"VariableDeclaration","scope":3672,"src":"9961:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3552,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3555,"initialValue":{"hexValue":"30","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:19"},{"id":3669,"nodeType":"UncheckedBlock","src":"9989:761:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10017:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3572,"nodeType":"IfStatement","src":"10013:99:19","trueBody":{"id":3571,"nodeType":"Block","src":"10034:78:19","statements":[{"expression":{"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10052:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3566,"nodeType":"ExpressionStatement","src":"10052:15:19"},{"expression":{"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"10085:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3570,"nodeType":"ExpressionStatement","src":"10085:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10129:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3589,"nodeType":"IfStatement","src":"10125:99:19","trueBody":{"id":3588,"nodeType":"Block","src":"10146:78:19","statements":[{"expression":{"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10164:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3583,"nodeType":"ExpressionStatement","src":"10164:15:19"},{"expression":{"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"10197:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3587,"nodeType":"ExpressionStatement","src":"10197:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10241:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3606,"nodeType":"IfStatement","src":"10237:99:19","trueBody":{"id":3605,"nodeType":"Block","src":"10258:78:19","statements":[{"expression":{"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10276:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3600,"nodeType":"ExpressionStatement","src":"10276:15:19"},{"expression":{"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3601,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"10309:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3604,"nodeType":"ExpressionStatement","src":"10309:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10353:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3623,"nodeType":"IfStatement","src":"10349:96:19","trueBody":{"id":3622,"nodeType":"Block","src":"10369:76:19","statements":[{"expression":{"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10387:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3617,"nodeType":"ExpressionStatement","src":"10387:14:19"},{"expression":{"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"10419:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3621,"nodeType":"ExpressionStatement","src":"10419:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10462:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3640,"nodeType":"IfStatement","src":"10458:96:19","trueBody":{"id":3639,"nodeType":"Block","src":"10478:76:19","statements":[{"expression":{"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3634,"nodeType":"ExpressionStatement","src":"10496:14:19"},{"expression":{"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"10528:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3638,"nodeType":"ExpressionStatement","src":"10528:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10571:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3657,"nodeType":"IfStatement","src":"10567:96:19","trueBody":{"id":3656,"nodeType":"Block","src":"10587:76:19","statements":[{"expression":{"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10605:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3651,"nodeType":"ExpressionStatement","src":"10605:14:19"},{"expression":{"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3652,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"10637:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3655,"nodeType":"ExpressionStatement","src":"10637:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"10680:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3668,"nodeType":"IfStatement","src":"10676:64:19","trueBody":{"id":3667,"nodeType":"Block","src":"10696:44:19","statements":[{"expression":{"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3663,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"10714:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3666,"nodeType":"ExpressionStatement","src":"10714:11:19"}]}}]},{"expression":{"id":3670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"10766:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3551,"id":3671,"nodeType":"Return","src":"10759:13:19"}]},"documentation":{"id":3545,"nodeType":"StructuredDocumentation","src":"9770:114:19","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3673,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:19","nodeType":"FunctionDefinition","parameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"mutability":"mutable","name":"value","nameLocation":"9912:5:19","nodeType":"VariableDeclaration","scope":3673,"src":"9904:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3546,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:19"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3673,"src":"9942:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3549,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:19"},"scope":3836,"src":"9889:890:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3708,"nodeType":"Block","src":"11014:165:19","statements":[{"id":3707,"nodeType":"UncheckedBlock","src":"11024:149:19","statements":[{"assignments":[3685],"declarations":[{"constant":false,"id":3685,"mutability":"mutable","name":"result","nameLocation":"11056:6:19","nodeType":"VariableDeclaration","scope":3707,"src":"11048:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3689,"initialValue":{"arguments":[{"id":3687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"11071:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3686,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3673,3709],"referencedDeclaration":3673,"src":"11065:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"11098:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3691,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"11108:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3692,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"11120:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2978_$","typeString":"type(enum Math.Rounding)"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2976,"src":"11120:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"}},"src":"11108:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3696,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"11139:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"11148:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:19","trueExpression":{"hexValue":"31","id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3683,"id":3706,"nodeType":"Return","src":"11091:71:19"}]}]},"documentation":{"id":3674,"nodeType":"StructuredDocumentation","src":"10785:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3709,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:19","nodeType":"FunctionDefinition","parameters":{"id":3680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3676,"mutability":"mutable","name":"value","nameLocation":"10956:5:19","nodeType":"VariableDeclaration","scope":3709,"src":"10948:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3675,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3679,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:19","nodeType":"VariableDeclaration","scope":3709,"src":"10963:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"},"typeName":{"id":3678,"nodeType":"UserDefinedTypeName","pathNode":{"id":3677,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2978,"src":"10963:8:19"},"referencedDeclaration":2978,"src":"10963:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:19"},"returnParameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3709,"src":"11005:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3681,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:19"},"scope":3836,"src":"10933:246:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3795,"nodeType":"Block","src":"11493:600:19","statements":[{"assignments":[3718],"declarations":[{"constant":false,"id":3718,"mutability":"mutable","name":"result","nameLocation":"11511:6:19","nodeType":"VariableDeclaration","scope":3795,"src":"11503:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3717,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3720,"initialValue":{"hexValue":"30","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:19"},{"id":3792,"nodeType":"UncheckedBlock","src":"11531:533:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11559:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3735,"nodeType":"IfStatement","src":"11555:98:19","trueBody":{"id":3734,"nodeType":"Block","src":"11577:76:19","statements":[{"expression":{"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11595:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3729,"nodeType":"ExpressionStatement","src":"11595:13:19"},{"expression":{"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"11626:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3733,"nodeType":"ExpressionStatement","src":"11626:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11670:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3750,"nodeType":"IfStatement","src":"11666:95:19","trueBody":{"id":3749,"nodeType":"Block","src":"11687:74:19","statements":[{"expression":{"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11705:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3744,"nodeType":"ExpressionStatement","src":"11705:12:19"},{"expression":{"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3745,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"11735:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3748,"nodeType":"ExpressionStatement","src":"11735:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11778:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3765,"nodeType":"IfStatement","src":"11774:95:19","trueBody":{"id":3764,"nodeType":"Block","src":"11795:74:19","statements":[{"expression":{"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11813:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3759,"nodeType":"ExpressionStatement","src":"11813:12:19"},{"expression":{"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"11843:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3763,"nodeType":"ExpressionStatement","src":"11843:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11886:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3780,"nodeType":"IfStatement","src":"11882:95:19","trueBody":{"id":3779,"nodeType":"Block","src":"11903:74:19","statements":[{"expression":{"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11921:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3774,"nodeType":"ExpressionStatement","src":"11921:12:19"},{"expression":{"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3775,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"11951:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3778,"nodeType":"ExpressionStatement","src":"11951:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11994:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3791,"nodeType":"IfStatement","src":"11990:64:19","trueBody":{"id":3790,"nodeType":"Block","src":"12010:44:19","statements":[{"expression":{"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3786,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"12028:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3789,"nodeType":"ExpressionStatement","src":"12028:11:19"}]}}]},{"expression":{"id":3793,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"12080:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3716,"id":3794,"nodeType":"Return","src":"12073:13:19"}]},"documentation":{"id":3710,"nodeType":"StructuredDocumentation","src":"11185:240:19","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3796,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:19","nodeType":"FunctionDefinition","parameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"value","nameLocation":"11454:5:19","nodeType":"VariableDeclaration","scope":3796,"src":"11446:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:19"},"returnParameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3796,"src":"11484:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:19"},"scope":3836,"src":"11430:663:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3834,"nodeType":"Block","src":"12329:173:19","statements":[{"id":3833,"nodeType":"UncheckedBlock","src":"12339:157:19","statements":[{"assignments":[3808],"declarations":[{"constant":false,"id":3808,"mutability":"mutable","name":"result","nameLocation":"12371:6:19","nodeType":"VariableDeclaration","scope":3833,"src":"12363:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3807,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3812,"initialValue":{"arguments":[{"id":3810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"12387:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3809,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3796,3835],"referencedDeclaration":3796,"src":"12380:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12380:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"12414:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3814,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"12424:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3815,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"12436:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2978_$","typeString":"type(enum Math.Rounding)"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2976,"src":"12436:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"}},"src":"12424:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3819,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"12457:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3822,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"12471:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:19","trueExpression":{"hexValue":"31","id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3830,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3806,"id":3832,"nodeType":"Return","src":"12407:78:19"}]}]},"documentation":{"id":3797,"nodeType":"StructuredDocumentation","src":"12099:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3835,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:19","nodeType":"FunctionDefinition","parameters":{"id":3803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3799,"mutability":"mutable","name":"value","nameLocation":"12271:5:19","nodeType":"VariableDeclaration","scope":3835,"src":"12263:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3798,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3802,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:19","nodeType":"VariableDeclaration","scope":3835,"src":"12278:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"},"typeName":{"id":3801,"nodeType":"UserDefinedTypeName","pathNode":{"id":3800,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2978,"src":"12278:8:19"},"referencedDeclaration":2978,"src":"12278:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2978","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:19"},"returnParameters":{"id":3806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3835,"src":"12320:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:19"},"scope":3836,"src":"12247:255:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3837,"src":"202:12302:19","usedErrors":[]}],"src":"103:12402:19"},"id":19},"base64-sol/base64.sol":{"ast":{"absolutePath":"base64-sol/base64.sol","exportedSymbols":{"Base64":[3951]},"id":3952,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3838,"literals":["solidity",">=","0.6",".0"],"nodeType":"PragmaDirective","src":"33:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"Base64","contractDependencies":[],"contractKind":"library","documentation":{"id":3839,"nodeType":"StructuredDocumentation","src":"59:127:20","text":"@title Base64\n @author Brecht Devos - <brecht@loopring.org>\n @notice Provides functions for encoding/decoding base64"},"fullyImplemented":true,"id":3951,"linearizedBaseContracts":[3951],"name":"Base64","nameLocation":"194:6:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3842,"mutability":"constant","name":"TABLE_ENCODE","nameLocation":"232:12:20","nodeType":"VariableDeclaration","scope":3951,"src":"207:106:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3840,"name":"string","nodeType":"ElementaryTypeName","src":"207:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f","id":3841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"247:66:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"},"visibility":"internal"},{"constant":true,"id":3845,"mutability":"constant","name":"TABLE_DECODE","nameLocation":"344:12:20","nodeType":"VariableDeclaration","scope":3951,"src":"319:451:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3843,"name":"bytes","nodeType":"ElementaryTypeName","src":"319:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":{"hexValue":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e0000003f3435363738393a3b3c3d00000000000000000102030405060708090a0b0c0d0e0f101112131415161718190000000000001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"359:411:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_cbed483d4f9f83dd52b06773fd58dd8723113252a85374752ef109e22dfa50f9","typeString":"literal_string hex\"000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e0000003f3435363738393a3b3c3d00000000000000000102030405060708090a0b0c0d0e0f101112131415161718190000000000001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\""},"value":"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000>\u0000\u0000\u0000?456789:;<=\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123\u0000\u0000\u0000\u0000\u0000"},"visibility":"internal"},{"body":{"id":3888,"nodeType":"Block","src":"850:1788:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3852,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"864:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"864:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"879:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"864:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3858,"nodeType":"IfStatement","src":"860:31:20","trueBody":{"expression":{"hexValue":"","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"889:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":3851,"id":3857,"nodeType":"Return","src":"882:9:20"}},{"assignments":[3860],"declarations":[{"constant":false,"id":3860,"mutability":"mutable","name":"table","nameLocation":"954:5:20","nodeType":"VariableDeclaration","scope":3888,"src":"940:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3859,"name":"string","nodeType":"ElementaryTypeName","src":"940:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3862,"initialValue":{"id":3861,"name":"TABLE_ENCODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"962:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"940:34:20"},{"assignments":[3864],"declarations":[{"constant":false,"id":3864,"mutability":"mutable","name":"encodedLen","nameLocation":"1031:10:20","nodeType":"VariableDeclaration","scope":3888,"src":"1023:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3875,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3866,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"1050:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1050:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1064:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1050:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3870,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1049:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1069:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"1049:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1048:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1044:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1023:48:20"},{"assignments":[3877],"declarations":[{"constant":false,"id":3877,"mutability":"mutable","name":"result","nameLocation":"1165:6:20","nodeType":"VariableDeclaration","scope":3888,"src":"1151:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3876,"name":"string","nodeType":"ElementaryTypeName","src":"1151:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3884,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3880,"name":"encodedLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"1185:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":3881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1198:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1185:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1174:10:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3878,"name":"string","nodeType":"ElementaryTypeName","src":"1178:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1174:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1151:50:20"},{"AST":{"nodeType":"YulBlock","src":"1221:1387:20","statements":[{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"1286:6:20"},{"name":"encodedLen","nodeType":"YulIdentifier","src":"1294:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1279:6:20"},"nodeType":"YulFunctionCall","src":"1279:26:20"},"nodeType":"YulExpressionStatement","src":"1279:26:20"},{"nodeType":"YulVariableDeclaration","src":"1359:29:20","value":{"arguments":[{"name":"table","nodeType":"YulIdentifier","src":"1379:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"1386:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1375:3:20"},"nodeType":"YulFunctionCall","src":"1375:13:20"},"variables":[{"name":"tablePtr","nodeType":"YulTypedName","src":"1363:8:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1427:19:20","value":{"name":"data","nodeType":"YulIdentifier","src":"1442:4:20"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"1431:7:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1459:39:20","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1477:7:20"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1492:4:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1486:5:20"},"nodeType":"YulFunctionCall","src":"1486:11:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:20"},"nodeType":"YulFunctionCall","src":"1473:25:20"},"variables":[{"name":"endPtr","nodeType":"YulTypedName","src":"1463:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1556:32:20","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"1577:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1585:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1573:3:20"},"nodeType":"YulFunctionCall","src":"1573:15:20"},"variables":[{"name":"resultPtr","nodeType":"YulTypedName","src":"1560:9:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1697:697:20","statements":[{"nodeType":"YulAssignment","src":"1747:26:20","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1762:7:20"},{"kind":"number","nodeType":"YulLiteral","src":"1771:1:20","type":"","value":"3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1758:3:20"},"nodeType":"YulFunctionCall","src":"1758:15:20"},"variableNames":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1747:7:20"}]},{"nodeType":"YulVariableDeclaration","src":"1790:27:20","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1809:7:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1803:5:20"},"nodeType":"YulFunctionCall","src":"1803:14:20"},"variables":[{"name":"input","nodeType":"YulTypedName","src":"1794:5:20","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1881:9:20"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"1902:8:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1920:2:20","type":"","value":"18"},{"name":"input","nodeType":"YulIdentifier","src":"1924:5:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1916:3:20"},"nodeType":"YulFunctionCall","src":"1916:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"1932:4:20","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1912:3:20"},"nodeType":"YulFunctionCall","src":"1912:25:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1898:3:20"},"nodeType":"YulFunctionCall","src":"1898:40:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1892:5:20"},"nodeType":"YulFunctionCall","src":"1892:47:20"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1873:7:20"},"nodeType":"YulFunctionCall","src":"1873:67:20"},"nodeType":"YulExpressionStatement","src":"1873:67:20"},{"nodeType":"YulAssignment","src":"1957:30:20","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1974:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1985:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1970:3:20"},"nodeType":"YulFunctionCall","src":"1970:17:20"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1957:9:20"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2012:9:20"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2033:8:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2051:2:20","type":"","value":"12"},{"name":"input","nodeType":"YulIdentifier","src":"2055:5:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2047:3:20"},"nodeType":"YulFunctionCall","src":"2047:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"2063:4:20","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2043:3:20"},"nodeType":"YulFunctionCall","src":"2043:25:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2029:3:20"},"nodeType":"YulFunctionCall","src":"2029:40:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2023:5:20"},"nodeType":"YulFunctionCall","src":"2023:47:20"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2004:7:20"},"nodeType":"YulFunctionCall","src":"2004:67:20"},"nodeType":"YulExpressionStatement","src":"2004:67:20"},{"nodeType":"YulAssignment","src":"2088:30:20","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2105:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2116:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2101:3:20"},"nodeType":"YulFunctionCall","src":"2101:17:20"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2088:9:20"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2143:9:20"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2164:8:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2183:1:20","type":"","value":"6"},{"name":"input","nodeType":"YulIdentifier","src":"2186:5:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2178:3:20"},"nodeType":"YulFunctionCall","src":"2178:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"2194:4:20","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2174:3:20"},"nodeType":"YulFunctionCall","src":"2174:25:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2160:3:20"},"nodeType":"YulFunctionCall","src":"2160:40:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2154:5:20"},"nodeType":"YulFunctionCall","src":"2154:47:20"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2135:7:20"},"nodeType":"YulFunctionCall","src":"2135:67:20"},"nodeType":"YulExpressionStatement","src":"2135:67:20"},{"nodeType":"YulAssignment","src":"2219:30:20","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2236:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2247:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2232:3:20"},"nodeType":"YulFunctionCall","src":"2232:17:20"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2219:9:20"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2274:9:20"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2295:8:20"},{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"2317:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"2325:4:20","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2305:3:20"},"nodeType":"YulFunctionCall","src":"2305:25:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2291:3:20"},"nodeType":"YulFunctionCall","src":"2291:40:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2285:5:20"},"nodeType":"YulFunctionCall","src":"2285:47:20"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2266:7:20"},"nodeType":"YulFunctionCall","src":"2266:67:20"},"nodeType":"YulExpressionStatement","src":"2266:67:20"},{"nodeType":"YulAssignment","src":"2350:30:20","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2367:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2363:3:20"},"nodeType":"YulFunctionCall","src":"2363:17:20"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2350:9:20"}]}]},"condition":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1665:7:20"},{"name":"endPtr","nodeType":"YulIdentifier","src":"1674:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1662:2:20"},"nodeType":"YulFunctionCall","src":"1662:19:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1682:2:20","statements":[]},"pre":{"nodeType":"YulBlock","src":"1659:2:20","statements":[]},"src":"1655:739:20"},{"cases":[{"body":{"nodeType":"YulBlock","src":"2486:47:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2499:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2510:1:20","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2495:3:20"},"nodeType":"YulFunctionCall","src":"2495:17:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2518:3:20","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"2523:6:20","type":"","value":"0x3d3d"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2514:3:20"},"nodeType":"YulFunctionCall","src":"2514:16:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2488:6:20"},"nodeType":"YulFunctionCall","src":"2488:43:20"},"nodeType":"YulExpressionStatement","src":"2488:43:20"}]},"nodeType":"YulCase","src":"2479:54:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2484:1:20","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2553:45:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2566:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2577:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2562:3:20"},"nodeType":"YulFunctionCall","src":"2562:17:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2585:3:20","type":"","value":"248"},{"kind":"number","nodeType":"YulLiteral","src":"2590:4:20","type":"","value":"0x3d"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2581:3:20"},"nodeType":"YulFunctionCall","src":"2581:14:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2555:6:20"},"nodeType":"YulFunctionCall","src":"2555:41:20"},"nodeType":"YulExpressionStatement","src":"2555:41:20"}]},"nodeType":"YulCase","src":"2546:52:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2551:1:20","type":"","value":"2"}}],"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2457:4:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2451:5:20"},"nodeType":"YulFunctionCall","src":"2451:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"2464:1:20","type":"","value":"3"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"2447:3:20"},"nodeType":"YulFunctionCall","src":"2447:19:20"},"nodeType":"YulSwitch","src":"2440:158:20"}]},"evmVersion":"london","externalReferences":[{"declaration":3847,"isOffset":false,"isSlot":false,"src":"1442:4:20","valueSize":1},{"declaration":3847,"isOffset":false,"isSlot":false,"src":"1492:4:20","valueSize":1},{"declaration":3847,"isOffset":false,"isSlot":false,"src":"2457:4:20","valueSize":1},{"declaration":3864,"isOffset":false,"isSlot":false,"src":"1294:10:20","valueSize":1},{"declaration":3877,"isOffset":false,"isSlot":false,"src":"1286:6:20","valueSize":1},{"declaration":3877,"isOffset":false,"isSlot":false,"src":"1577:6:20","valueSize":1},{"declaration":3860,"isOffset":false,"isSlot":false,"src":"1379:5:20","valueSize":1}],"id":3885,"nodeType":"InlineAssembly","src":"1212:1396:20"},{"expression":{"id":3886,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"2625:6:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3851,"id":3887,"nodeType":"Return","src":"2618:13:20"}]},"id":3889,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"786:6:20","nodeType":"FunctionDefinition","parameters":{"id":3848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3847,"mutability":"mutable","name":"data","nameLocation":"806:4:20","nodeType":"VariableDeclaration","scope":3889,"src":"793:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3846,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:19:20"},"returnParameters":{"id":3851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3889,"src":"835:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3849,"name":"string","nodeType":"ElementaryTypeName","src":"835:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"834:15:20"},"scope":3951,"src":"777:1861:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3949,"nodeType":"Block","src":"2718:2104:20","statements":[{"assignments":[3897],"declarations":[{"constant":false,"id":3897,"mutability":"mutable","name":"data","nameLocation":"2741:4:20","nodeType":"VariableDeclaration","scope":3949,"src":"2728:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3896,"name":"bytes","nodeType":"ElementaryTypeName","src":"2728:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3902,"initialValue":{"arguments":[{"id":3900,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"2754:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2748:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3898,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:20","typeDescriptions":{}}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2748:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2728:32:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3903,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"2775:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2775:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2790:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2775:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3912,"nodeType":"IfStatement","src":"2771:41:20","trueBody":{"expression":{"arguments":[{"hexValue":"30","id":3909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2800:9:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3907,"name":"bytes","nodeType":"ElementaryTypeName","src":"2804:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2800:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3895,"id":3911,"nodeType":"Return","src":"2793:19:20"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3914,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"2830:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2830:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"34","id":3916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2844:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2830:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2849:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2830:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420626173653634206465636f64657220696e707574","id":3920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2852:30:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_b899645e29043a8d30000fb8ed0252b5c4f6f5f09672aefa374ee368d324bb89","typeString":"literal_string \"invalid base64 decoder input\""},"value":"invalid base64 decoder input"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b899645e29043a8d30000fb8ed0252b5c4f6f5f09672aefa374ee368d324bb89","typeString":"literal_string \"invalid base64 decoder input\""}],"id":3913,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2822:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2822:61:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3922,"nodeType":"ExpressionStatement","src":"2822:61:20"},{"assignments":[3924],"declarations":[{"constant":false,"id":3924,"mutability":"mutable","name":"table","nameLocation":"2945:5:20","nodeType":"VariableDeclaration","scope":3949,"src":"2932:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3923,"name":"bytes","nodeType":"ElementaryTypeName","src":"2932:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3926,"initialValue":{"id":3925,"name":"TABLE_DECODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"2953:12:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2932:33:20"},{"assignments":[3928],"declarations":[{"constant":false,"id":3928,"mutability":"mutable","name":"decodedLen","nameLocation":"3032:10:20","nodeType":"VariableDeclaration","scope":3949,"src":"3024:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3927,"name":"uint256","nodeType":"ElementaryTypeName","src":"3024:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3936,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3929,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"3046:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3046:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"34","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3060:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3046:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3933,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3045:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"33","id":3934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3065:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"3045:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3024:42:20"},{"assignments":[3938],"declarations":[{"constant":false,"id":3938,"mutability":"mutable","name":"result","nameLocation":"3159:6:20","nodeType":"VariableDeclaration","scope":3949,"src":"3146:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3937,"name":"bytes","nodeType":"ElementaryTypeName","src":"3146:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3945,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3941,"name":"decodedLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"3178:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3191:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3178:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3168:9:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3939,"name":"bytes","nodeType":"ElementaryTypeName","src":"3172:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3168:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3146:48:20"},{"AST":{"nodeType":"YulBlock","src":"3214:1578:20","statements":[{"nodeType":"YulVariableDeclaration","src":"3260:46:20","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3287:4:20"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3299:4:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3293:5:20"},"nodeType":"YulFunctionCall","src":"3293:11:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3283:3:20"},"nodeType":"YulFunctionCall","src":"3283:22:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3277:5:20"},"nodeType":"YulFunctionCall","src":"3277:29:20"},"variables":[{"name":"lastBytes","nodeType":"YulTypedName","src":"3264:9:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3353:191:20","statements":[{"nodeType":"YulAssignment","src":"3371:32:20","value":{"arguments":[{"name":"decodedLen","nodeType":"YulIdentifier","src":"3389:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"3401:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3385:3:20"},"nodeType":"YulFunctionCall","src":"3385:18:20"},"variableNames":[{"name":"decodedLen","nodeType":"YulIdentifier","src":"3371:10:20"}]},{"body":{"nodeType":"YulBlock","src":"3458:72:20","statements":[{"nodeType":"YulAssignment","src":"3480:32:20","value":{"arguments":[{"name":"decodedLen","nodeType":"YulIdentifier","src":"3498:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"3510:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3494:3:20"},"nodeType":"YulFunctionCall","src":"3494:18:20"},"variableNames":[{"name":"decodedLen","nodeType":"YulIdentifier","src":"3480:10:20"}]}]},"condition":{"arguments":[{"arguments":[{"name":"lastBytes","nodeType":"YulIdentifier","src":"3430:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3441:6:20","type":"","value":"0xFFFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3426:3:20"},"nodeType":"YulFunctionCall","src":"3426:22:20"},{"kind":"number","nodeType":"YulLiteral","src":"3450:6:20","type":"","value":"0x3d3d"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3423:2:20"},"nodeType":"YulFunctionCall","src":"3423:34:20"},"nodeType":"YulIf","src":"3420:110:20"}]},"condition":{"arguments":[{"arguments":[{"name":"lastBytes","nodeType":"YulIdentifier","src":"3329:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3340:4:20","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3325:3:20"},"nodeType":"YulFunctionCall","src":"3325:20:20"},{"kind":"number","nodeType":"YulLiteral","src":"3347:4:20","type":"","value":"0x3d"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3322:2:20"},"nodeType":"YulFunctionCall","src":"3322:30:20"},"nodeType":"YulIf","src":"3319:225:20"},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"3609:6:20"},{"name":"decodedLen","nodeType":"YulIdentifier","src":"3617:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3602:6:20"},"nodeType":"YulFunctionCall","src":"3602:26:20"},"nodeType":"YulExpressionStatement","src":"3602:26:20"},{"nodeType":"YulVariableDeclaration","src":"3682:29:20","value":{"arguments":[{"name":"table","nodeType":"YulIdentifier","src":"3702:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"3709:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3698:3:20"},"nodeType":"YulFunctionCall","src":"3698:13:20"},"variables":[{"name":"tablePtr","nodeType":"YulTypedName","src":"3686:8:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3750:19:20","value":{"name":"data","nodeType":"YulIdentifier","src":"3765:4:20"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"3754:7:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3782:39:20","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"3800:7:20"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3815:4:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3809:5:20"},"nodeType":"YulFunctionCall","src":"3809:11:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3796:3:20"},"nodeType":"YulFunctionCall","src":"3796:25:20"},"variables":[{"name":"endPtr","nodeType":"YulTypedName","src":"3786:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3879:32:20","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"3900:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3908:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3896:3:20"},"nodeType":"YulFunctionCall","src":"3896:15:20"},"variables":[{"name":"resultPtr","nodeType":"YulTypedName","src":"3883:9:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4025:757:20","statements":[{"nodeType":"YulAssignment","src":"4078:26:20","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"4093:7:20"},{"kind":"number","nodeType":"YulLiteral","src":"4102:1:20","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4089:3:20"},"nodeType":"YulFunctionCall","src":"4089:15:20"},"variableNames":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"4078:7:20"}]},{"nodeType":"YulVariableDeclaration","src":"4120:27:20","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"4139:7:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4133:5:20"},"nodeType":"YulFunctionCall","src":"4133:14:20"},"variables":[{"name":"input","nodeType":"YulTypedName","src":"4124:5:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4196:473:20","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4266:2:20","type":"","value":"18"},{"arguments":[{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4284:8:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4302:2:20","type":"","value":"24"},{"name":"input","nodeType":"YulIdentifier","src":"4306:5:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4298:3:20"},"nodeType":"YulFunctionCall","src":"4298:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"4314:4:20","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4294:3:20"},"nodeType":"YulFunctionCall","src":"4294:25:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4280:3:20"},"nodeType":"YulFunctionCall","src":"4280:40:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4274:5:20"},"nodeType":"YulFunctionCall","src":"4274:47:20"},{"kind":"number","nodeType":"YulLiteral","src":"4323:4:20","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4270:3:20"},"nodeType":"YulFunctionCall","src":"4270:58:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4262:3:20"},"nodeType":"YulFunctionCall","src":"4262:67:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4358:2:20","type":"","value":"12"},{"arguments":[{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4376:8:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4394:2:20","type":"","value":"16"},{"name":"input","nodeType":"YulIdentifier","src":"4398:5:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4390:3:20"},"nodeType":"YulFunctionCall","src":"4390:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"4406:4:20","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4386:3:20"},"nodeType":"YulFunctionCall","src":"4386:25:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4372:3:20"},"nodeType":"YulFunctionCall","src":"4372:40:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4366:5:20"},"nodeType":"YulFunctionCall","src":"4366:47:20"},{"kind":"number","nodeType":"YulLiteral","src":"4415:4:20","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4362:3:20"},"nodeType":"YulFunctionCall","src":"4362:58:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4354:3:20"},"nodeType":"YulFunctionCall","src":"4354:67:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4234:3:20"},"nodeType":"YulFunctionCall","src":"4234:188:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4476:1:20","type":"","value":"6"},{"arguments":[{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4493:8:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4512:1:20","type":"","value":"8"},{"name":"input","nodeType":"YulIdentifier","src":"4515:5:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4507:3:20"},"nodeType":"YulFunctionCall","src":"4507:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"4523:4:20","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4503:3:20"},"nodeType":"YulFunctionCall","src":"4503:25:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4489:3:20"},"nodeType":"YulFunctionCall","src":"4489:40:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4483:5:20"},"nodeType":"YulFunctionCall","src":"4483:47:20"},{"kind":"number","nodeType":"YulLiteral","src":"4532:4:20","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4479:3:20"},"nodeType":"YulFunctionCall","src":"4479:58:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4471:3:20"},"nodeType":"YulFunctionCall","src":"4471:67:20"},{"arguments":[{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4585:8:20"},{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"4607:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"4615:4:20","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4595:3:20"},"nodeType":"YulFunctionCall","src":"4595:25:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4581:3:20"},"nodeType":"YulFunctionCall","src":"4581:40:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4575:5:20"},"nodeType":"YulFunctionCall","src":"4575:47:20"},{"kind":"number","nodeType":"YulLiteral","src":"4624:4:20","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4571:3:20"},"nodeType":"YulFunctionCall","src":"4571:58:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4443:3:20"},"nodeType":"YulFunctionCall","src":"4443:208:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4210:3:20"},"nodeType":"YulFunctionCall","src":"4210:459:20"},"variables":[{"name":"output","nodeType":"YulTypedName","src":"4200:6:20","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4693:9:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4708:3:20","type":"","value":"232"},{"name":"output","nodeType":"YulIdentifier","src":"4713:6:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4704:3:20"},"nodeType":"YulFunctionCall","src":"4704:16:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4686:6:20"},"nodeType":"YulFunctionCall","src":"4686:35:20"},"nodeType":"YulExpressionStatement","src":"4686:35:20"},{"nodeType":"YulAssignment","src":"4738:30:20","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4755:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4766:1:20","type":"","value":"3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4751:3:20"},"nodeType":"YulFunctionCall","src":"4751:17:20"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4738:9:20"}]}]},"condition":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"3993:7:20"},{"name":"endPtr","nodeType":"YulIdentifier","src":"4002:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3990:2:20"},"nodeType":"YulFunctionCall","src":"3990:19:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4010:2:20","statements":[]},"pre":{"nodeType":"YulBlock","src":"3987:2:20","statements":[]},"src":"3983:799:20"}]},"evmVersion":"london","externalReferences":[{"declaration":3897,"isOffset":false,"isSlot":false,"src":"3287:4:20","valueSize":1},{"declaration":3897,"isOffset":false,"isSlot":false,"src":"3299:4:20","valueSize":1},{"declaration":3897,"isOffset":false,"isSlot":false,"src":"3765:4:20","valueSize":1},{"declaration":3897,"isOffset":false,"isSlot":false,"src":"3815:4:20","valueSize":1},{"declaration":3928,"isOffset":false,"isSlot":false,"src":"3371:10:20","valueSize":1},{"declaration":3928,"isOffset":false,"isSlot":false,"src":"3389:10:20","valueSize":1},{"declaration":3928,"isOffset":false,"isSlot":false,"src":"3480:10:20","valueSize":1},{"declaration":3928,"isOffset":false,"isSlot":false,"src":"3498:10:20","valueSize":1},{"declaration":3928,"isOffset":false,"isSlot":false,"src":"3617:10:20","valueSize":1},{"declaration":3938,"isOffset":false,"isSlot":false,"src":"3609:6:20","valueSize":1},{"declaration":3938,"isOffset":false,"isSlot":false,"src":"3900:6:20","valueSize":1},{"declaration":3924,"isOffset":false,"isSlot":false,"src":"3702:5:20","valueSize":1}],"id":3946,"nodeType":"InlineAssembly","src":"3205:1587:20"},{"expression":{"id":3947,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"4809:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3895,"id":3948,"nodeType":"Return","src":"4802:13:20"}]},"id":3950,"implemented":true,"kind":"function","modifiers":[],"name":"decode","nameLocation":"2653:6:20","nodeType":"FunctionDefinition","parameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"_data","nameLocation":"2674:5:20","nodeType":"VariableDeclaration","scope":3950,"src":"2660:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3890,"name":"string","nodeType":"ElementaryTypeName","src":"2660:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2659:21:20"},"returnParameters":{"id":3895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3950,"src":"2704:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3893,"name":"bytes","nodeType":"ElementaryTypeName","src":"2704:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2703:14:20"},"scope":3951,"src":"2644:2178:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3952,"src":"186:4638:20","usedErrors":[]}],"src":"33:4792:20"},"id":20},"contracts/BasicNft.sol":{"ast":{"absolutePath":"contracts/BasicNft.sol","exportedSymbols":{"Address":[2738],"BasicNft":[4010],"Context":[2760],"ERC165":[2959],"ERC721":[2122],"IERC165":[2971],"IERC721":[2238],"IERC721Metadata":[2408],"IERC721Receiver":[2256],"Math":[3836],"Strings":[2935]},"id":4011,"license":"MIT","nodeType":"SourceUnit","nodes":[{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":3953,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4011,"sourceUnit":2123,"src":"32:57:21","symbolAliases":[],"unitAlias":""},{"id":3954,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"91:23:21"},{"abstract":false,"baseContracts":[{"baseName":{"id":3955,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2122,"src":"137:6:21"},"id":3956,"nodeType":"InheritanceSpecifier","src":"137:6:21"}],"canonicalName":"BasicNft","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4010,"linearizedBaseContracts":[4010,2122,2408,2238,2959,2971,2760],"name":"BasicNft","nameLocation":"125:8:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"78ce9035","id":3959,"mutability":"constant","name":"TOKEN_URI","nameLocation":"173:9:21","nodeType":"VariableDeclaration","scope":4010,"src":"150:132:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3957,"name":"string","nodeType":"ElementaryTypeName","src":"150:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6e","id":3958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"193:89:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5eed4f63f16dc8435ed5e031f22f9553384324656005540ac9ece13d0969af8","typeString":"literal_string \"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json\""},"value":"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json"},"visibility":"public"},{"constant":false,"id":3961,"mutability":"mutable","name":"s_tokenCounter","nameLocation":"304:14:21","nodeType":"VariableDeclaration","scope":4010,"src":"288:30:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3960,"name":"uint256","nodeType":"ElementaryTypeName","src":"288:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":3972,"nodeType":"Block","src":"360:34:21","statements":[{"expression":{"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3968,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"370:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"386:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"370:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3971,"nodeType":"ExpressionStatement","src":"370:17:21"}]},"id":3973,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"446f676965","id":3964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"345:7:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5d21699003d762b953d66adecbe4f97c4791cae2f281f96a4beb7efcb7bbcf6","typeString":"literal_string \"Dogie\""},"value":"Dogie"},{"hexValue":"444f47","id":3965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"353:5:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5b35d1f7dc7cf1448a70456de4980702e1fdae4e057d31003c0e1e4b3c4bde2","typeString":"literal_string \"DOG\""},"value":"DOG"}],"id":3966,"kind":"baseConstructorSpecifier","modifierName":{"id":3963,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2122,"src":"338:6:21"},"nodeType":"ModifierInvocation","src":"338:21:21"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3962,"nodeType":"ParameterList","parameters":[],"src":"335:2:21"},"returnParameters":{"id":3967,"nodeType":"ParameterList","parameters":[],"src":"360:0:21"},"scope":4010,"src":"324:70:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3989,"nodeType":"Block","src":"443:110:21","statements":[{"expression":{"arguments":[{"expression":{"id":3979,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"463:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"463:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3981,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"474:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3978,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1672,1701],"referencedDeclaration":1672,"src":"453:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"453:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3983,"nodeType":"ExpressionStatement","src":"453:36:21"},{"expression":{"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"499:16:21","subExpression":{"id":3984,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"499:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3986,"nodeType":"ExpressionStatement","src":"499:16:21"},{"expression":{"id":3987,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"532:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3977,"id":3988,"nodeType":"Return","src":"525:21:21"}]},"functionSelector":"c2229fea","id":3990,"implemented":true,"kind":"function","modifiers":[],"name":"mintNft","nameLocation":"409:7:21","nodeType":"FunctionDefinition","parameters":{"id":3974,"nodeType":"ParameterList","parameters":[],"src":"416:2:21"},"returnParameters":{"id":3977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3990,"src":"435:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3975,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"434:9:21"},"scope":4010,"src":"400:153:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1382],"body":{"id":4000,"nodeType":"Block","src":"642:33:21","statements":[{"expression":{"id":3998,"name":"TOKEN_URI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"659:9:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3997,"id":3999,"nodeType":"Return","src":"652:16:21"}]},"functionSelector":"c87b56dd","id":4001,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"568:8:21","nodeType":"FunctionDefinition","overrides":{"id":3994,"nodeType":"OverrideSpecifier","overrides":[],"src":"610:8:21"},"parameters":{"id":3993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4001,"src":"577:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3991,"name":"uint256","nodeType":"ElementaryTypeName","src":"577:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"576:21:21"},"returnParameters":{"id":3997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4001,"src":"628:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3995,"name":"string","nodeType":"ElementaryTypeName","src":"628:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"627:15:21"},"scope":4010,"src":"559:116:21","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4008,"nodeType":"Block","src":"741:38:21","statements":[{"expression":{"id":4006,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"758:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4005,"id":4007,"nodeType":"Return","src":"751:21:21"}]},"functionSelector":"6e02007d","id":4009,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCounter","nameLocation":"693:15:21","nodeType":"FunctionDefinition","parameters":{"id":4002,"nodeType":"ParameterList","parameters":[],"src":"708:2:21"},"returnParameters":{"id":4005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4009,"src":"732:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4003,"name":"uint256","nodeType":"ElementaryTypeName","src":"732:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"731:9:21"},"scope":4010,"src":"684:95:21","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4011,"src":"116:666:21","usedErrors":[]}],"src":"32:750:21"},"id":21},"contracts/DynamicSvgNft.sol":{"ast":{"absolutePath":"contracts/DynamicSvgNft.sol","exportedSymbols":{"Address":[2738],"AggregatorV3Interface":[285],"Base64":[3951],"Context":[2760],"DynamicSvgNft":[4231],"ERC165":[2959],"ERC721":[2122],"IERC165":[2971],"IERC721":[2238],"IERC721Metadata":[2408],"IERC721Receiver":[2256],"Math":[3836],"Strings":[2935]},"id":4232,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4012,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"33:23:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":4013,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4232,"sourceUnit":2123,"src":"58:57:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"base64-sol/base64.sol","file":"base64-sol/base64.sol","id":4014,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4232,"sourceUnit":3952,"src":"116:31:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":4015,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4232,"sourceUnit":286,"src":"148:76:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4016,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2122,"src":"253:6:22"},"id":4017,"nodeType":"InheritanceSpecifier","src":"253:6:22"}],"canonicalName":"DynamicSvgNft","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4231,"linearizedBaseContracts":[4231,2122,2408,2238,2959,2971,2760],"name":"DynamicSvgNft","nameLocation":"236:13:22","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4019,"mutability":"mutable","name":"s_tokenCounter","nameLocation":"395:14:22","nodeType":"VariableDeclaration","scope":4231,"src":"379:30:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"379:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4021,"mutability":"mutable","name":"i_lowImageUri","nameLocation":"430:13:22","nodeType":"VariableDeclaration","scope":4231,"src":"415:28:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4020,"name":"string","nodeType":"ElementaryTypeName","src":"415:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":4023,"mutability":"mutable","name":"i_highImageUri","nameLocation":"464:14:22","nodeType":"VariableDeclaration","scope":4231,"src":"449:29:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4022,"name":"string","nodeType":"ElementaryTypeName","src":"449:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":true,"id":4026,"mutability":"constant","name":"base64EncodedSvgPrefix","nameLocation":"508:22:22","nodeType":"VariableDeclaration","scope":4231,"src":"484:76:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4024,"name":"string","nodeType":"ElementaryTypeName","src":"484:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"646174613a696d6167652f7376672b786d6c3b6261736536342c","id":4025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"532:28:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_f90ae014c41cb48231e1f02c314087ff9c479133697911d25c5fe231e237dd14","typeString":"literal_string \"data:image/svg+xml;base64,\""},"value":"data:image/svg+xml;base64,"},"visibility":"private"},{"constant":false,"id":4029,"mutability":"immutable","name":"i_priceFeed","nameLocation":"607:11:22","nodeType":"VariableDeclaration","scope":4231,"src":"566:52:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$285","typeString":"contract AggregatorV3Interface"},"typeName":{"id":4028,"nodeType":"UserDefinedTypeName","pathNode":{"id":4027,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":285,"src":"566:21:22"},"referencedDeclaration":285,"src":"566:21:22","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$285","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"},{"constant":false,"functionSelector":"e425aded","id":4033,"mutability":"mutable","name":"s_tokenIdToHighValue","nameLocation":"658:20:22","nodeType":"VariableDeclaration","scope":4231,"src":"624:54:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"},"typeName":{"id":4032,"keyType":{"id":4030,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"624:26:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"},"valueType":{"id":4031,"name":"int256","nodeType":"ElementaryTypeName","src":"643:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}},"visibility":"public"},{"anonymous":false,"id":4039,"name":"CreatedNFT","nameLocation":"691:10:22","nodeType":"EventDefinition","parameters":{"id":4038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4035,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"718:7:22","nodeType":"VariableDeclaration","scope":4039,"src":"702:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4034,"name":"uint256","nodeType":"ElementaryTypeName","src":"702:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4037,"indexed":false,"mutability":"mutable","name":"highValue","nameLocation":"734:9:22","nodeType":"VariableDeclaration","scope":4039,"src":"727:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4036,"name":"int256","nodeType":"ElementaryTypeName","src":"727:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"701:43:22"},"src":"685:60:22"},{"body":{"id":4074,"nodeType":"Block","src":"866:194:22","statements":[{"expression":{"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4052,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"876:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"893:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"876:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4055,"nodeType":"ExpressionStatement","src":"876:18:22"},{"expression":{"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4056,"name":"i_lowImageUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"904:13:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4058,"name":"lowSvg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"934:6:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4057,"name":"svgToImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"920:13:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory) pure returns (string memory)"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"920:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"904:37:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4061,"nodeType":"ExpressionStatement","src":"904:37:22"},{"expression":{"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4062,"name":"i_highImageUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"951:14:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4064,"name":"highSvg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"982:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4063,"name":"svgToImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"968:13:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory) pure returns (string memory)"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"968:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"951:39:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4067,"nodeType":"ExpressionStatement","src":"951:39:22"},{"expression":{"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4068,"name":"i_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"1000:11:22","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$285","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4070,"name":"priceFeedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"1036:16:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4069,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"1014:21:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$285_$","typeString":"type(contract AggregatorV3Interface)"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1014:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$285","typeString":"contract AggregatorV3Interface"}},"src":"1000:53:22","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$285","typeString":"contract AggregatorV3Interface"}},"id":4073,"nodeType":"ExpressionStatement","src":"1000:53:22"}]},"id":4075,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"44796e616d696320535647204e4654","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"841:17:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_ea1fd3254b60bf4a83b0986ee86edb0638cb2f820040df53c34a4f0ba57d146d","typeString":"literal_string \"Dynamic SVG NFT\""},"value":"Dynamic SVG NFT"},{"hexValue":"44534e","id":4049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"860:5:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_275f2341ff18e41e04cc32c20974ed0046a9cb9bd1a1fcf968aafc5924b80a4d","typeString":"literal_string \"DSN\""},"value":"DSN"}],"id":4050,"kind":"baseConstructorSpecifier","modifierName":{"id":4047,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2122,"src":"834:6:22"},"nodeType":"ModifierInvocation","src":"834:32:22"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4041,"mutability":"mutable","name":"priceFeedAddress","nameLocation":"771:16:22","nodeType":"VariableDeclaration","scope":4075,"src":"763:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4040,"name":"address","nodeType":"ElementaryTypeName","src":"763:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4043,"mutability":"mutable","name":"lowSvg","nameLocation":"803:6:22","nodeType":"VariableDeclaration","scope":4075,"src":"789:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4042,"name":"string","nodeType":"ElementaryTypeName","src":"789:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4045,"mutability":"mutable","name":"highSvg","nameLocation":"825:7:22","nodeType":"VariableDeclaration","scope":4075,"src":"811:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4044,"name":"string","nodeType":"ElementaryTypeName","src":"811:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"762:71:22"},"returnParameters":{"id":4051,"nodeType":"ParameterList","parameters":[],"src":"866:0:22"},"scope":4231,"src":"751:309:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4107,"nodeType":"Block","src":"1143:184:22","statements":[{"assignments":[4083],"declarations":[{"constant":false,"id":4083,"mutability":"mutable","name":"svgBase64Encoded","nameLocation":"1167:16:22","nodeType":"VariableDeclaration","scope":4107,"src":"1153:30:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4082,"name":"string","nodeType":"ElementaryTypeName","src":"1153:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4097,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":4092,"name":"svg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"1230:3:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4090,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1213:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1213:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1213:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1206:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4088,"name":"string","nodeType":"ElementaryTypeName","src":"1206:6:22","typeDescriptions":{}}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1206:29:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1200:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4086,"name":"bytes","nodeType":"ElementaryTypeName","src":"1200:5:22","typeDescriptions":{}}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1200:36:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4084,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"1186:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$3951_$","typeString":"type(library Base64)"}},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":3889,"src":"1186:13:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1186:51:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1153:84:22"},{"expression":{"arguments":[{"arguments":[{"id":4102,"name":"base64EncodedSvgPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"1278:22:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4103,"name":"svgBase64Encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"1301:16:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4100,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1261:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1261:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1261:57:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1254:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4098,"name":"string","nodeType":"ElementaryTypeName","src":"1254:6:22","typeDescriptions":{}}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1254:65:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4081,"id":4106,"nodeType":"Return","src":"1247:72:22"}]},"functionSelector":"30d871c6","id":4108,"implemented":true,"kind":"function","modifiers":[],"name":"svgToImageURI","nameLocation":"1075:13:22","nodeType":"FunctionDefinition","parameters":{"id":4078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4077,"mutability":"mutable","name":"svg","nameLocation":"1103:3:22","nodeType":"VariableDeclaration","scope":4108,"src":"1089:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4076,"name":"string","nodeType":"ElementaryTypeName","src":"1089:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1088:19:22"},"returnParameters":{"id":4081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4108,"src":"1129:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4079,"name":"string","nodeType":"ElementaryTypeName","src":"1129:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1128:15:22"},"scope":4231,"src":"1066:261:22","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4134,"nodeType":"Block","src":"1375:289:22","statements":[{"expression":{"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4113,"name":"s_tokenIdToHighValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"1385:20:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"}},"id":4115,"indexExpression":{"id":4114,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"1406:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1385:36:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4116,"name":"highValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"1423:9:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1385:47:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4118,"nodeType":"ExpressionStatement","src":"1385:47:22"},{"expression":{"arguments":[{"expression":{"id":4120,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1452:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1452:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4122,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"1464:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4119,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1672,1701],"referencedDeclaration":1672,"src":"1442:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1442:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4124,"nodeType":"ExpressionStatement","src":"1442:37:22"},{"expression":{"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4125,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"1489:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1506:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1489:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4128,"nodeType":"ExpressionStatement","src":"1489:18:22"},{"eventCall":{"arguments":[{"id":4130,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"1632:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4131,"name":"highValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"1647:9:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4129,"name":"CreatedNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"1621:10:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_int256_$returns$__$","typeString":"function (uint256,int256)"}},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1621:36:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4133,"nodeType":"EmitStatement","src":"1616:41:22"}]},"functionSelector":"1e930812","id":4135,"implemented":true,"kind":"function","modifiers":[],"name":"mintNft","nameLocation":"1342:7:22","nodeType":"FunctionDefinition","parameters":{"id":4111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4110,"mutability":"mutable","name":"highValue","nameLocation":"1357:9:22","nodeType":"VariableDeclaration","scope":4135,"src":"1350:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4109,"name":"int256","nodeType":"ElementaryTypeName","src":"1350:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1349:18:22"},"returnParameters":{"id":4112,"nodeType":"ParameterList","parameters":[],"src":"1375:0:22"},"scope":4231,"src":"1333:331:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1391],"body":{"id":4143,"nodeType":"Block","src":"1736:55:22","statements":[{"expression":{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","id":4141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1753:31:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},"value":"data:application/json;base64,"},"functionReturnParameters":4140,"id":4142,"nodeType":"Return","src":"1746:38:22"}]},"id":4144,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"1680:8:22","nodeType":"FunctionDefinition","overrides":{"id":4137,"nodeType":"OverrideSpecifier","overrides":[],"src":"1705:8:22"},"parameters":{"id":4136,"nodeType":"ParameterList","parameters":[],"src":"1688:2:22"},"returnParameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4144,"src":"1722:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4138,"name":"string","nodeType":"ElementaryTypeName","src":"1722:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1721:15:22"},"scope":4231,"src":"1671:120:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[1382],"body":{"id":4205,"nodeType":"Block","src":"2051:1487:22","statements":[{"expression":{"arguments":[{"arguments":[{"id":4154,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"2077:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4153,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"2069:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2069:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"55524920517565727920666f72206e6f6e6578697374656e7420746f6b656e","id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2087:33:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30","typeString":"literal_string \"URI Query for nonexistent token\""},"value":"URI Query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30","typeString":"literal_string \"URI Query for nonexistent token\""}],"id":4152,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2061:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2061:60:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4158,"nodeType":"ExpressionStatement","src":"2061:60:22"},{"assignments":[null,4160,null,null,null],"declarations":[null,{"constant":false,"id":4160,"mutability":"mutable","name":"price","nameLocation":"2277:5:22","nodeType":"VariableDeclaration","scope":4205,"src":"2270:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4159,"name":"int256","nodeType":"ElementaryTypeName","src":"2270:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":4164,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4161,"name":"i_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"2289:11:22","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$285","typeString":"contract AggregatorV3Interface"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":284,"src":"2289:27:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2289:29:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"2268:50:22"},{"assignments":[4166],"declarations":[{"constant":false,"id":4166,"mutability":"mutable","name":"imageURI","nameLocation":"2342:8:22","nodeType":"VariableDeclaration","scope":4205,"src":"2328:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4165,"name":"string","nodeType":"ElementaryTypeName","src":"2328:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4168,"initialValue":{"id":4167,"name":"i_lowImageUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"2353:13:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2328:38:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4169,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"2380:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"baseExpression":{"id":4170,"name":"s_tokenIdToHighValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"2389:20:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"}},"id":4172,"indexExpression":{"id":4171,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"2410:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2389:29:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2380:38:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4179,"nodeType":"IfStatement","src":"2376:93:22","trueBody":{"id":4178,"nodeType":"Block","src":"2419:50:22","statements":[{"expression":{"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4174,"name":"imageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"2433:8:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4175,"name":"i_highImageUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"2444:14:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"2433:25:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4177,"nodeType":"ExpressionStatement","src":"2433:25:22"}]}},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4184,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[4144],"referencedDeclaration":4144,"src":"2920:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2920:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"arguments":[{"hexValue":"7b226e616d65223a22","id":4192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:11:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832","typeString":"literal_string \"{\"name\":\"\""},"value":"{\"name\":\""},{"arguments":[],"expression":{"argumentTypes":[],"id":4193,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"3113:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3113:6:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c20226465736372697074696f6e223a22416e204e46542074686174206368616e676573206261736564206f6e2074686520436861696e6c696e6b2046656564222c20","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3187:70:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574","typeString":"literal_string \"\", \"description\":\"An NFT that changes based on the Chainlink Feed\", \""},"value":"\", \"description\":\"An NFT that changes based on the Chainlink Feed\", "},{"hexValue":"2261747472696275746573223a205b7b2274726169745f74797065223a2022636f6f6c6e657373222c202276616c7565223a203130307d5d2c2022696d616765223a22","id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3291:69:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b","typeString":"literal_string \"\"attributes\": [{\"trait_type\": \"coolness\", \"value\": 100}], \"image\":\"\""},"value":"\"attributes\": [{\"trait_type\": \"coolness\", \"value\": 100}], \"image\":\""},{"id":4197,"name":"imageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"3394:8:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d","id":4198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3436:4:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","typeString":"literal_string \"\"}\""},"value":"\"}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832","typeString":"literal_string \"{\"name\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574","typeString":"literal_string \"\", \"description\":\"An NFT that changes based on the Chainlink Feed\", \""},{"typeIdentifier":"t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b","typeString":"literal_string \"\"attributes\": [{\"trait_type\": \"coolness\", \"value\": 100}], \"image\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","typeString":"literal_string \"\"}\""}],"expression":{"id":4190,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3018:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3018:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3018:448:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2983:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4188,"name":"bytes","nodeType":"ElementaryTypeName","src":"2983:5:22","typeDescriptions":{}}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2983:505:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4186,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"2948:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$3951_$","typeString":"type(library Base64)"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":3889,"src":"2948:13:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2948:558:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4182,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2886:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"2886:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2886:634:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2858:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4180,"name":"string","nodeType":"ElementaryTypeName","src":"2858:6:22","typeDescriptions":{}}},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2858:672:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4151,"id":4204,"nodeType":"Return","src":"2851:679:22"}]},"functionSelector":"c87b56dd","id":4206,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1973:8:22","nodeType":"FunctionDefinition","overrides":{"id":4148,"nodeType":"OverrideSpecifier","overrides":[],"src":"2019:8:22"},"parameters":{"id":4147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"tokenId","nameLocation":"1990:7:22","nodeType":"VariableDeclaration","scope":4206,"src":"1982:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:17:22"},"returnParameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4206,"src":"2036:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4149,"name":"string","nodeType":"ElementaryTypeName","src":"2036:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2035:15:22"},"scope":4231,"src":"1964:1574:22","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4213,"nodeType":"Block","src":"3601:38:22","statements":[{"expression":{"id":4211,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"3618:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4210,"id":4212,"nodeType":"Return","src":"3611:21:22"}]},"functionSelector":"6e02007d","id":4214,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCounter","nameLocation":"3554:15:22","nodeType":"FunctionDefinition","parameters":{"id":4207,"nodeType":"ParameterList","parameters":[],"src":"3569:2:22"},"returnParameters":{"id":4210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4214,"src":"3593:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4208,"name":"uint256","nodeType":"ElementaryTypeName","src":"3593:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3592:9:22"},"scope":4231,"src":"3545:94:22","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4221,"nodeType":"Block","src":"3705:37:22","statements":[{"expression":{"id":4219,"name":"i_lowImageUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"3722:13:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":4218,"id":4220,"nodeType":"Return","src":"3715:20:22"}]},"functionSelector":"8fb7e271","id":4222,"implemented":true,"kind":"function","modifiers":[],"name":"getLowImageUri","nameLocation":"3653:14:22","nodeType":"FunctionDefinition","parameters":{"id":4215,"nodeType":"ParameterList","parameters":[],"src":"3667:2:22"},"returnParameters":{"id":4218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4222,"src":"3691:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4216,"name":"string","nodeType":"ElementaryTypeName","src":"3691:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3690:15:22"},"scope":4231,"src":"3644:98:22","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4229,"nodeType":"Block","src":"3809:38:22","statements":[{"expression":{"id":4227,"name":"i_highImageUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"3826:14:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":4226,"id":4228,"nodeType":"Return","src":"3819:21:22"}]},"functionSelector":"67e5366c","id":4230,"implemented":true,"kind":"function","modifiers":[],"name":"getHighImageUri","nameLocation":"3756:15:22","nodeType":"FunctionDefinition","parameters":{"id":4223,"nodeType":"ParameterList","parameters":[],"src":"3771:2:22"},"returnParameters":{"id":4226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4230,"src":"3795:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4224,"name":"string","nodeType":"ElementaryTypeName","src":"3795:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3794:15:22"},"scope":4231,"src":"3747:100:22","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4232,"src":"227:3627:22","usedErrors":[]}],"src":"33:3821:22"},"id":22},"contracts/RandomIpfsNft.sol":{"ast":{"absolutePath":"contracts/RandomIpfsNft.sol","exportedSymbols":{"Address":[2738],"ConfirmedOwner":[19],"ConfirmedOwnerWithProposal":[181],"Context":[2760],"ERC165":[2959],"ERC721":[2122],"ERC721URIStorage":[2381],"IERC165":[2971],"IERC721":[2238],"IERC721Metadata":[2408],"IERC721Receiver":[2256],"Math":[3836],"Ownable":[1177],"OwnableInterface":[396],"RandomIpfsNft":[4586],"RandomIpfsNft__ContractBalanceTransferFailed":[4244],"RandomIpfsNft__NotEnoughETHToCoverMintFee":[4242],"RandomIpfsNft__RangeOutOfBounds":[4240],"Strings":[2935],"VRFConsumerBaseV2":[239],"VRFCoordinatorV2Interface":[485]},"id":4587,"license":"MIT","nodeType":"SourceUnit","nodes":[{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":4233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4587,"sourceUnit":2382,"src":"32:78:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4234,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4587,"sourceUnit":1178,"src":"111:52:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":4235,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4587,"sourceUnit":486,"src":"164:80:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","id":4236,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4587,"sourceUnit":240,"src":"245:61:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol","file":"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol","id":4237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4587,"sourceUnit":20,"src":"307:58:23","symbolAliases":[],"unitAlias":""},{"id":4238,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"368:23:23"},{"id":4240,"name":"RandomIpfsNft__RangeOutOfBounds","nameLocation":"399:31:23","nodeType":"ErrorDefinition","parameters":{"id":4239,"nodeType":"ParameterList","parameters":[],"src":"430:2:23"},"src":"393:40:23"},{"id":4242,"name":"RandomIpfsNft__NotEnoughETHToCoverMintFee","nameLocation":"440:41:23","nodeType":"ErrorDefinition","parameters":{"id":4241,"nodeType":"ParameterList","parameters":[],"src":"481:2:23"},"src":"434:50:23"},{"id":4244,"name":"RandomIpfsNft__ContractBalanceTransferFailed","nameLocation":"491:44:23","nodeType":"ErrorDefinition","parameters":{"id":4243,"nodeType":"ParameterList","parameters":[],"src":"535:2:23"},"src":"485:53:23"},{"abstract":false,"baseContracts":[{"baseName":{"id":4245,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":2381,"src":"567:16:23"},"id":4246,"nodeType":"InheritanceSpecifier","src":"567:16:23"},{"baseName":{"id":4247,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":239,"src":"585:17:23"},"id":4248,"nodeType":"InheritanceSpecifier","src":"585:17:23"},{"baseName":{"id":4249,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":1177,"src":"604:7:23"},"id":4250,"nodeType":"InheritanceSpecifier","src":"604:7:23"}],"canonicalName":"RandomIpfsNft","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4586,"linearizedBaseContracts":[4586,1177,239,2381,2122,2408,2238,2959,2971,2760],"name":"RandomIpfsNft","nameLocation":"550:13:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"RandomIpfsNft.Breed","id":4254,"members":[{"id":4251,"name":"PUG","nameLocation":"664:3:23","nodeType":"EnumValue","src":"664:3:23"},{"id":4252,"name":"SHIBA_INU","nameLocation":"677:9:23","nodeType":"EnumValue","src":"677:9:23"},{"id":4253,"name":"ST_BERNARD","nameLocation":"696:10:23","nodeType":"EnumValue","src":"696:10:23"}],"name":"Breed","nameLocation":"648:5:23","nodeType":"EnumDefinition","src":"643:69:23"},{"constant":false,"id":4257,"mutability":"immutable","name":"i_vrfCoordinator","nameLocation":"763:16:23","nodeType":"VariableDeclaration","scope":4586,"src":"719:60:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$485","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":4256,"nodeType":"UserDefinedTypeName","pathNode":{"id":4255,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":485,"src":"719:25:23"},"referencedDeclaration":485,"src":"719:25:23","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$485","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"private"},{"constant":false,"id":4259,"mutability":"immutable","name":"i_keyhash","nameLocation":"811:9:23","nodeType":"VariableDeclaration","scope":4586,"src":"785:35:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"785:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4261,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"862:16:23","nodeType":"VariableDeclaration","scope":4586,"src":"837:41:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4260,"name":"uint64","nodeType":"ElementaryTypeName","src":"837:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":true,"id":4264,"mutability":"constant","name":"REQUEST_CONFIRMATIONS","nameLocation":"908:21:23","nodeType":"VariableDeclaration","scope":4586,"src":"884:49:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4262,"name":"uint16","nodeType":"ElementaryTypeName","src":"884:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":4263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"932:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":false,"id":4266,"mutability":"immutable","name":"i_callbackGasLimit","nameLocation":"964:18:23","nodeType":"VariableDeclaration","scope":4586,"src":"939:43:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4265,"name":"uint32","nodeType":"ElementaryTypeName","src":"939:6:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":true,"id":4269,"mutability":"constant","name":"NUM_WORDS","nameLocation":"1012:9:23","nodeType":"VariableDeclaration","scope":4586,"src":"988:37:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4267,"name":"uint32","nodeType":"ElementaryTypeName","src":"988:6:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":4268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1024:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"functionSelector":"a36f573b","id":4273,"mutability":"mutable","name":"s_requestIdToSender","nameLocation":"1090:19:23","nodeType":"VariableDeclaration","scope":4586,"src":"1055:54:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":4272,"keyType":{"id":4270,"name":"uint256","nodeType":"ElementaryTypeName","src":"1063:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1055:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":4271,"name":"address","nodeType":"ElementaryTypeName","src":"1074:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"id":4275,"mutability":"mutable","name":"s_tokenCounter","nameLocation":"1153:14:23","nodeType":"VariableDeclaration","scope":4586,"src":"1137:30:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":true,"id":4278,"mutability":"constant","name":"MAX_CHANCE_VALUE","nameLocation":"1199:16:23","nodeType":"VariableDeclaration","scope":4586,"src":"1173:48:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1173:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1218:3:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"constant":false,"id":4281,"mutability":"mutable","name":"s_dogTokenUris","nameLocation":"1245:14:23","nodeType":"VariableDeclaration","scope":4586,"src":"1227:32:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":4279,"name":"string","nodeType":"ElementaryTypeName","src":"1227:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4280,"nodeType":"ArrayTypeName","src":"1227:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4283,"mutability":"mutable","name":"i_mintFee","nameLocation":"1282:9:23","nodeType":"VariableDeclaration","scope":4586,"src":"1265:26:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4282,"name":"uint256","nodeType":"ElementaryTypeName","src":"1265:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"anonymous":false,"id":4289,"name":"NftRequested","nameLocation":"1318:12:23","nodeType":"EventDefinition","parameters":{"id":4288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4285,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1347:9:23","nodeType":"VariableDeclaration","scope":4289,"src":"1331:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4284,"name":"uint256","nodeType":"ElementaryTypeName","src":"1331:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4287,"indexed":false,"mutability":"mutable","name":"requester","nameLocation":"1366:9:23","nodeType":"VariableDeclaration","scope":4289,"src":"1358:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4286,"name":"address","nodeType":"ElementaryTypeName","src":"1358:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1330:46:23"},"src":"1312:65:23"},{"anonymous":false,"id":4296,"name":"NftMinted","nameLocation":"1388:9:23","nodeType":"EventDefinition","parameters":{"id":4295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4292,"indexed":false,"mutability":"mutable","name":"dogBreed","nameLocation":"1404:8:23","nodeType":"VariableDeclaration","scope":4296,"src":"1398:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4254","typeString":"enum RandomIpfsNft.Breed"},"typeName":{"id":4291,"nodeType":"UserDefinedTypeName","pathNode":{"id":4290,"name":"Breed","nodeType":"IdentifierPath","referencedDeclaration":4254,"src":"1398:5:23"},"referencedDeclaration":4254,"src":"1398:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4254","typeString":"enum RandomIpfsNft.Breed"}},"visibility":"internal"},{"constant":false,"id":4294,"indexed":false,"mutability":"mutable","name":"minter","nameLocation":"1422:6:23","nodeType":"VariableDeclaration","scope":4296,"src":"1414:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4293,"name":"address","nodeType":"ElementaryTypeName","src":"1414:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1397:32:23"},"src":"1382:48:23"},{"body":{"id":4350,"nodeType":"Block","src":"1758:296:23","statements":[{"expression":{"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4320,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"1768:16:23","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$485","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4322,"name":"vrfCoodrindatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"1813:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4321,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"1787:25:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$485_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1787:44:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$485","typeString":"contract VRFCoordinatorV2Interface"}},"src":"1768:63:23","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$485","typeString":"contract VRFCoordinatorV2Interface"}},"id":4325,"nodeType":"ExpressionStatement","src":"1768:63:23"},{"expression":{"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4326,"name":"i_keyhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"1841:9:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4327,"name":"keyhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"1853:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1841:19:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4329,"nodeType":"ExpressionStatement","src":"1841:19:23"},{"expression":{"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4330,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"1870:16:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4331,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"1889:14:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1870:33:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4333,"nodeType":"ExpressionStatement","src":"1870:33:23"},{"expression":{"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4334,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"1913:18:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4335,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"1934:16:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1913:37:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":4337,"nodeType":"ExpressionStatement","src":"1913:37:23"},{"expression":{"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4338,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"1960:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4339,"name":"mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"1972:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1960:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4341,"nodeType":"ExpressionStatement","src":"1960:19:23"},{"expression":{"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4342,"name":"s_dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"1990:14:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4343,"name":"dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"2007:12:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$3_memory_ptr","typeString":"string memory[3] memory"}},"src":"1990:29:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":4345,"nodeType":"ExpressionStatement","src":"1990:29:23"},{"expression":{"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4346,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"2029:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2046:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2029:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4349,"nodeType":"ExpressionStatement","src":"2029:18:23"}]},"id":4351,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4313,"name":"vrfCoodrindatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"1689:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4314,"kind":"baseConstructorSpecifier","modifierName":{"id":4312,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":239,"src":"1671:17:23"},"nodeType":"ModifierInvocation","src":"1671:36:23"},{"arguments":[{"hexValue":"52616e646f6d2049504653204e4654","id":4316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1723:17:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_060d1bdab5c66f2c3459267e43d1a510b3c61ad39afb4b1b9b944fbc6d6a9661","typeString":"literal_string \"Random IPFS NFT\""},"value":"Random IPFS NFT"},{"hexValue":"52494e","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1742:5:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c2493aacafadd9e7cfb3e25fe184ffa39fa77c9794b3bfc81822f04194b6f764","typeString":"literal_string \"RIN\""},"value":"RIN"}],"id":4318,"kind":"baseConstructorSpecifier","modifierName":{"id":4315,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2122,"src":"1716:6:23"},"nodeType":"ModifierInvocation","src":"1716:32:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4298,"mutability":"mutable","name":"vrfCoodrindatorV2","nameLocation":"1465:17:23","nodeType":"VariableDeclaration","scope":4351,"src":"1457:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4297,"name":"address","nodeType":"ElementaryTypeName","src":"1457:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4300,"mutability":"mutable","name":"keyhash","nameLocation":"1501:7:23","nodeType":"VariableDeclaration","scope":4351,"src":"1493:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1493:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4302,"mutability":"mutable","name":"subscriptionId","nameLocation":"1540:14:23","nodeType":"VariableDeclaration","scope":4351,"src":"1533:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4301,"name":"uint64","nodeType":"ElementaryTypeName","src":"1533:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4304,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1571:16:23","nodeType":"VariableDeclaration","scope":4351,"src":"1564:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4303,"name":"uint32","nodeType":"ElementaryTypeName","src":"1564:6:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4308,"mutability":"mutable","name":"dogTokenUris","nameLocation":"1614:12:23","nodeType":"VariableDeclaration","scope":4351,"src":"1597:29:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$3_memory_ptr","typeString":"string[3]"},"typeName":{"baseType":{"id":4305,"name":"string","nodeType":"ElementaryTypeName","src":"1597:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4307,"length":{"hexValue":"33","id":4306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1604:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"1597:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$3_storage_ptr","typeString":"string[3]"}},"visibility":"internal"},{"constant":false,"id":4310,"mutability":"mutable","name":"mintFee","nameLocation":"1644:7:23","nodeType":"VariableDeclaration","scope":4351,"src":"1636:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4309,"name":"uint256","nodeType":"ElementaryTypeName","src":"1636:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1447:214:23"},"returnParameters":{"id":4319,"nodeType":"ParameterList","parameters":[],"src":"1758:0:23"},"scope":4586,"src":"1436:618:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4389,"nodeType":"Block","src":"2123:449:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4356,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2136:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"2136:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4358,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"2148:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2136:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4364,"nodeType":"IfStatement","src":"2133:91:23","trueBody":{"id":4363,"nodeType":"Block","src":"2158:66:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4360,"name":"RandomIpfsNft__NotEnoughETHToCoverMintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"2179:41:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2179:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4362,"nodeType":"RevertStatement","src":"2172:50:23"}]}},{"expression":{"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4365,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"2233:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4368,"name":"i_keyhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"2294:9:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4369,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"2345:16:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4370,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"2375:21:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4371,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"2410:18:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4372,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"2442:9:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":4366,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"2245:16:23","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$485","typeString":"contract VRFCoordinatorV2Interface"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":425,"src":"2245:35:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2245:216:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:228:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4375,"nodeType":"ExpressionStatement","src":"2233:228:23"},{"expression":{"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4376,"name":"s_requestIdToSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"2472:19:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4378,"indexExpression":{"id":4377,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"2492:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2472:30:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4379,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2505:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2505:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2472:43:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4382,"nodeType":"ExpressionStatement","src":"2472:43:23"},{"eventCall":{"arguments":[{"id":4384,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"2543:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4385,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2554:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2554:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4383,"name":"NftRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"2530:12:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2530:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4388,"nodeType":"EmitStatement","src":"2525:40:23"}]},"functionSelector":"aa152491","id":4390,"implemented":true,"kind":"function","modifiers":[],"name":"requestNft","nameLocation":"2069:10:23","nodeType":"FunctionDefinition","parameters":{"id":4352,"nodeType":"ParameterList","parameters":[],"src":"2079:2:23"},"returnParameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4354,"mutability":"mutable","name":"requestId","nameLocation":"2113:9:23","nodeType":"VariableDeclaration","scope":4390,"src":"2105:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4353,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2104:19:23"},"scope":4586,"src":"2060:512:23","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[212],"body":{"id":4448,"nodeType":"Block","src":"2673:608:23","statements":[{"assignments":[4400],"declarations":[{"constant":false,"id":4400,"mutability":"mutable","name":"dogOwner","nameLocation":"2691:8:23","nodeType":"VariableDeclaration","scope":4448,"src":"2683:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4399,"name":"address","nodeType":"ElementaryTypeName","src":"2683:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4404,"initialValue":{"baseExpression":{"id":4401,"name":"s_requestIdToSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"2702:19:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4403,"indexExpression":{"id":4402,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"2722:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2702:30:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2683:49:23"},{"assignments":[4406],"declarations":[{"constant":false,"id":4406,"mutability":"mutable","name":"newTokenId","nameLocation":"2750:10:23","nodeType":"VariableDeclaration","scope":4448,"src":"2742:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4405,"name":"uint256","nodeType":"ElementaryTypeName","src":"2742:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4408,"initialValue":{"id":4407,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"2763:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2742:35:23"},{"assignments":[4410],"declarations":[{"constant":false,"id":4410,"mutability":"mutable","name":"moddedRng","nameLocation":"2795:9:23","nodeType":"VariableDeclaration","scope":4448,"src":"2787:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2787:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4416,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4411,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"2807:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4413,"indexExpression":{"hexValue":"30","id":4412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2819:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2807:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4414,"name":"MAX_CHANCE_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"2824:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2807:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2787:53:23"},{"assignments":[4419],"declarations":[{"constant":false,"id":4419,"mutability":"mutable","name":"dogBreed","nameLocation":"3045:8:23","nodeType":"VariableDeclaration","scope":4448,"src":"3039:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4254","typeString":"enum RandomIpfsNft.Breed"},"typeName":{"id":4418,"nodeType":"UserDefinedTypeName","pathNode":{"id":4417,"name":"Breed","nodeType":"IdentifierPath","referencedDeclaration":4254,"src":"3039:5:23"},"referencedDeclaration":4254,"src":"3039:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4254","typeString":"enum RandomIpfsNft.Breed"}},"visibility":"internal"}],"id":4423,"initialValue":{"arguments":[{"id":4421,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"3078:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4420,"name":"getBreedFromModdedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"3056:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_enum$_Breed_$4254_$","typeString":"function (uint256) pure returns (enum RandomIpfsNft.Breed)"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3056:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4254","typeString":"enum RandomIpfsNft.Breed"}},"nodeType":"VariableDeclarationStatement","src":"3039:49:23"},{"expression":{"arguments":[{"id":4425,"name":"dogOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"3108:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4426,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"3118:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4424,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1672,1701],"referencedDeclaration":1672,"src":"3098:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3098:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4428,"nodeType":"ExpressionStatement","src":"3098:31:23"},{"expression":{"arguments":[{"id":4430,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"3152:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":4431,"name":"s_dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"3163:14:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":4436,"indexExpression":{"arguments":[{"id":4434,"name":"dogBreed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"3186:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4254","typeString":"enum RandomIpfsNft.Breed"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Breed_$4254","typeString":"enum RandomIpfsNft.Breed"}],"id":4433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3178:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4432,"name":"uint256","nodeType":"ElementaryTypeName","src":"3178:7:23","typeDescriptions":{}}},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3178:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3163:33:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":4429,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"3139:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3139:58:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4438,"nodeType":"ExpressionStatement","src":"3139:58:23"},{"expression":{"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4439,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"3207:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3225:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3207:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4442,"nodeType":"ExpressionStatement","src":"3207:19:23"},{"eventCall":{"arguments":[{"id":4444,"name":"dogBreed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"3251:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4254","typeString":"enum RandomIpfsNft.Breed"}},{"id":4445,"name":"dogOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"3261:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Breed_$4254","typeString":"enum RandomIpfsNft.Breed"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4443,"name":"NftMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"3241:9:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_Breed_$4254_$_t_address_$returns$__$","typeString":"function (enum RandomIpfsNft.Breed,address)"}},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3241:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4447,"nodeType":"EmitStatement","src":"3236:34:23"}]},"id":4449,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"2587:18:23","nodeType":"FunctionDefinition","overrides":{"id":4397,"nodeType":"OverrideSpecifier","overrides":[],"src":"2664:8:23"},"parameters":{"id":4396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4392,"mutability":"mutable","name":"requestId","nameLocation":"2614:9:23","nodeType":"VariableDeclaration","scope":4449,"src":"2606:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2606:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4395,"mutability":"mutable","name":"randomWords","nameLocation":"2642:11:23","nodeType":"VariableDeclaration","scope":4449,"src":"2625:28:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4393,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4394,"nodeType":"ArrayTypeName","src":"2625:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2605:49:23"},"returnParameters":{"id":4398,"nodeType":"ParameterList","parameters":[],"src":"2673:0:23"},"scope":4586,"src":"2578:703:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4482,"nodeType":"Block","src":"3324:203:23","statements":[{"assignments":[4455],"declarations":[{"constant":false,"id":4455,"mutability":"mutable","name":"amount","nameLocation":"3342:6:23","nodeType":"VariableDeclaration","scope":4482,"src":"3334:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4454,"name":"uint256","nodeType":"ElementaryTypeName","src":"3334:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4461,"initialValue":{"expression":{"arguments":[{"id":4458,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3359:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_RandomIpfsNft_$4586","typeString":"contract RandomIpfsNft"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RandomIpfsNft_$4586","typeString":"contract RandomIpfsNft"}],"id":4457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3351:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4456,"name":"address","nodeType":"ElementaryTypeName","src":"3351:7:23","typeDescriptions":{}}},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3351:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"3351:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3334:38:23"},{"assignments":[4463,null],"declarations":[{"constant":false,"id":4463,"mutability":"mutable","name":"success","nameLocation":"3388:7:23","nodeType":"VariableDeclaration","scope":4482,"src":"3383:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4462,"name":"bool","nodeType":"ElementaryTypeName","src":"3383:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4474,"initialValue":{"arguments":[{"hexValue":"","id":4472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3440:2:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":4466,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3408:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3408:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3400:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4464,"name":"address","nodeType":"ElementaryTypeName","src":"3400:8:23","stateMutability":"payable","typeDescriptions":{}}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3400:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"3400:24:23","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4470,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"3432:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3400:39:23","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3400:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3382:61:23"},{"condition":{"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3456:8:23","subExpression":{"id":4475,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"3457:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4481,"nodeType":"IfStatement","src":"3453:68:23","trueBody":{"id":4480,"nodeType":"Block","src":"3465:56:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4477,"name":"RandomIpfsNft__ContractBalanceTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"3473:44:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3473:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4479,"nodeType":"RevertStatement","src":"3466:53:23"}]}}]},"functionSelector":"3ccfd60b","id":4483,"implemented":true,"kind":"function","modifiers":[{"id":4452,"kind":"modifierInvocation","modifierName":{"id":4451,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1096,"src":"3314:9:23"},"nodeType":"ModifierInvocation","src":"3314:9:23"}],"name":"withdraw","nameLocation":"3296:8:23","nodeType":"FunctionDefinition","parameters":{"id":4450,"nodeType":"ParameterList","parameters":[],"src":"3304:2:23"},"returnParameters":{"id":4453,"nodeType":"ParameterList","parameters":[],"src":"3324:0:23"},"scope":4586,"src":"3287:240:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4543,"nodeType":"Block","src":"3609:396:23","statements":[{"assignments":[4492],"declarations":[{"constant":false,"id":4492,"mutability":"mutable","name":"cumulativeSum","nameLocation":"3627:13:23","nodeType":"VariableDeclaration","scope":4543,"src":"3619:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4491,"name":"uint256","nodeType":"ElementaryTypeName","src":"3619:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4494,"initialValue":{"hexValue":"30","id":4493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3643:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3619:25:23"},{"assignments":[4500],"declarations":[{"constant":false,"id":4500,"mutability":"mutable","name":"chanceArray","nameLocation":"3672:11:23","nodeType":"VariableDeclaration","scope":4543,"src":"3654:29:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":4498,"name":"uint256","nodeType":"ElementaryTypeName","src":"3654:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4499,"length":{"hexValue":"33","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3662:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"3654:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"id":4503,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4501,"name":"getChanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"3686:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_array$_t_uint256_$3_memory_ptr_$","typeString":"function () pure returns (uint256[3] memory)"}},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3686:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"nodeType":"VariableDeclarationStatement","src":"3654:48:23"},{"body":{"id":4538,"nodeType":"Block","src":"3755:193:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4515,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"3772:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4516,"name":"cumulativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"3785:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3772:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4518,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"3802:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4519,"name":"cumulativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"3814:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":4520,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"3830:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":4522,"indexExpression":{"id":4521,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"3842:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3830:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3814:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3802:42:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3772:72:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4531,"nodeType":"IfStatement","src":"3769:124:23","trueBody":{"id":4530,"nodeType":"Block","src":"3845:48:23","statements":[{"expression":{"arguments":[{"id":4527,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"3876:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4526,"name":"Breed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"3870:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Breed_$4254_$","typeString":"type(enum RandomIpfsNft.Breed)"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3870:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4254","typeString":"enum RandomIpfsNft.Breed"}},"functionReturnParameters":4490,"id":4529,"nodeType":"Return","src":"3863:15:23"}]}},{"expression":{"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4532,"name":"cumulativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"3906:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":4533,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"3923:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":4535,"indexExpression":{"id":4534,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"3935:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3923:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3906:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4537,"nodeType":"ExpressionStatement","src":"3906:31:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4508,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"3729:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4509,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"3731:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3731:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3729:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4539,"initializationExpression":{"assignments":[4505],"declarations":[{"constant":false,"id":4505,"mutability":"mutable","name":"i","nameLocation":"3724:1:23","nodeType":"VariableDeclaration","scope":4539,"src":"3716:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4504,"name":"uint256","nodeType":"ElementaryTypeName","src":"3716:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4507,"initialValue":{"hexValue":"30","id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3726:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3716:11:23"},"loopExpression":{"expression":{"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3751:3:23","subExpression":{"id":4512,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"3751:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4514,"nodeType":"ExpressionStatement","src":"3751:3:23"},"nodeType":"ForStatement","src":"3712:236:23"},{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4540,"name":"RandomIpfsNft__RangeOutOfBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"3965:31:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3965:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4542,"nodeType":"RevertStatement","src":"3958:40:23"}]},"functionSelector":"a51cccf3","id":4544,"implemented":true,"kind":"function","modifiers":[],"name":"getBreedFromModdedRng","nameLocation":"3542:21:23","nodeType":"FunctionDefinition","parameters":{"id":4486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4485,"mutability":"mutable","name":"moddedRng","nameLocation":"3572:9:23","nodeType":"VariableDeclaration","scope":4544,"src":"3564:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4484,"name":"uint256","nodeType":"ElementaryTypeName","src":"3564:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3563:19:23"},"returnParameters":{"id":4490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4544,"src":"3603:5:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4254","typeString":"enum RandomIpfsNft.Breed"},"typeName":{"id":4488,"nodeType":"UserDefinedTypeName","pathNode":{"id":4487,"name":"Breed","nodeType":"IdentifierPath","referencedDeclaration":4254,"src":"3603:5:23"},"referencedDeclaration":4254,"src":"3603:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4254","typeString":"enum RandomIpfsNft.Breed"}},"visibility":"internal"}],"src":"3602:7:23"},"scope":4586,"src":"3533:472:23","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4556,"nodeType":"Block","src":"4076:49:23","statements":[{"expression":{"components":[{"hexValue":"3130","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4094:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},{"hexValue":"3330","id":4552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4097:2:23","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},{"id":4553,"name":"MAX_CHANCE_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"4101:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4554,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4093:25:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"functionReturnParameters":4550,"id":4555,"nodeType":"Return","src":"4086:32:23"}]},"functionSelector":"5dacf5f4","id":4557,"implemented":true,"kind":"function","modifiers":[],"name":"getChanceArray","nameLocation":"4020:14:23","nodeType":"FunctionDefinition","parameters":{"id":4545,"nodeType":"ParameterList","parameters":[],"src":"4034:2:23"},"returnParameters":{"id":4550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4557,"src":"4057:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":4546,"name":"uint256","nodeType":"ElementaryTypeName","src":"4057:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4548,"length":{"hexValue":"33","id":4547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4065:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"4057:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"src":"4056:19:23"},"scope":4586,"src":"4011:114:23","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4564,"nodeType":"Block","src":"4187:38:23","statements":[{"expression":{"id":4562,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"4204:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4561,"id":4563,"nodeType":"Return","src":"4197:21:23"}]},"functionSelector":"6e02007d","id":4565,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCounter","nameLocation":"4140:15:23","nodeType":"FunctionDefinition","parameters":{"id":4558,"nodeType":"ParameterList","parameters":[],"src":"4155:2:23"},"returnParameters":{"id":4561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4565,"src":"4179:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4559,"name":"uint256","nodeType":"ElementaryTypeName","src":"4179:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4178:9:23"},"scope":4586,"src":"4131:94:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4572,"nodeType":"Block","src":"4281:33:23","statements":[{"expression":{"id":4570,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"4298:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4569,"id":4571,"nodeType":"Return","src":"4291:16:23"}]},"functionSelector":"7a5caab3","id":4573,"implemented":true,"kind":"function","modifiers":[],"name":"getMintFee","nameLocation":"4240:10:23","nodeType":"FunctionDefinition","parameters":{"id":4566,"nodeType":"ParameterList","parameters":[],"src":"4250:2:23"},"returnParameters":{"id":4569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4573,"src":"4273:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4567,"name":"uint256","nodeType":"ElementaryTypeName","src":"4273:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4272:9:23"},"scope":4586,"src":"4231:83:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4584,"nodeType":"Block","src":"4396:45:23","statements":[{"expression":{"baseExpression":{"id":4580,"name":"s_dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"4413:14:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":4582,"indexExpression":{"id":4581,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"4428:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4413:21:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":4579,"id":4583,"nodeType":"Return","src":"4406:28:23"}]},"functionSelector":"3af25975","id":4585,"implemented":true,"kind":"function","modifiers":[],"name":"getDogTokenUris","nameLocation":"4329:15:23","nodeType":"FunctionDefinition","parameters":{"id":4576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4575,"mutability":"mutable","name":"index","nameLocation":"4353:5:23","nodeType":"VariableDeclaration","scope":4585,"src":"4345:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4574,"name":"uint256","nodeType":"ElementaryTypeName","src":"4345:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4344:15:23"},"returnParameters":{"id":4579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4585,"src":"4381:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4577,"name":"string","nodeType":"ElementaryTypeName","src":"4381:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4380:15:23"},"scope":4586,"src":"4320:121:23","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4587,"src":"541:3902:23","usedErrors":[190,4240,4242,4244]}],"src":"32:4411:23"},"id":23},"contracts/test/VRFCoordinatorV2Mock.sol":{"ast":{"absolutePath":"contracts/test/VRFCoordinatorV2Mock.sol","exportedSymbols":{"LinkTokenInterface":[380],"VRFConsumerBaseV2":[239],"VRFCoordinatorV2Interface":[485],"VRFCoordinatorV2Mock":[1064]},"id":4590,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4588,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"31:23:24"},{"absolutePath":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","id":4589,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4590,"sourceUnit":1065,"src":"56:70:24","symbolAliases":[],"unitAlias":""}],"src":"31:95:24"},"id":24}},"contracts":{"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol":{"ConfirmedOwner":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"The ConfirmedOwner contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_18":{"entryPoint":null,"id":18,"parameterSlots":1,"returnSlots":0},"@_75":{"entryPoint":null,"id":75,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_159":{"entryPoint":304,"id":159,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":704,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":807,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":915,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":950,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":749,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":642,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":610,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":605,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":766,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":874,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":660,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3327:25","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:25","statements":[{"nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:25"},"nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:25"},"nodeType":"YulFunctionCall","src":"187:12:25"},"nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:25"},"nodeType":"YulFunctionCall","src":"310:12:25"},"nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nodeType":"YulBlock","src":"379:81:25","statements":[{"nodeType":"YulAssignment","src":"389:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:25"},"nodeType":"YulFunctionCall","src":"400:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:25","type":""}],"src":"334:126:25"},{"body":{"nodeType":"YulBlock","src":"511:51:25","statements":[{"nodeType":"YulAssignment","src":"521:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:25"},"nodeType":"YulFunctionCall","src":"532:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:25","type":""}],"src":"466:96:25"},{"body":{"nodeType":"YulBlock","src":"611:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:25"},"nodeType":"YulFunctionCall","src":"670:12:25"},"nodeType":"YulExpressionStatement","src":"670:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:25"},"nodeType":"YulFunctionCall","src":"641:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:25"},"nodeType":"YulFunctionCall","src":"631:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:25"},"nodeType":"YulFunctionCall","src":"624:43:25"},"nodeType":"YulIf","src":"621:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:25","type":""}],"src":"568:122:25"},{"body":{"nodeType":"YulBlock","src":"759:80:25","statements":[{"nodeType":"YulAssignment","src":"769:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:25"},"nodeType":"YulFunctionCall","src":"778:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:25"},"nodeType":"YulFunctionCall","src":"800:33:25"},"nodeType":"YulExpressionStatement","src":"800:33:25"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:25","type":""}],"src":"696:143:25"},{"body":{"nodeType":"YulBlock","src":"922:274:25","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:25"},"nodeType":"YulFunctionCall","src":"970:79:25"},"nodeType":"YulExpressionStatement","src":"970:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:25"},"nodeType":"YulFunctionCall","src":"939:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:25"},"nodeType":"YulFunctionCall","src":"935:32:25"},"nodeType":"YulIf","src":"932:119:25"},{"nodeType":"YulBlock","src":"1061:128:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:25"},"nodeType":"YulFunctionCall","src":"1147:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:25"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:25"},"nodeType":"YulFunctionCall","src":"1115:64:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:25"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:25","type":""}],"src":"845:351:25"},{"body":{"nodeType":"YulBlock","src":"1298:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1315:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"1320:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1308:6:25"},"nodeType":"YulFunctionCall","src":"1308:19:25"},"nodeType":"YulExpressionStatement","src":"1308:19:25"},{"nodeType":"YulAssignment","src":"1336:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1355:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1360:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1351:3:25"},"nodeType":"YulFunctionCall","src":"1351:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1336:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1270:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1275:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1286:11:25","type":""}],"src":"1202:169:25"},{"body":{"nodeType":"YulBlock","src":"1483:68:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1505:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"1513:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1501:3:25"},"nodeType":"YulFunctionCall","src":"1501:14:25"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"1517:26:25","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1494:6:25"},"nodeType":"YulFunctionCall","src":"1494:50:25"},"nodeType":"YulExpressionStatement","src":"1494:50:25"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1475:6:25","type":""}],"src":"1377:174:25"},{"body":{"nodeType":"YulBlock","src":"1703:220:25","statements":[{"nodeType":"YulAssignment","src":"1713:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1779:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1784:2:25","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1720:58:25"},"nodeType":"YulFunctionCall","src":"1720:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1713:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1885:3:25"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulIdentifier","src":"1796:88:25"},"nodeType":"YulFunctionCall","src":"1796:93:25"},"nodeType":"YulExpressionStatement","src":"1796:93:25"},{"nodeType":"YulAssignment","src":"1898:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1909:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1914:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:25"},"nodeType":"YulFunctionCall","src":"1905:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1898:3:25"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1699:3:25","type":""}],"src":"1557:366:25"},{"body":{"nodeType":"YulBlock","src":"2100:248:25","statements":[{"nodeType":"YulAssignment","src":"2110:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2122:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2118:3:25"},"nodeType":"YulFunctionCall","src":"2118:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2110:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2157:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2168:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:25"},"nodeType":"YulFunctionCall","src":"2153:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2176:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2182:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2172:3:25"},"nodeType":"YulFunctionCall","src":"2172:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2146:6:25"},"nodeType":"YulFunctionCall","src":"2146:47:25"},"nodeType":"YulExpressionStatement","src":"2146:47:25"},{"nodeType":"YulAssignment","src":"2202:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2336:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2210:124:25"},"nodeType":"YulFunctionCall","src":"2210:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2202:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2080:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2095:4:25","type":""}],"src":"1929:419:25"},{"body":{"nodeType":"YulBlock","src":"2460:67:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2482:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2490:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2478:3:25"},"nodeType":"YulFunctionCall","src":"2478:14:25"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"2494:25:25","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2471:6:25"},"nodeType":"YulFunctionCall","src":"2471:49:25"},"nodeType":"YulExpressionStatement","src":"2471:49:25"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2452:6:25","type":""}],"src":"2354:173:25"},{"body":{"nodeType":"YulBlock","src":"2679:220:25","statements":[{"nodeType":"YulAssignment","src":"2689:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2755:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"2760:2:25","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2696:58:25"},"nodeType":"YulFunctionCall","src":"2696:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2689:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2861:3:25"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"2772:88:25"},"nodeType":"YulFunctionCall","src":"2772:93:25"},"nodeType":"YulExpressionStatement","src":"2772:93:25"},{"nodeType":"YulAssignment","src":"2874:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2885:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"2890:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2881:3:25"},"nodeType":"YulFunctionCall","src":"2881:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2874:3:25"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2667:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2675:3:25","type":""}],"src":"2533:366:25"},{"body":{"nodeType":"YulBlock","src":"3076:248:25","statements":[{"nodeType":"YulAssignment","src":"3086:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3098:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3109:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3094:3:25"},"nodeType":"YulFunctionCall","src":"3094:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3086:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3133:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3144:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3129:3:25"},"nodeType":"YulFunctionCall","src":"3129:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3152:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3158:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3148:3:25"},"nodeType":"YulFunctionCall","src":"3148:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3122:6:25"},"nodeType":"YulFunctionCall","src":"3122:47:25"},"nodeType":"YulExpressionStatement","src":"3122:47:25"},{"nodeType":"YulAssignment","src":"3178:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3312:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3186:124:25"},"nodeType":"YulFunctionCall","src":"3186:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3178:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3056:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3071:4:25","type":""}],"src":"2905:419:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610a43380380610a43833981810160405281019061003291906102c0565b8060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156100a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009b9061034a565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610128576101278161013060201b60201c565b5b5050506103d6565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561019f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610196906103b6565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061028d82610262565b9050919050565b61029d81610282565b81146102a857600080fd5b50565b6000815190506102ba81610294565b92915050565b6000602082840312156102d6576102d561025d565b5b60006102e4848285016102ab565b91505092915050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006103346018836102ed565b915061033f826102fe565b602082019050919050565b6000602082019050818103600083015261036381610327565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006103a06017836102ed565b91506103ab8261036a565b602082019050919050565b600060208201905081810360008301526103cf81610393565b9050919050565b61065e806103e56000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b604051610065919061045a565b60405180910390f35b610088600480360381019061008391906104a6565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011190610530565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059c565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561035b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035290610608565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044482610419565b9050919050565b61045481610439565b82525050565b600060208201905061046f600083018461044b565b92915050565b600080fd5b61048381610439565b811461048e57600080fd5b50565b6000813590506104a08161047a565b92915050565b6000602082840312156104bc576104bb610475565b5b60006104ca84828501610491565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b600061051a6016836104d3565b9150610525826104e4565b602082019050919050565b600060208201905081810360008301526105498161050d565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105866016836104d3565b915061059182610550565b602082019050919050565b600060208201905081810360008301526105b581610579565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f26017836104d3565b91506105fd826105bc565b602082019050919050565b60006020820190508181036000830152610621816105e5565b905091905056fea2646970667358221220d26683fc85d1ce45a918195bf6c43192fc2296811e29ed01ca9b5037e60506c064736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA43 CODESIZE SUB DUP1 PUSH2 0xA43 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x2C0 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B SWAP1 PUSH2 0x34A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x128 JUMPI PUSH2 0x127 DUP2 PUSH2 0x130 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP PUSH2 0x3D6 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x19F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196 SWAP1 PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D DUP3 PUSH2 0x262 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29D DUP2 PUSH2 0x282 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BA DUP2 PUSH2 0x294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D6 JUMPI PUSH2 0x2D5 PUSH2 0x25D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E4 DUP5 DUP3 DUP6 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x334 PUSH1 0x18 DUP4 PUSH2 0x2ED JUMP JUMPDEST SWAP2 POP PUSH2 0x33F DUP3 PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x363 DUP2 PUSH2 0x327 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A0 PUSH1 0x17 DUP4 PUSH2 0x2ED JUMP JUMPDEST SWAP2 POP PUSH2 0x3AB DUP3 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CF DUP2 PUSH2 0x393 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65E DUP1 PUSH2 0x3E5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x35B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x352 SWAP1 PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x444 DUP3 PUSH2 0x419 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x454 DUP2 PUSH2 0x439 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x483 DUP2 PUSH2 0x439 JUMP JUMPDEST DUP2 EQ PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4A0 DUP2 PUSH2 0x47A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BC JUMPI PUSH2 0x4BB PUSH2 0x475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CA DUP5 DUP3 DUP6 ADD PUSH2 0x491 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51A PUSH1 0x16 DUP4 PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x525 DUP3 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x549 DUP2 PUSH2 0x50D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x586 PUSH1 0x16 DUP4 PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x591 DUP3 PUSH2 0x550 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B5 DUP2 PUSH2 0x579 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F2 PUSH1 0x17 DUP4 PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FD DUP3 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x621 DUP2 PUSH2 0x5E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 PUSH7 0x83FC85D1CE45A9 XOR NOT JUMPDEST 0xF6 0xC4 BALANCE SWAP3 0xFC 0x22 SWAP7 DUP2 0x1E 0x29 0xED ADD 0xCA SWAP12 POP CALLDATACOPY 0xE6 SDIV MOD 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"212:141:0:-:0;;;270:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;327:8;345:1;572::1;552:22;;:8;:22;;;;544:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;620:8;610:7;;:18;;;;;;;;;;;;;;;;;;662:1;638:26;;:12;:26;;;634:79;;674:32;693:12;674:18;;;:32;;:::i;:::-;634:79;486:231;;270:81:0;212:141;;1497:188:1;1565:10;1559:16;;:2;:16;;;;1551:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1627:2;1610:14;;:19;;;;;;;;;;;;;;;;;;1677:2;1641:39;;1668:7;;;;;;;;;;1641:39;;;;;;;;;;;;1497:188;:::o;88:117:25:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:174::-;1517:26;1513:1;1505:6;1501:14;1494:50;1377:174;:::o;1557:366::-;1699:3;1720:67;1784:2;1779:3;1720:67;:::i;:::-;1713:74;;1796:93;1885:3;1796:93;:::i;:::-;1914:2;1909:3;1905:12;1898:19;;1557:366;;;:::o;1929:419::-;2095:4;2133:2;2122:9;2118:18;2110:26;;2182:9;2176:4;2172:20;2168:1;2157:9;2153:17;2146:47;2210:131;2336:4;2210:131;:::i;:::-;2202:139;;1929:419;;;:::o;2354:173::-;2494:25;2490:1;2482:6;2478:14;2471:49;2354:173;:::o;2533:366::-;2675:3;2696:67;2760:2;2755:3;2696:67;:::i;:::-;2689:74;;2772:93;2861:3;2772:93;:::i;:::-;2890:2;2885:3;2881:12;2874:19;;2533:366;;;:::o;2905:419::-;3071:4;3109:2;3098:9;3094:18;3086:26;;3158:9;3152:4;3148:20;3144:1;3133:9;3129:17;3122:47;3186:131;3312:4;3186:131;:::i;:::-;3178:139;;2905:419;;;:::o;212:141:0:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transferOwnership_159":{"entryPoint":748,"id":159,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_172":{"entryPoint":604,"id":172,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_125":{"entryPoint":138,"id":125,"parameterSlots":0,"returnSlots":0},"@owner_135":{"entryPoint":543,"id":135,"parameterSlots":0,"returnSlots":1},"@transferOwnership_89":{"entryPoint":584,"id":89,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1169,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1190,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1099,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":1293,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":1401,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1509,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1114,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1328,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1436,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1544,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1235,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1081,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1049,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1141,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":1252,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":1360,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1468,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1146,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4626:25","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:25","statements":[{"nodeType":"YulAssignment","src":"62:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:25"},"nodeType":"YulFunctionCall","src":"73:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:25","type":""}],"src":"7:126:25"},{"body":{"nodeType":"YulBlock","src":"184:51:25","statements":[{"nodeType":"YulAssignment","src":"194:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:25"},"nodeType":"YulFunctionCall","src":"205:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:25","type":""}],"src":"139:96:25"},{"body":{"nodeType":"YulBlock","src":"306:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:25"},"nodeType":"YulFunctionCall","src":"328:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:25"},"nodeType":"YulFunctionCall","src":"316:37:25"},"nodeType":"YulExpressionStatement","src":"316:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:25","type":""}],"src":"241:118:25"},{"body":{"nodeType":"YulBlock","src":"463:124:25","statements":[{"nodeType":"YulAssignment","src":"473:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:25"},"nodeType":"YulFunctionCall","src":"481:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:25"},"nodeType":"YulFunctionCall","src":"562:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:25"},"nodeType":"YulFunctionCall","src":"509:71:25"},"nodeType":"YulExpressionStatement","src":"509:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:25","type":""}],"src":"365:222:25"},{"body":{"nodeType":"YulBlock","src":"633:35:25","statements":[{"nodeType":"YulAssignment","src":"643:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:25"},"nodeType":"YulFunctionCall","src":"653:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:25","type":""}],"src":"593:75:25"},{"body":{"nodeType":"YulBlock","src":"763:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:25"},"nodeType":"YulFunctionCall","src":"773:12:25"},"nodeType":"YulExpressionStatement","src":"773:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:25"},{"body":{"nodeType":"YulBlock","src":"886:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:25"},"nodeType":"YulFunctionCall","src":"896:12:25"},"nodeType":"YulExpressionStatement","src":"896:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:25"},{"body":{"nodeType":"YulBlock","src":"963:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"1020:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1029:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1032:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1022:6:25"},"nodeType":"YulFunctionCall","src":"1022:12:25"},"nodeType":"YulExpressionStatement","src":"1022:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"986:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1011:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"993:17:25"},"nodeType":"YulFunctionCall","src":"993:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"983:2:25"},"nodeType":"YulFunctionCall","src":"983:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"976:6:25"},"nodeType":"YulFunctionCall","src":"976:43:25"},"nodeType":"YulIf","src":"973:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"956:5:25","type":""}],"src":"920:122:25"},{"body":{"nodeType":"YulBlock","src":"1100:87:25","statements":[{"nodeType":"YulAssignment","src":"1110:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1119:12:25"},"nodeType":"YulFunctionCall","src":"1119:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1110:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1175:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1148:26:25"},"nodeType":"YulFunctionCall","src":"1148:33:25"},"nodeType":"YulExpressionStatement","src":"1148:33:25"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1078:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"1086:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1094:5:25","type":""}],"src":"1048:139:25"},{"body":{"nodeType":"YulBlock","src":"1259:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"1305:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1307:77:25"},"nodeType":"YulFunctionCall","src":"1307:79:25"},"nodeType":"YulExpressionStatement","src":"1307:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1280:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1289:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1276:3:25"},"nodeType":"YulFunctionCall","src":"1276:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1301:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1272:3:25"},"nodeType":"YulFunctionCall","src":"1272:32:25"},"nodeType":"YulIf","src":"1269:119:25"},{"nodeType":"YulBlock","src":"1398:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1413:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1427:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1417:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1442:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1477:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1488:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:25"},"nodeType":"YulFunctionCall","src":"1473:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1497:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1452:20:25"},"nodeType":"YulFunctionCall","src":"1452:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1442:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1229:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1240:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1252:6:25","type":""}],"src":"1193:329:25"},{"body":{"nodeType":"YulBlock","src":"1624:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1641:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"1646:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1634:6:25"},"nodeType":"YulFunctionCall","src":"1634:19:25"},"nodeType":"YulExpressionStatement","src":"1634:19:25"},{"nodeType":"YulAssignment","src":"1662:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1681:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1686:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1677:3:25"},"nodeType":"YulFunctionCall","src":"1677:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1662:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1596:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1601:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1612:11:25","type":""}],"src":"1528:169:25"},{"body":{"nodeType":"YulBlock","src":"1809:66:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1831:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"1839:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1827:3:25"},"nodeType":"YulFunctionCall","src":"1827:14:25"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"1843:24:25","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1820:6:25"},"nodeType":"YulFunctionCall","src":"1820:48:25"},"nodeType":"YulExpressionStatement","src":"1820:48:25"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1801:6:25","type":""}],"src":"1703:172:25"},{"body":{"nodeType":"YulBlock","src":"2027:220:25","statements":[{"nodeType":"YulAssignment","src":"2037:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2103:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"2108:2:25","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2044:58:25"},"nodeType":"YulFunctionCall","src":"2044:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2037:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2209:3:25"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulIdentifier","src":"2120:88:25"},"nodeType":"YulFunctionCall","src":"2120:93:25"},"nodeType":"YulExpressionStatement","src":"2120:93:25"},{"nodeType":"YulAssignment","src":"2222:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2233:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"2238:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2229:3:25"},"nodeType":"YulFunctionCall","src":"2229:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2222:3:25"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2015:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2023:3:25","type":""}],"src":"1881:366:25"},{"body":{"nodeType":"YulBlock","src":"2424:248:25","statements":[{"nodeType":"YulAssignment","src":"2434:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2446:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2457:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2442:3:25"},"nodeType":"YulFunctionCall","src":"2442:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2434:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2481:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2492:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2477:3:25"},"nodeType":"YulFunctionCall","src":"2477:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2500:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2506:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2496:3:25"},"nodeType":"YulFunctionCall","src":"2496:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2470:6:25"},"nodeType":"YulFunctionCall","src":"2470:47:25"},"nodeType":"YulExpressionStatement","src":"2470:47:25"},{"nodeType":"YulAssignment","src":"2526:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2660:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2534:124:25"},"nodeType":"YulFunctionCall","src":"2534:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2526:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2404:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2419:4:25","type":""}],"src":"2253:419:25"},{"body":{"nodeType":"YulBlock","src":"2784:66:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2806:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2814:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2802:3:25"},"nodeType":"YulFunctionCall","src":"2802:14:25"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2818:24:25","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2795:6:25"},"nodeType":"YulFunctionCall","src":"2795:48:25"},"nodeType":"YulExpressionStatement","src":"2795:48:25"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2776:6:25","type":""}],"src":"2678:172:25"},{"body":{"nodeType":"YulBlock","src":"3002:220:25","statements":[{"nodeType":"YulAssignment","src":"3012:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3078:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"3083:2:25","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3019:58:25"},"nodeType":"YulFunctionCall","src":"3019:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3012:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3184:3:25"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"3095:88:25"},"nodeType":"YulFunctionCall","src":"3095:93:25"},"nodeType":"YulExpressionStatement","src":"3095:93:25"},{"nodeType":"YulAssignment","src":"3197:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3208:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"3213:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3204:3:25"},"nodeType":"YulFunctionCall","src":"3204:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3197:3:25"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2990:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2998:3:25","type":""}],"src":"2856:366:25"},{"body":{"nodeType":"YulBlock","src":"3399:248:25","statements":[{"nodeType":"YulAssignment","src":"3409:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3421:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3432:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3417:3:25"},"nodeType":"YulFunctionCall","src":"3417:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3409:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3456:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3467:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3452:3:25"},"nodeType":"YulFunctionCall","src":"3452:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3475:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3481:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3471:3:25"},"nodeType":"YulFunctionCall","src":"3471:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:25"},"nodeType":"YulFunctionCall","src":"3445:47:25"},"nodeType":"YulExpressionStatement","src":"3445:47:25"},{"nodeType":"YulAssignment","src":"3501:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3635:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3509:124:25"},"nodeType":"YulFunctionCall","src":"3509:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3501:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3379:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3394:4:25","type":""}],"src":"3228:419:25"},{"body":{"nodeType":"YulBlock","src":"3759:67:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3781:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"3789:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3777:3:25"},"nodeType":"YulFunctionCall","src":"3777:14:25"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"3793:25:25","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3770:6:25"},"nodeType":"YulFunctionCall","src":"3770:49:25"},"nodeType":"YulExpressionStatement","src":"3770:49:25"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3751:6:25","type":""}],"src":"3653:173:25"},{"body":{"nodeType":"YulBlock","src":"3978:220:25","statements":[{"nodeType":"YulAssignment","src":"3988:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4054:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"4059:2:25","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3995:58:25"},"nodeType":"YulFunctionCall","src":"3995:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3988:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4160:3:25"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"4071:88:25"},"nodeType":"YulFunctionCall","src":"4071:93:25"},"nodeType":"YulExpressionStatement","src":"4071:93:25"},{"nodeType":"YulAssignment","src":"4173:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4184:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"4189:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4180:3:25"},"nodeType":"YulFunctionCall","src":"4180:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4173:3:25"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3966:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3974:3:25","type":""}],"src":"3832:366:25"},{"body":{"nodeType":"YulBlock","src":"4375:248:25","statements":[{"nodeType":"YulAssignment","src":"4385:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4397:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4408:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4393:3:25"},"nodeType":"YulFunctionCall","src":"4393:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4385:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4432:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4443:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4428:3:25"},"nodeType":"YulFunctionCall","src":"4428:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4451:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"4457:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4447:3:25"},"nodeType":"YulFunctionCall","src":"4447:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4421:6:25"},"nodeType":"YulFunctionCall","src":"4421:47:25"},"nodeType":"YulExpressionStatement","src":"4421:47:25"},{"nodeType":"YulAssignment","src":"4477:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4611:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4485:124:25"},"nodeType":"YulFunctionCall","src":"4485:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4477:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4355:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4370:4:25","type":""}],"src":"4204:419:25"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b604051610065919061045a565b60405180910390f35b610088600480360381019061008391906104a6565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011190610530565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059c565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561035b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035290610608565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044482610419565b9050919050565b61045481610439565b82525050565b600060208201905061046f600083018461044b565b92915050565b600080fd5b61048381610439565b811461048e57600080fd5b50565b6000813590506104a08161047a565b92915050565b6000602082840312156104bc576104bb610475565b5b60006104ca84828501610491565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b600061051a6016836104d3565b9150610525826104e4565b602082019050919050565b600060208201905081810360008301526105498161050d565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105866016836104d3565b915061059182610550565b602082019050919050565b600060208201905081810360008301526105b581610579565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f26017836104d3565b91506105fd826105bc565b602082019050919050565b60006020820190508181036000830152610621816105e5565b905091905056fea2646970667358221220d26683fc85d1ce45a918195bf6c43192fc2296811e29ed01ca9b5037e60506c064736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x35B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x352 SWAP1 PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x444 DUP3 PUSH2 0x419 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x454 DUP2 PUSH2 0x439 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x483 DUP2 PUSH2 0x439 JUMP JUMPDEST DUP2 EQ PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4A0 DUP2 PUSH2 0x47A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BC JUMPI PUSH2 0x4BB PUSH2 0x475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CA DUP5 DUP3 DUP6 ADD PUSH2 0x491 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51A PUSH1 0x16 DUP4 PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x525 DUP3 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x549 DUP2 PUSH2 0x50D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x586 PUSH1 0x16 DUP4 PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x591 DUP3 PUSH2 0x550 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B5 DUP2 PUSH2 0x579 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F2 PUSH1 0x17 DUP4 PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FD DUP3 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x621 DUP2 PUSH2 0x5E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 PUSH7 0x83FC85D1CE45A9 XOR NOT JUMPDEST 0xF6 0xC4 BALANCE SWAP3 0xFC 0x22 SWAP7 DUP2 0x1E 0x29 0xED ADD 0xCA SWAP12 POP CALLDATACOPY 0xE6 SDIV MOD 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"212:141:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1016:265:1;;;:::i;:::-;;1332:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;826:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1016:265;1089:14;;;;;;;;;;;1075:28;;:10;:28;;;1067:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1137:16;1156:7;;;;;;;;;;;1137:26;;1179:10;1169:7;;:20;;;;;;;;;;;;;;;;;;1220:1;1195:14;;:27;;;;;;;;;;;;;;;;;;1265:10;1234:42;;1255:8;1234:42;;;;;;;;;;;;1061:220;1016:265::o;1332:81::-;1379:7;1401;;;;;;;;;;;1394:14;;1332:81;:::o;826:98::-;1956:20;:18;:20::i;:::-;897:22:::1;916:2;897:18;:22::i;:::-;826:98:::0;:::o;1730:111::-;1802:7;;;;;;;;;;1788:21;;:10;:21;;;1780:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1730:111::o;1497:188::-;1565:10;1559:16;;:2;:16;;;;1551:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1627:2;1610:14;;:19;;;;;;;;;;;;;;;;;;1677:2;1641:39;;1668:7;;;;;;;;;;1641:39;;;;;;;;;;;;1497:188;:::o;7:126:25:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:172::-;1843:24;1839:1;1831:6;1827:14;1820:48;1703:172;:::o;1881:366::-;2023:3;2044:67;2108:2;2103:3;2044:67;:::i;:::-;2037:74;;2120:93;2209:3;2120:93;:::i;:::-;2238:2;2233:3;2229:12;2222:19;;1881:366;;;:::o;2253:419::-;2419:4;2457:2;2446:9;2442:18;2434:26;;2506:9;2500:4;2496:20;2492:1;2481:9;2477:17;2470:47;2534:131;2660:4;2534:131;:::i;:::-;2526:139;;2253:419;;;:::o;2678:172::-;2818:24;2814:1;2806:6;2802:14;2795:48;2678:172;:::o;2856:366::-;2998:3;3019:67;3083:2;3078:3;3019:67;:::i;:::-;3012:74;;3095:93;3184:3;3095:93;:::i;:::-;3213:2;3208:3;3204:12;3197:19;;2856:366;;;:::o;3228:419::-;3394:4;3432:2;3421:9;3417:18;3409:26;;3481:9;3475:4;3471:20;3467:1;3456:9;3452:17;3445:47;3509:131;3635:4;3509:131;:::i;:::-;3501:139;;3228:419;;;:::o;3653:173::-;3793:25;3789:1;3781:6;3777:14;3770:49;3653:173;:::o;3832:366::-;3974:3;3995:67;4059:2;4054:3;3995:67;:::i;:::-;3988:74;;4071:93;4160:3;4071:93;:::i;:::-;4189:2;4184:3;4180:12;4173:19;;3832:366;;;:::o;4204:419::-;4370:4;4408:2;4397:9;4393:18;4385:26;;4457:9;4451:4;4447:20;4443:1;4432:9;4428:17;4421:47;4485:131;4611:4;4485:131;:::i;:::-;4477:139;;4204:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"326000","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"54518","owner()":"2522","transferOwnership(address)":"30679"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol\":\"ConfirmedOwner\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/OwnableInterface.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwnerWithProposal is OwnableInterface {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /**\\n   * @notice Allows an owner to begin transferring ownership to a new address,\\n   * pending.\\n   */\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /**\\n   * @notice Allows an ownership transfer to be completed by the recipient.\\n   */\\n  function acceptOwnership() external override {\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @notice Get the current owner\\n   */\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /**\\n   * @notice validate, transfer ownership, and emit relevant events\\n   */\\n  function _transferOwnership(address to) private {\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /**\\n   * @notice validate access\\n   */\\n  function _validateOwnership() internal view {\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /**\\n   * @notice Reverts if called by anyone other than the contract owner.\\n   */\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0xa2f137a1d066795aeac76226e58f33c982278cdd34b4f09e5a2243d5a0924654\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface OwnableInterface {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0xb8b3a97783dddc198b790c4cec1eda7fb47aa38cbaea6555220d0ed8c735c086\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":27,"contract":"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":29,"contract":"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address, pending."}},"notice":"A contract with helpers for basic contract ownership.","version":1}}},"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol":{"ConfirmedOwnerWithProposal":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"},{"internalType":"address","name":"pendingOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"The ConfirmedOwner contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_75":{"entryPoint":null,"id":75,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_159":{"entryPoint":301,"id":159,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":680,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":701,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":823,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":931,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":858,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":966,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":765,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":639,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":607,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":602,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":782,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":890,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":657,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3483:25","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:25","statements":[{"nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:25"},"nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:25"},"nodeType":"YulFunctionCall","src":"187:12:25"},"nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:25"},"nodeType":"YulFunctionCall","src":"310:12:25"},"nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nodeType":"YulBlock","src":"379:81:25","statements":[{"nodeType":"YulAssignment","src":"389:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:25"},"nodeType":"YulFunctionCall","src":"400:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:25","type":""}],"src":"334:126:25"},{"body":{"nodeType":"YulBlock","src":"511:51:25","statements":[{"nodeType":"YulAssignment","src":"521:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:25"},"nodeType":"YulFunctionCall","src":"532:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:25","type":""}],"src":"466:96:25"},{"body":{"nodeType":"YulBlock","src":"611:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:25"},"nodeType":"YulFunctionCall","src":"670:12:25"},"nodeType":"YulExpressionStatement","src":"670:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:25"},"nodeType":"YulFunctionCall","src":"641:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:25"},"nodeType":"YulFunctionCall","src":"631:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:25"},"nodeType":"YulFunctionCall","src":"624:43:25"},"nodeType":"YulIf","src":"621:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:25","type":""}],"src":"568:122:25"},{"body":{"nodeType":"YulBlock","src":"759:80:25","statements":[{"nodeType":"YulAssignment","src":"769:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:25"},"nodeType":"YulFunctionCall","src":"778:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:25"},"nodeType":"YulFunctionCall","src":"800:33:25"},"nodeType":"YulExpressionStatement","src":"800:33:25"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:25","type":""}],"src":"696:143:25"},{"body":{"nodeType":"YulBlock","src":"939:413:25","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:25"},"nodeType":"YulFunctionCall","src":"987:79:25"},"nodeType":"YulExpressionStatement","src":"987:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:25"},"nodeType":"YulFunctionCall","src":"956:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:25"},"nodeType":"YulFunctionCall","src":"952:32:25"},"nodeType":"YulIf","src":"949:119:25"},{"nodeType":"YulBlock","src":"1078:128:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:25"},"nodeType":"YulFunctionCall","src":"1164:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:25"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:25"},"nodeType":"YulFunctionCall","src":"1132:64:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:25"}]}]},{"nodeType":"YulBlock","src":"1216:129:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:25"},"nodeType":"YulFunctionCall","src":"1303:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:25"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:25"},"nodeType":"YulFunctionCall","src":"1271:64:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:25","type":""}],"src":"845:507:25"},{"body":{"nodeType":"YulBlock","src":"1454:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1471:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"1476:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1464:6:25"},"nodeType":"YulFunctionCall","src":"1464:19:25"},"nodeType":"YulExpressionStatement","src":"1464:19:25"},{"nodeType":"YulAssignment","src":"1492:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1511:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1516:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1507:3:25"},"nodeType":"YulFunctionCall","src":"1507:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1492:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1426:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1431:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1442:11:25","type":""}],"src":"1358:169:25"},{"body":{"nodeType":"YulBlock","src":"1639:68:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1661:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"1669:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1657:3:25"},"nodeType":"YulFunctionCall","src":"1657:14:25"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"1673:26:25","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1650:6:25"},"nodeType":"YulFunctionCall","src":"1650:50:25"},"nodeType":"YulExpressionStatement","src":"1650:50:25"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1631:6:25","type":""}],"src":"1533:174:25"},{"body":{"nodeType":"YulBlock","src":"1859:220:25","statements":[{"nodeType":"YulAssignment","src":"1869:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1935:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1940:2:25","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1876:58:25"},"nodeType":"YulFunctionCall","src":"1876:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1869:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2041:3:25"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulIdentifier","src":"1952:88:25"},"nodeType":"YulFunctionCall","src":"1952:93:25"},"nodeType":"YulExpressionStatement","src":"1952:93:25"},{"nodeType":"YulAssignment","src":"2054:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2065:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"2070:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2061:3:25"},"nodeType":"YulFunctionCall","src":"2061:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2054:3:25"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1847:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1855:3:25","type":""}],"src":"1713:366:25"},{"body":{"nodeType":"YulBlock","src":"2256:248:25","statements":[{"nodeType":"YulAssignment","src":"2266:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2289:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2274:3:25"},"nodeType":"YulFunctionCall","src":"2274:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2266:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2313:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2324:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2309:3:25"},"nodeType":"YulFunctionCall","src":"2309:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2332:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2338:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2328:3:25"},"nodeType":"YulFunctionCall","src":"2328:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2302:6:25"},"nodeType":"YulFunctionCall","src":"2302:47:25"},"nodeType":"YulExpressionStatement","src":"2302:47:25"},{"nodeType":"YulAssignment","src":"2358:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2492:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2366:124:25"},"nodeType":"YulFunctionCall","src":"2366:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2358:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2236:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2251:4:25","type":""}],"src":"2085:419:25"},{"body":{"nodeType":"YulBlock","src":"2616:67:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2638:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2646:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:25"},"nodeType":"YulFunctionCall","src":"2634:14:25"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"2650:25:25","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2627:6:25"},"nodeType":"YulFunctionCall","src":"2627:49:25"},"nodeType":"YulExpressionStatement","src":"2627:49:25"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2608:6:25","type":""}],"src":"2510:173:25"},{"body":{"nodeType":"YulBlock","src":"2835:220:25","statements":[{"nodeType":"YulAssignment","src":"2845:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2911:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"2916:2:25","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2852:58:25"},"nodeType":"YulFunctionCall","src":"2852:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2845:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3017:3:25"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"2928:88:25"},"nodeType":"YulFunctionCall","src":"2928:93:25"},"nodeType":"YulExpressionStatement","src":"2928:93:25"},{"nodeType":"YulAssignment","src":"3030:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3041:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"3046:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3037:3:25"},"nodeType":"YulFunctionCall","src":"3037:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3030:3:25"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2823:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2831:3:25","type":""}],"src":"2689:366:25"},{"body":{"nodeType":"YulBlock","src":"3232:248:25","statements":[{"nodeType":"YulAssignment","src":"3242:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3254:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3265:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3250:3:25"},"nodeType":"YulFunctionCall","src":"3250:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3242:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3289:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3300:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3285:3:25"},"nodeType":"YulFunctionCall","src":"3285:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3308:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3314:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3304:3:25"},"nodeType":"YulFunctionCall","src":"3304:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3278:6:25"},"nodeType":"YulFunctionCall","src":"3278:47:25"},"nodeType":"YulExpressionStatement","src":"3278:47:25"},{"nodeType":"YulAssignment","src":"3334:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3468:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3342:124:25"},"nodeType":"YulFunctionCall","src":"3342:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3334:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3212:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3227:4:25","type":""}],"src":"3061:419:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610a53380380610a53833981810160405281019061003291906102bd565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156100a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100999061035a565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610126576101258161012d60201b60201c565b5b50506103e6565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561019c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610193906103c6565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061028a8261025f565b9050919050565b61029a8161027f565b81146102a557600080fd5b50565b6000815190506102b781610291565b92915050565b600080604083850312156102d4576102d361025a565b5b60006102e2858286016102a8565b92505060206102f3858286016102a8565b9150509250929050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006103446018836102fd565b915061034f8261030e565b602082019050919050565b6000602082019050818103600083015261037381610337565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006103b06017836102fd565b91506103bb8261037a565b602082019050919050565b600060208201905081810360008301526103df816103a3565b9050919050565b61065e806103f56000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b604051610065919061045a565b60405180910390f35b610088600480360381019061008391906104a6565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011190610530565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059c565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561035b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035290610608565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044482610419565b9050919050565b61045481610439565b82525050565b600060208201905061046f600083018461044b565b92915050565b600080fd5b61048381610439565b811461048e57600080fd5b50565b6000813590506104a08161047a565b92915050565b6000602082840312156104bc576104bb610475565b5b60006104ca84828501610491565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b600061051a6016836104d3565b9150610525826104e4565b602082019050919050565b600060208201905081810360008301526105498161050d565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105866016836104d3565b915061059182610550565b602082019050919050565b600060208201905081810360008301526105b581610579565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f26017836104d3565b91506105fd826105bc565b602082019050919050565b60006020820190508181036000830152610621816105e5565b905091905056fea2646970667358221220f6893094bad7e321c1443f2aa1f2c1bbe39e11c695585771738d54b90cda61fa64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA53 CODESIZE SUB DUP1 PUSH2 0xA53 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x2BD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP1 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x126 JUMPI PUSH2 0x125 DUP2 PUSH2 0x12D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP PUSH2 0x3E6 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x19C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193 SWAP1 PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28A DUP3 PUSH2 0x25F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29A DUP2 PUSH2 0x27F JUMP JUMPDEST DUP2 EQ PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B7 DUP2 PUSH2 0x291 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D4 JUMPI PUSH2 0x2D3 PUSH2 0x25A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E2 DUP6 DUP3 DUP7 ADD PUSH2 0x2A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F3 DUP6 DUP3 DUP7 ADD PUSH2 0x2A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x344 PUSH1 0x18 DUP4 PUSH2 0x2FD JUMP JUMPDEST SWAP2 POP PUSH2 0x34F DUP3 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x373 DUP2 PUSH2 0x337 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B0 PUSH1 0x17 DUP4 PUSH2 0x2FD JUMP JUMPDEST SWAP2 POP PUSH2 0x3BB DUP3 PUSH2 0x37A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DF DUP2 PUSH2 0x3A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65E DUP1 PUSH2 0x3F5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x35B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x352 SWAP1 PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x444 DUP3 PUSH2 0x419 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x454 DUP2 PUSH2 0x439 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x483 DUP2 PUSH2 0x439 JUMP JUMPDEST DUP2 EQ PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4A0 DUP2 PUSH2 0x47A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BC JUMPI PUSH2 0x4BB PUSH2 0x475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CA DUP5 DUP3 DUP6 ADD PUSH2 0x491 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51A PUSH1 0x16 DUP4 PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x525 DUP3 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x549 DUP2 PUSH2 0x50D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x586 PUSH1 0x16 DUP4 PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x591 DUP3 PUSH2 0x550 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B5 DUP2 PUSH2 0x579 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F2 PUSH1 0x17 DUP4 PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FD DUP3 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x621 DUP2 PUSH2 0x5E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 DUP10 ADDRESS SWAP5 0xBA 0xD7 0xE3 0x21 0xC1 DIFFICULTY EXTCODEHASH 0x2A LOG1 CALLCODE 0xC1 0xBB 0xE3 SWAP15 GT 0xC6 SWAP6 PC JUMPI PUSH18 0x738D54B90CDA61FA64736F6C634300080900 CALLER ","sourceMap":"213:1777:1:-:0;;;486:231;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;572:1;552:22;;:8;:22;;;;544:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;620:8;610:7;;:18;;;;;;;;;;;;;;;;;;662:1;638:26;;:12;:26;;;634:79;;674:32;693:12;674:18;;;:32;;:::i;:::-;634:79;486:231;;213:1777;;1497:188;1565:10;1559:16;;:2;:16;;;;1551:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1627:2;1610:14;;:19;;;;;;;;;;;;;;;;;;1677:2;1641:39;;1668:7;;;;;;;;;;1641:39;;;;;;;;;;;;1497:188;:::o;88:117:25:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:169::-;1442:11;1476:6;1471:3;1464:19;1516:4;1511:3;1507:14;1492:29;;1358:169;;;;:::o;1533:174::-;1673:26;1669:1;1661:6;1657:14;1650:50;1533:174;:::o;1713:366::-;1855:3;1876:67;1940:2;1935:3;1876:67;:::i;:::-;1869:74;;1952:93;2041:3;1952:93;:::i;:::-;2070:2;2065:3;2061:12;2054:19;;1713:366;;;:::o;2085:419::-;2251:4;2289:2;2278:9;2274:18;2266:26;;2338:9;2332:4;2328:20;2324:1;2313:9;2309:17;2302:47;2366:131;2492:4;2366:131;:::i;:::-;2358:139;;2085:419;;;:::o;2510:173::-;2650:25;2646:1;2638:6;2634:14;2627:49;2510:173;:::o;2689:366::-;2831:3;2852:67;2916:2;2911:3;2852:67;:::i;:::-;2845:74;;2928:93;3017:3;2928:93;:::i;:::-;3046:2;3041:3;3037:12;3030:19;;2689:366;;;:::o;3061:419::-;3227:4;3265:2;3254:9;3250:18;3242:26;;3314:9;3308:4;3304:20;3300:1;3289:9;3285:17;3278:47;3342:131;3468:4;3342:131;:::i;:::-;3334:139;;3061:419;;;:::o;213:1777:1:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transferOwnership_159":{"entryPoint":748,"id":159,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_172":{"entryPoint":604,"id":172,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_125":{"entryPoint":138,"id":125,"parameterSlots":0,"returnSlots":0},"@owner_135":{"entryPoint":543,"id":135,"parameterSlots":0,"returnSlots":1},"@transferOwnership_89":{"entryPoint":584,"id":89,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1169,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1190,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1099,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":1293,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":1401,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1509,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1114,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1328,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1436,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1544,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1235,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1081,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1049,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1141,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":1252,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":1360,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1468,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1146,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4626:25","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:25","statements":[{"nodeType":"YulAssignment","src":"62:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:25"},"nodeType":"YulFunctionCall","src":"73:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:25","type":""}],"src":"7:126:25"},{"body":{"nodeType":"YulBlock","src":"184:51:25","statements":[{"nodeType":"YulAssignment","src":"194:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:25"},"nodeType":"YulFunctionCall","src":"205:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:25","type":""}],"src":"139:96:25"},{"body":{"nodeType":"YulBlock","src":"306:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:25"},"nodeType":"YulFunctionCall","src":"328:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:25"},"nodeType":"YulFunctionCall","src":"316:37:25"},"nodeType":"YulExpressionStatement","src":"316:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:25","type":""}],"src":"241:118:25"},{"body":{"nodeType":"YulBlock","src":"463:124:25","statements":[{"nodeType":"YulAssignment","src":"473:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:25"},"nodeType":"YulFunctionCall","src":"481:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:25"},"nodeType":"YulFunctionCall","src":"562:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:25"},"nodeType":"YulFunctionCall","src":"509:71:25"},"nodeType":"YulExpressionStatement","src":"509:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:25","type":""}],"src":"365:222:25"},{"body":{"nodeType":"YulBlock","src":"633:35:25","statements":[{"nodeType":"YulAssignment","src":"643:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:25"},"nodeType":"YulFunctionCall","src":"653:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:25","type":""}],"src":"593:75:25"},{"body":{"nodeType":"YulBlock","src":"763:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:25"},"nodeType":"YulFunctionCall","src":"773:12:25"},"nodeType":"YulExpressionStatement","src":"773:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:25"},{"body":{"nodeType":"YulBlock","src":"886:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:25"},"nodeType":"YulFunctionCall","src":"896:12:25"},"nodeType":"YulExpressionStatement","src":"896:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:25"},{"body":{"nodeType":"YulBlock","src":"963:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"1020:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1029:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1032:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1022:6:25"},"nodeType":"YulFunctionCall","src":"1022:12:25"},"nodeType":"YulExpressionStatement","src":"1022:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"986:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1011:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"993:17:25"},"nodeType":"YulFunctionCall","src":"993:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"983:2:25"},"nodeType":"YulFunctionCall","src":"983:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"976:6:25"},"nodeType":"YulFunctionCall","src":"976:43:25"},"nodeType":"YulIf","src":"973:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"956:5:25","type":""}],"src":"920:122:25"},{"body":{"nodeType":"YulBlock","src":"1100:87:25","statements":[{"nodeType":"YulAssignment","src":"1110:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1119:12:25"},"nodeType":"YulFunctionCall","src":"1119:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1110:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1175:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1148:26:25"},"nodeType":"YulFunctionCall","src":"1148:33:25"},"nodeType":"YulExpressionStatement","src":"1148:33:25"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1078:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"1086:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1094:5:25","type":""}],"src":"1048:139:25"},{"body":{"nodeType":"YulBlock","src":"1259:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"1305:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1307:77:25"},"nodeType":"YulFunctionCall","src":"1307:79:25"},"nodeType":"YulExpressionStatement","src":"1307:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1280:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1289:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1276:3:25"},"nodeType":"YulFunctionCall","src":"1276:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1301:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1272:3:25"},"nodeType":"YulFunctionCall","src":"1272:32:25"},"nodeType":"YulIf","src":"1269:119:25"},{"nodeType":"YulBlock","src":"1398:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1413:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1427:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1417:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1442:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1477:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1488:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:25"},"nodeType":"YulFunctionCall","src":"1473:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1497:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1452:20:25"},"nodeType":"YulFunctionCall","src":"1452:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1442:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1229:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1240:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1252:6:25","type":""}],"src":"1193:329:25"},{"body":{"nodeType":"YulBlock","src":"1624:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1641:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"1646:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1634:6:25"},"nodeType":"YulFunctionCall","src":"1634:19:25"},"nodeType":"YulExpressionStatement","src":"1634:19:25"},{"nodeType":"YulAssignment","src":"1662:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1681:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1686:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1677:3:25"},"nodeType":"YulFunctionCall","src":"1677:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1662:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1596:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1601:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1612:11:25","type":""}],"src":"1528:169:25"},{"body":{"nodeType":"YulBlock","src":"1809:66:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1831:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"1839:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1827:3:25"},"nodeType":"YulFunctionCall","src":"1827:14:25"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"1843:24:25","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1820:6:25"},"nodeType":"YulFunctionCall","src":"1820:48:25"},"nodeType":"YulExpressionStatement","src":"1820:48:25"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1801:6:25","type":""}],"src":"1703:172:25"},{"body":{"nodeType":"YulBlock","src":"2027:220:25","statements":[{"nodeType":"YulAssignment","src":"2037:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2103:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"2108:2:25","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2044:58:25"},"nodeType":"YulFunctionCall","src":"2044:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2037:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2209:3:25"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulIdentifier","src":"2120:88:25"},"nodeType":"YulFunctionCall","src":"2120:93:25"},"nodeType":"YulExpressionStatement","src":"2120:93:25"},{"nodeType":"YulAssignment","src":"2222:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2233:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"2238:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2229:3:25"},"nodeType":"YulFunctionCall","src":"2229:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2222:3:25"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2015:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2023:3:25","type":""}],"src":"1881:366:25"},{"body":{"nodeType":"YulBlock","src":"2424:248:25","statements":[{"nodeType":"YulAssignment","src":"2434:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2446:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2457:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2442:3:25"},"nodeType":"YulFunctionCall","src":"2442:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2434:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2481:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2492:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2477:3:25"},"nodeType":"YulFunctionCall","src":"2477:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2500:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2506:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2496:3:25"},"nodeType":"YulFunctionCall","src":"2496:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2470:6:25"},"nodeType":"YulFunctionCall","src":"2470:47:25"},"nodeType":"YulExpressionStatement","src":"2470:47:25"},{"nodeType":"YulAssignment","src":"2526:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2660:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2534:124:25"},"nodeType":"YulFunctionCall","src":"2534:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2526:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2404:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2419:4:25","type":""}],"src":"2253:419:25"},{"body":{"nodeType":"YulBlock","src":"2784:66:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2806:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2814:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2802:3:25"},"nodeType":"YulFunctionCall","src":"2802:14:25"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2818:24:25","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2795:6:25"},"nodeType":"YulFunctionCall","src":"2795:48:25"},"nodeType":"YulExpressionStatement","src":"2795:48:25"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2776:6:25","type":""}],"src":"2678:172:25"},{"body":{"nodeType":"YulBlock","src":"3002:220:25","statements":[{"nodeType":"YulAssignment","src":"3012:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3078:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"3083:2:25","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3019:58:25"},"nodeType":"YulFunctionCall","src":"3019:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3012:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3184:3:25"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"3095:88:25"},"nodeType":"YulFunctionCall","src":"3095:93:25"},"nodeType":"YulExpressionStatement","src":"3095:93:25"},{"nodeType":"YulAssignment","src":"3197:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3208:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"3213:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3204:3:25"},"nodeType":"YulFunctionCall","src":"3204:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3197:3:25"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2990:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2998:3:25","type":""}],"src":"2856:366:25"},{"body":{"nodeType":"YulBlock","src":"3399:248:25","statements":[{"nodeType":"YulAssignment","src":"3409:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3421:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3432:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3417:3:25"},"nodeType":"YulFunctionCall","src":"3417:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3409:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3456:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3467:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3452:3:25"},"nodeType":"YulFunctionCall","src":"3452:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3475:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3481:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3471:3:25"},"nodeType":"YulFunctionCall","src":"3471:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:25"},"nodeType":"YulFunctionCall","src":"3445:47:25"},"nodeType":"YulExpressionStatement","src":"3445:47:25"},{"nodeType":"YulAssignment","src":"3501:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3635:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3509:124:25"},"nodeType":"YulFunctionCall","src":"3509:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3501:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3379:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3394:4:25","type":""}],"src":"3228:419:25"},{"body":{"nodeType":"YulBlock","src":"3759:67:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3781:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"3789:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3777:3:25"},"nodeType":"YulFunctionCall","src":"3777:14:25"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"3793:25:25","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3770:6:25"},"nodeType":"YulFunctionCall","src":"3770:49:25"},"nodeType":"YulExpressionStatement","src":"3770:49:25"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3751:6:25","type":""}],"src":"3653:173:25"},{"body":{"nodeType":"YulBlock","src":"3978:220:25","statements":[{"nodeType":"YulAssignment","src":"3988:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4054:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"4059:2:25","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3995:58:25"},"nodeType":"YulFunctionCall","src":"3995:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3988:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4160:3:25"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"4071:88:25"},"nodeType":"YulFunctionCall","src":"4071:93:25"},"nodeType":"YulExpressionStatement","src":"4071:93:25"},{"nodeType":"YulAssignment","src":"4173:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4184:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"4189:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4180:3:25"},"nodeType":"YulFunctionCall","src":"4180:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4173:3:25"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3966:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3974:3:25","type":""}],"src":"3832:366:25"},{"body":{"nodeType":"YulBlock","src":"4375:248:25","statements":[{"nodeType":"YulAssignment","src":"4385:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4397:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4408:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4393:3:25"},"nodeType":"YulFunctionCall","src":"4393:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4385:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4432:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4443:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4428:3:25"},"nodeType":"YulFunctionCall","src":"4428:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4451:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"4457:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4447:3:25"},"nodeType":"YulFunctionCall","src":"4447:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4421:6:25"},"nodeType":"YulFunctionCall","src":"4421:47:25"},"nodeType":"YulExpressionStatement","src":"4421:47:25"},{"nodeType":"YulAssignment","src":"4477:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4611:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4485:124:25"},"nodeType":"YulFunctionCall","src":"4485:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4477:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4355:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4370:4:25","type":""}],"src":"4204:419:25"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b604051610065919061045a565b60405180910390f35b610088600480360381019061008391906104a6565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011190610530565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059c565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561035b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035290610608565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044482610419565b9050919050565b61045481610439565b82525050565b600060208201905061046f600083018461044b565b92915050565b600080fd5b61048381610439565b811461048e57600080fd5b50565b6000813590506104a08161047a565b92915050565b6000602082840312156104bc576104bb610475565b5b60006104ca84828501610491565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b600061051a6016836104d3565b9150610525826104e4565b602082019050919050565b600060208201905081810360008301526105498161050d565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105866016836104d3565b915061059182610550565b602082019050919050565b600060208201905081810360008301526105b581610579565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f26017836104d3565b91506105fd826105bc565b602082019050919050565b60006020820190508181036000830152610621816105e5565b905091905056fea2646970667358221220f6893094bad7e321c1443f2aa1f2c1bbe39e11c695585771738d54b90cda61fa64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x35B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x352 SWAP1 PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x444 DUP3 PUSH2 0x419 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x454 DUP2 PUSH2 0x439 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x483 DUP2 PUSH2 0x439 JUMP JUMPDEST DUP2 EQ PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4A0 DUP2 PUSH2 0x47A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BC JUMPI PUSH2 0x4BB PUSH2 0x475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CA DUP5 DUP3 DUP6 ADD PUSH2 0x491 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51A PUSH1 0x16 DUP4 PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x525 DUP3 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x549 DUP2 PUSH2 0x50D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x586 PUSH1 0x16 DUP4 PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x591 DUP3 PUSH2 0x550 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B5 DUP2 PUSH2 0x579 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F2 PUSH1 0x17 DUP4 PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FD DUP3 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x621 DUP2 PUSH2 0x5E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 DUP10 ADDRESS SWAP5 0xBA 0xD7 0xE3 0x21 0xC1 DIFFICULTY EXTCODEHASH 0x2A LOG1 CALLCODE 0xC1 0xBB 0xE3 SWAP15 GT 0xC6 SWAP6 PC JUMPI PUSH18 0x738D54B90CDA61FA64736F6C634300080900 CALLER ","sourceMap":"213:1777:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1016:265;;;:::i;:::-;;1332:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;826:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1016:265;1089:14;;;;;;;;;;;1075:28;;:10;:28;;;1067:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1137:16;1156:7;;;;;;;;;;;1137:26;;1179:10;1169:7;;:20;;;;;;;;;;;;;;;;;;1220:1;1195:14;;:27;;;;;;;;;;;;;;;;;;1265:10;1234:42;;1255:8;1234:42;;;;;;;;;;;;1061:220;1016:265::o;1332:81::-;1379:7;1401;;;;;;;;;;;1394:14;;1332:81;:::o;826:98::-;1956:20;:18;:20::i;:::-;897:22:::1;916:2;897:18;:22::i;:::-;826:98:::0;:::o;1730:111::-;1802:7;;;;;;;;;;1788:21;;:10;:21;;;1780:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1730:111::o;1497:188::-;1565:10;1559:16;;:2;:16;;;;1551:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1627:2;1610:14;;:19;;;;;;;;;;;;;;;;;;1677:2;1641:39;;1668:7;;;;;;;;;;1641:39;;;;;;;;;;;;1497:188;:::o;7:126:25:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:172::-;1843:24;1839:1;1831:6;1827:14;1820:48;1703:172;:::o;1881:366::-;2023:3;2044:67;2108:2;2103:3;2044:67;:::i;:::-;2037:74;;2120:93;2209:3;2120:93;:::i;:::-;2238:2;2233:3;2229:12;2222:19;;1881:366;;;:::o;2253:419::-;2419:4;2457:2;2446:9;2442:18;2434:26;;2506:9;2500:4;2496:20;2492:1;2481:9;2477:17;2470:47;2534:131;2660:4;2534:131;:::i;:::-;2526:139;;2253:419;;;:::o;2678:172::-;2818:24;2814:1;2806:6;2802:14;2795:48;2678:172;:::o;2856:366::-;2998:3;3019:67;3083:2;3078:3;3019:67;:::i;:::-;3012:74;;3095:93;3184:3;3095:93;:::i;:::-;3213:2;3208:3;3204:12;3197:19;;2856:366;;;:::o;3228:419::-;3394:4;3432:2;3421:9;3417:18;3409:26;;3481:9;3475:4;3471:20;3467:1;3456:9;3452:17;3445:47;3509:131;3635:4;3509:131;:::i;:::-;3501:139;;3228:419;;;:::o;3653:173::-;3793:25;3789:1;3781:6;3777:14;3770:49;3653:173;:::o;3832:366::-;3974:3;3995:67;4059:2;4054:3;3995:67;:::i;:::-;3988:74;;4071:93;4160:3;4071:93;:::i;:::-;4189:2;4184:3;4180:12;4173:19;;3832:366;;;:::o;4204:419::-;4370:4;4408:2;4397:9;4393:18;4385:26;;4457:9;4451:4;4447:20;4443:1;4432:9;4428:17;4421:47;4485:131;4611:4;4485:131;:::i;:::-;4477:139;;4204:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"326000","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"54518","owner()":"2522","transferOwnership(address)":"30679"},"internal":{"_transferOwnership(address)":"infinite","_validateOwnership()":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol\":\"ConfirmedOwnerWithProposal\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/OwnableInterface.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwnerWithProposal is OwnableInterface {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /**\\n   * @notice Allows an owner to begin transferring ownership to a new address,\\n   * pending.\\n   */\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /**\\n   * @notice Allows an ownership transfer to be completed by the recipient.\\n   */\\n  function acceptOwnership() external override {\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @notice Get the current owner\\n   */\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /**\\n   * @notice validate, transfer ownership, and emit relevant events\\n   */\\n  function _transferOwnership(address to) private {\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /**\\n   * @notice validate access\\n   */\\n  function _validateOwnership() internal view {\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /**\\n   * @notice Reverts if called by anyone other than the contract owner.\\n   */\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0xa2f137a1d066795aeac76226e58f33c982278cdd34b4f09e5a2243d5a0924654\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface OwnableInterface {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0xb8b3a97783dddc198b790c4cec1eda7fb47aa38cbaea6555220d0ed8c735c086\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":27,"contract":"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":29,"contract":"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address, pending."}},"notice":"A contract with helpers for basic contract ownership.","version":1}}},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0xec8b7e3032e887dd0732d2a5f8552ddce64a99a81b0008ef0bcf6cad68a535fc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"LinkTokenInterface":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"decimalPlaces","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"increaseApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"tokenName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalTokensIssued","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseApproval(address,uint256)":"66188463","increaseApproval(address,uint256)":"d73dd623","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol":{"OwnableInterface":{"abi":[{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol\":\"OwnableInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface OwnableInterface {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0xb8b3a97783dddc198b790c4cec1eda7fb47aa38cbaea6555220d0ed8c735c086\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n}\\n\",\"keccak256\":\"0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol":{"VRFCoordinatorV2Mock":{"abi":[{"inputs":[{"internalType":"uint96","name":"_baseFee","type":"uint96"},{"internalType":"uint96","name":"_gasPriceLink","type":"uint96"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidSubscription","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"MustBeSubOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputSeed","type":"uint256"},{"indexed":false,"internalType":"uint96","name":"payment","type":"uint96"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"}],"name":"RandomWordsFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"preSeed","type":"uint256"},{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"indexed":false,"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"numWords","type":"uint32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RandomWordsRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SubscriptionCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"SubscriptionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"uint256","name":"oldBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"SubscriptionFunded","type":"event"},{"inputs":[],"name":"BASE_FEE","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GAS_PRICE_LINK","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"fulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"uint96","name":"_amount","type":"uint96"}],"name":"fundSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_keyHash","type":"bytes32"},{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"uint16","name":"_minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"_callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"_numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"_subId":"- A unique subscription id."}},"fulfillRandomWords(uint256,address)":{"details":"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.","params":{"_consumer":"the VRF randomness consumer to send the result to","_requestId":"the request to fulfill"}},"fundSubscription(uint64,uint96)":{"params":{"_amount":"the amount to fund","_subId":"the subscription to fund"}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_600":{"entryPoint":null,"id":600,"parameterSlots":2,"returnSlots":0},"abi_decode_t_uint96_fromMemory":{"entryPoint":199,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint96t_uint96_fromMemory":{"entryPoint":222,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":149,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":144,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":173,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1228:25","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:25","statements":[{"nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:25"},"nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:25"},"nodeType":"YulFunctionCall","src":"187:12:25"},"nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:25"},"nodeType":"YulFunctionCall","src":"310:12:25"},"nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nodeType":"YulBlock","src":"378:65:25","statements":[{"nodeType":"YulAssignment","src":"388:49:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"410:26:25","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:25"},"nodeType":"YulFunctionCall","src":"399:38:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:25"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:25","type":""}],"src":"334:109:25"},{"body":{"nodeType":"YulBlock","src":"491:78:25","statements":[{"body":{"nodeType":"YulBlock","src":"547:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"556:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"559:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"549:6:25"},"nodeType":"YulFunctionCall","src":"549:12:25"},"nodeType":"YulExpressionStatement","src":"549:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"514:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"538:5:25"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"521:16:25"},"nodeType":"YulFunctionCall","src":"521:23:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"511:2:25"},"nodeType":"YulFunctionCall","src":"511:34:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"504:6:25"},"nodeType":"YulFunctionCall","src":"504:42:25"},"nodeType":"YulIf","src":"501:62:25"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"484:5:25","type":""}],"src":"449:120:25"},{"body":{"nodeType":"YulBlock","src":"637:79:25","statements":[{"nodeType":"YulAssignment","src":"647:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"662:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"656:5:25"},"nodeType":"YulFunctionCall","src":"656:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"647:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"704:5:25"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"678:25:25"},"nodeType":"YulFunctionCall","src":"678:32:25"},"nodeType":"YulExpressionStatement","src":"678:32:25"}]},"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"615:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"623:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"631:5:25","type":""}],"src":"575:141:25"},{"body":{"nodeType":"YulBlock","src":"814:411:25","statements":[{"body":{"nodeType":"YulBlock","src":"860:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"862:77:25"},"nodeType":"YulFunctionCall","src":"862:79:25"},"nodeType":"YulExpressionStatement","src":"862:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"835:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"844:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"831:3:25"},"nodeType":"YulFunctionCall","src":"831:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"856:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"827:3:25"},"nodeType":"YulFunctionCall","src":"827:32:25"},"nodeType":"YulIf","src":"824:119:25"},{"nodeType":"YulBlock","src":"953:127:25","statements":[{"nodeType":"YulVariableDeclaration","src":"968:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"982:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"972:6:25","type":""}]},{"nodeType":"YulAssignment","src":"997:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1042:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1053:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1038:3:25"},"nodeType":"YulFunctionCall","src":"1038:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1062:7:25"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulIdentifier","src":"1007:30:25"},"nodeType":"YulFunctionCall","src":"1007:63:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"997:6:25"}]}]},{"nodeType":"YulBlock","src":"1090:128:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1105:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1119:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1109:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1135:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1180:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1191:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1176:3:25"},"nodeType":"YulFunctionCall","src":"1176:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1200:7:25"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulIdentifier","src":"1145:30:25"},"nodeType":"YulFunctionCall","src":"1145:63:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1135:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint96t_uint96_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"776:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"787:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"799:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"807:6:25","type":""}],"src":"722:503:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_uint96t_uint96_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040526001805560646002553480156200001a57600080fd5b506040516200203d3803806200203d8339818101604052810190620000409190620000de565b816bffffffffffffffffffffffff166080816bffffffffffffffffffffffff1681525050806bffffffffffffffffffffffff1660a0816bffffffffffffffffffffffff1681525050505062000125565b600080fd5b60006bffffffffffffffffffffffff82169050919050565b620000b88162000095565b8114620000c457600080fd5b50565b600081519050620000d881620000ad565b92915050565b60008060408385031215620000f857620000f762000090565b5b60006200010885828601620000c7565b92505060206200011b85828601620000c7565b9150509250929050565b60805160a051611ee4620001596000396000818161086c0152610cdc01526000818161031101526108b10152611ee46000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c8063823597401161008c578063a410347f11610066578063a410347f146101eb578063a47c769614610209578063afc69b531461023c578063d7ae1d3014610258576100ce565b806382359740146101955780639f87fad7146101b1578063a21a23e4146101cd576100ce565b8062012291146100d357806304c357cb146100f35780633d18651e1461010f5780635d3b1d301461012d5780637341c10c1461015d578063808974ff14610179575b600080fd5b6100db610274565b6040516100ea93929190611391565b60405180910390f35b61010d60048036038101906101089190611472565b6102d4565b005b61011761030f565b60405161012491906114d9565b60405180910390f35b61014760048036038101906101429190611578565b610333565b604051610154919061160c565b60405180910390f35b61017760048036038101906101729190611472565b61054f565b005b610193600480360381019061018e9190611653565b61058a565b005b6101af60048036038101906101aa9190611693565b610aaf565b005b6101cb60048036038101906101c69190611472565b610aea565b005b6101d5610b25565b6040516101e291906116cf565b60405180910390f35b6101f3610cda565b60405161020091906114d9565b60405180910390f35b610223600480360381019061021e9190611693565b610cfe565b60405161023394939291906117b7565b60405180910390f35b6102566004803603810190610251919061182f565b610e9f565b005b610272600480360381019061026d9190611472565b61106a565b005b60008060606003621e8480600067ffffffffffffffff81111561029a5761029961186f565b5b6040519080825280602002602001820160405280156102c85781602001602082028036833780820191505090505b50925092509250909192565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610306906118fb565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b60008073ffffffffffffffffffffffffffffffffffffffff16600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103e5576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008154809291906103fa9061194a565b9190505590506000600260008154809291906104159061194a565b91905055905060405180606001604052808867ffffffffffffffff1681526020018663ffffffff1681526020018563ffffffff168152506004600084815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548163ffffffff021916908363ffffffff160217905550604082015181600001600c6101000a81548163ffffffff021916908363ffffffff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff168767ffffffffffffffff16897f63373d1c4696214b898952999c9aaec57dac1ee2723cec59bea6888f489a977285858b8b8b604051610539959493929190611993565b60405180910390a4819250505095945050505050565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610581906118fb565b60405180910390fd5b60005a905060006004600085815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe90611a32565b60405180910390fd5b6000600460008581526020019081526020016000206040518060600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff168152505090506000816040015163ffffffff1667ffffffffffffffff8111156106cd576106cc61186f565b5b6040519080825280602002602001820160405280156106fb5781602001602082028036833780820191505090505b50905060005b826040015163ffffffff16811015610771578581604051602001610726929190611a52565b6040516020818303038152906040528051906020012060001c82828151811061075257610751611a7b565b5b60200260200101818152505080806107699061194a565b915050610701565b50600080631fe543e360e01b8784604051602401610790929190611b68565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008673ffffffffffffffffffffffffffffffffffffffff16856020015163ffffffff16836040516108219190611c12565b60006040518083038160008787f1925050503d806000811461085f576040519150601f19603f3d011682016040523d82523d6000602084013e610864565b606091505b5050905060007f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff165a886108a59190611c29565b6108af9190611c5d565b7f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff166108e89190611cb7565b9050806bffffffffffffffffffffffff1660036000886000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff161015610986576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060036000886000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff166109db9190611d0d565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550600460008a8152602001908152602001600020600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549063ffffffff021916905560008201600c6101000a81549063ffffffff02191690555050887f7dffc5ae5ee4e2e4df1651cf6ad329a73cebdb728f37ea0187b9b17e036756e48a8385604051610a9c93929190611d5c565b60405180910390a2505050505050505050565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae1906118fb565b60405180910390fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1c906118fb565b60405180910390fd5b600080600081819054906101000a900467ffffffffffffffff1680929190610b4c90611d93565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff16815250600360008060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555090505060008054906101000a900467ffffffffffffffff1667ffffffffffffffff167f464722b4166576d3dcbba877b999bc35cf911f4eaf434b7eba68fa113951d0bf33604051610cb89190611dc4565b60405180910390a260008054906101000a900467ffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060006060600073ffffffffffffffffffffffffffffffffffffffff16600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610db6576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166000600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600067ffffffffffffffff811115610e6157610e6061186f565b5b604051908082528060200260200182016040528015610e8f5781602001602082028036833780820191505090505b5093509350935093509193509193565b600073ffffffffffffffffffffffffffffffffffffffff16600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f50576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff16905081600360008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff16610fe89190611ddf565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508267ffffffffffffffff167fd39ec07f4e209f627a4c427971473820dc129761ba28de8906bd56f57101d4f882848461104f9190611ddf565b60405161105d929190611e5c565b60405180910390a2505050565b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611121576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461119157806040517fd8a3fb520000000000000000000000000000000000000000000000000000000081526004016111889190611dc4565b60405180910390fd5b8367ffffffffffffffff167fe8ed5b475a5b5987aa9165e8731bb78043f39eee32ec5a1169a89e27fcd4981584600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff1660405161120f929190611e85565b60405180910390a2600360008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a8154906bffffffffffffffffffffffff0219169055505050505050565b600061ffff82169050919050565b6112a48161128d565b82525050565b600063ffffffff82169050919050565b6112c3816112aa565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b611308816112f5565b82525050565b600061131a83836112ff565b60208301905092915050565b6000602082019050919050565b600061133e826112c9565b61134881856112d4565b9350611353836112e5565b8060005b8381101561138457815161136b888261130e565b975061137683611326565b925050600181019050611357565b5085935050505092915050565b60006060820190506113a6600083018661129b565b6113b360208301856112ba565b81810360408301526113c58184611333565b9050949350505050565b600080fd5b600067ffffffffffffffff82169050919050565b6113f1816113d4565b81146113fc57600080fd5b50565b60008135905061140e816113e8565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061143f82611414565b9050919050565b61144f81611434565b811461145a57600080fd5b50565b60008135905061146c81611446565b92915050565b60008060408385031215611489576114886113cf565b5b6000611497858286016113ff565b92505060206114a88582860161145d565b9150509250929050565b60006bffffffffffffffffffffffff82169050919050565b6114d3816114b2565b82525050565b60006020820190506114ee60008301846114ca565b92915050565b6114fd816112f5565b811461150857600080fd5b50565b60008135905061151a816114f4565b92915050565b6115298161128d565b811461153457600080fd5b50565b60008135905061154681611520565b92915050565b611555816112aa565b811461156057600080fd5b50565b6000813590506115728161154c565b92915050565b600080600080600060a08688031215611594576115936113cf565b5b60006115a28882890161150b565b95505060206115b3888289016113ff565b94505060406115c488828901611537565b93505060606115d588828901611563565b92505060806115e688828901611563565b9150509295509295909350565b6000819050919050565b611606816115f3565b82525050565b600060208201905061162160008301846115fd565b92915050565b611630816115f3565b811461163b57600080fd5b50565b60008135905061164d81611627565b92915050565b6000806040838503121561166a576116696113cf565b5b60006116788582860161163e565b92505060206116898582860161145d565b9150509250929050565b6000602082840312156116a9576116a86113cf565b5b60006116b7848285016113ff565b91505092915050565b6116c9816113d4565b82525050565b60006020820190506116e460008301846116c0565b92915050565b6116f381611434565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61172e81611434565b82525050565b60006117408383611725565b60208301905092915050565b6000602082019050919050565b6000611764826116f9565b61176e8185611704565b935061177983611715565b8060005b838110156117aa5781516117918882611734565b975061179c8361174c565b92505060018101905061177d565b5085935050505092915050565b60006080820190506117cc60008301876114ca565b6117d960208301866116c0565b6117e660408301856116ea565b81810360608301526117f88184611759565b905095945050505050565b61180c816114b2565b811461181757600080fd5b50565b60008135905061182981611803565b92915050565b60008060408385031215611846576118456113cf565b5b6000611854858286016113ff565b92505060206118658582860161181a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082825260208201905092915050565b7f6e6f7420696d706c656d656e7465640000000000000000000000000000000000600082015250565b60006118e5600f8361189e565b91506118f0826118af565b602082019050919050565b60006020820190508181036000830152611914816118d8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611955826115f3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156119885761198761191b565b5b600182019050919050565b600060a0820190506119a860008301886115fd565b6119b560208301876115fd565b6119c2604083018661129b565b6119cf60608301856112ba565b6119dc60808301846112ba565b9695505050505050565b7f6e6f6e6578697374656e74207265717565737400000000000000000000000000600082015250565b6000611a1c60138361189e565b9150611a27826119e6565b602082019050919050565b60006020820190508181036000830152611a4b81611a0f565b9050919050565b6000604082019050611a6760008301856115fd565b611a7460208301846115fd565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611adf816115f3565b82525050565b6000611af18383611ad6565b60208301905092915050565b6000602082019050919050565b6000611b1582611aaa565b611b1f8185611ab5565b9350611b2a83611ac6565b8060005b83811015611b5b578151611b428882611ae5565b9750611b4d83611afd565b925050600181019050611b2e565b5085935050505092915050565b6000604082019050611b7d60008301856115fd565b8181036020830152611b8f8184611b0a565b90509392505050565b600081519050919050565b600081905092915050565b60005b83811015611bcc578082015181840152602081019050611bb1565b83811115611bdb576000848401525b50505050565b6000611bec82611b98565b611bf68185611ba3565b9350611c06818560208601611bae565b80840191505092915050565b6000611c1e8284611be1565b915081905092915050565b6000611c34826115f3565b9150611c3f836115f3565b925082821015611c5257611c5161191b565b5b828203905092915050565b6000611c68826115f3565b9150611c73836115f3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611cac57611cab61191b565b5b828202905092915050565b6000611cc2826115f3565b9150611ccd836115f3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d0257611d0161191b565b5b828201905092915050565b6000611d18826114b2565b9150611d23836114b2565b925082821015611d3657611d3561191b565b5b828203905092915050565b60008115159050919050565b611d5681611d41565b82525050565b6000606082019050611d7160008301866115fd565b611d7e60208301856114ca565b611d8b6040830184611d4d565b949350505050565b6000611d9e826113d4565b915067ffffffffffffffff821415611db957611db861191b565b5b600182019050919050565b6000602082019050611dd960008301846116ea565b92915050565b6000611dea826114b2565b9150611df5836114b2565b9250826bffffffffffffffffffffffff03821115611e1657611e1561191b565b5b828201905092915050565b6000819050919050565b6000611e46611e41611e3c846114b2565b611e21565b6115f3565b9050919050565b611e5681611e2b565b82525050565b6000604082019050611e716000830185611e4d565b611e7e6020830184611e4d565b9392505050565b6000604082019050611e9a60008301856116ea565b611ea76020830184611e4d565b939250505056fea2646970667358221220676b6bafc14fa8906c7bd3919e188a6672f9e155ef1517468cf25df2c61d326964736f6c63430008090033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SSTORE PUSH1 0x64 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x203D CODESIZE SUB DUP1 PUSH3 0x203D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x40 SWAP2 SWAP1 PUSH3 0xDE JUMP JUMPDEST DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH3 0x125 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB8 DUP2 PUSH3 0x95 JUMP JUMPDEST DUP2 EQ PUSH3 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xD8 DUP2 PUSH3 0xAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xF8 JUMPI PUSH3 0xF7 PUSH3 0x90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x108 DUP6 DUP3 DUP7 ADD PUSH3 0xC7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x11B DUP6 DUP3 DUP7 ADD PUSH3 0xC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1EE4 PUSH3 0x159 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x86C ADD MSTORE PUSH2 0xCDC ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x311 ADD MSTORE PUSH2 0x8B1 ADD MSTORE PUSH2 0x1EE4 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82359740 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA410347F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA410347F EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xA47C7696 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xAFC69B53 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xD7AE1D30 EQ PUSH2 0x258 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x82359740 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x9F87FAD7 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x1CD JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0x12291 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x4C357CB EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x3D18651E EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x5D3B1D30 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x7341C10C EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0xAEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH2 0xE9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x106A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x3 PUSH3 0x1E8480 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29A JUMPI PUSH2 0x299 PUSH2 0x186F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2C8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3FA SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x415 SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP10 PUSH32 0x63373D1C4696214B898952999C9AAEC57DAC1EE2723CEC59BEA6888F489A9772 DUP6 DUP6 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x539 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP2 SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x581 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FE SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CD JUMPI PUSH2 0x6CC PUSH2 0x186F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x771 JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x726 SWAP3 SWAP2 SWAP1 PUSH2 0x1A52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x752 JUMPI PUSH2 0x751 PUSH2 0x1A7B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x769 SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x701 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x790 SWAP3 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x85F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x864 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GAS DUP9 PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH2 0x8AF SWAP2 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8E8 SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP9 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 PUSH32 0x7DFFC5AE5EE4E2E4DF1651CF6AD329A73CEBDB728F37EA0187B9B17E036756E4 DUP11 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA9C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE1 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1C SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB4C SWAP1 PUSH2 0x1D93 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x464722B4166576D3DCBBA877B999BC35CF911F4EAF434B7EBA68FA113951D0BF CALLER PUSH1 0x40 MLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE61 JUMPI PUSH2 0xE60 PUSH2 0x186F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE8F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFE8 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xD39EC07F4E209F627A4C427971473820DC129761BA28DE8906BD56F57101D4F8 DUP3 DUP5 DUP5 PUSH2 0x104F SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105D SWAP3 SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1191 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1188 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xE8ED5B475A5B5987AA9165E8731BB78043F39EEE32EC5A1169A89E27FCD49815 DUP5 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x120F SWAP3 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A4 DUP2 PUSH2 0x128D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12C3 DUP2 PUSH2 0x12AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1308 DUP2 PUSH2 0x12F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x131A DUP4 DUP4 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133E DUP3 PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x1348 DUP2 DUP6 PUSH2 0x12D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1353 DUP4 PUSH2 0x12E5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1384 JUMPI DUP2 MLOAD PUSH2 0x136B DUP9 DUP3 PUSH2 0x130E JUMP JUMPDEST SWAP8 POP PUSH2 0x1376 DUP4 PUSH2 0x1326 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1357 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13A6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x129B JUMP JUMPDEST PUSH2 0x13B3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12BA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x13C5 DUP2 DUP5 PUSH2 0x1333 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F1 DUP2 PUSH2 0x13D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x13FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140E DUP2 PUSH2 0x13E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143F DUP3 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144F DUP2 PUSH2 0x1434 JUMP JUMPDEST DUP2 EQ PUSH2 0x145A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146C DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1489 JUMPI PUSH2 0x1488 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1497 DUP6 DUP3 DUP7 ADD PUSH2 0x13FF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A8 DUP6 DUP3 DUP7 ADD PUSH2 0x145D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D3 DUP2 PUSH2 0x14B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14EE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14FD DUP2 PUSH2 0x12F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x151A DUP2 PUSH2 0x14F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1529 DUP2 PUSH2 0x128D JUMP JUMPDEST DUP2 EQ PUSH2 0x1534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1546 DUP2 PUSH2 0x1520 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1555 DUP2 PUSH2 0x12AA JUMP JUMPDEST DUP2 EQ PUSH2 0x1560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1572 DUP2 PUSH2 0x154C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1594 JUMPI PUSH2 0x1593 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15A2 DUP9 DUP3 DUP10 ADD PUSH2 0x150B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x15B3 DUP9 DUP3 DUP10 ADD PUSH2 0x13FF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x15C4 DUP9 DUP3 DUP10 ADD PUSH2 0x1537 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x15D5 DUP9 DUP3 DUP10 ADD PUSH2 0x1563 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x15E6 DUP9 DUP3 DUP10 ADD PUSH2 0x1563 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1606 DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1621 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1630 DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x163B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x164D DUP2 PUSH2 0x1627 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x166A JUMPI PUSH2 0x1669 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1678 DUP6 DUP3 DUP7 ADD PUSH2 0x163E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1689 DUP6 DUP3 DUP7 ADD PUSH2 0x145D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A9 JUMPI PUSH2 0x16A8 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16B7 DUP5 DUP3 DUP6 ADD PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16C9 DUP2 PUSH2 0x13D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16F3 DUP2 PUSH2 0x1434 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172E DUP2 PUSH2 0x1434 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1740 DUP4 DUP4 PUSH2 0x1725 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1764 DUP3 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0x176E DUP2 DUP6 PUSH2 0x1704 JUMP JUMPDEST SWAP4 POP PUSH2 0x1779 DUP4 PUSH2 0x1715 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17AA JUMPI DUP2 MLOAD PUSH2 0x1791 DUP9 DUP3 PUSH2 0x1734 JUMP JUMPDEST SWAP8 POP PUSH2 0x179C DUP4 PUSH2 0x174C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x177D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x17CC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x17D9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x17E6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x16EA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x17F8 DUP2 DUP5 PUSH2 0x1759 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x180C DUP2 PUSH2 0x14B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1829 DUP2 PUSH2 0x1803 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1846 JUMPI PUSH2 0x1845 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1854 DUP6 DUP3 DUP7 ADD PUSH2 0x13FF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1865 DUP6 DUP3 DUP7 ADD PUSH2 0x181A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420696D706C656D656E7465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E5 PUSH1 0xF DUP4 PUSH2 0x189E JUMP JUMPDEST SWAP2 POP PUSH2 0x18F0 DUP3 PUSH2 0x18AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1914 DUP2 PUSH2 0x18D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1955 DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1988 JUMPI PUSH2 0x1987 PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x19A8 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x19B5 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x19C2 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x129B JUMP JUMPDEST PUSH2 0x19CF PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x19DC PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x12BA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x6E6F6E6578697374656E74207265717565737400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1C PUSH1 0x13 DUP4 PUSH2 0x189E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A27 DUP3 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A4B DUP2 PUSH2 0x1A0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A67 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x1A74 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADF DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF1 DUP4 DUP4 PUSH2 0x1AD6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B15 DUP3 PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0x1B1F DUP2 DUP6 PUSH2 0x1AB5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B2A DUP4 PUSH2 0x1AC6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B5B JUMPI DUP2 MLOAD PUSH2 0x1B42 DUP9 DUP3 PUSH2 0x1AE5 JUMP JUMPDEST SWAP8 POP PUSH2 0x1B4D DUP4 PUSH2 0x1AFD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B2E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B7D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15FD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1B8F DUP2 DUP5 PUSH2 0x1B0A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BCC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BB1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1BDB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BEC DUP3 PUSH2 0x1B98 JUMP JUMPDEST PUSH2 0x1BF6 DUP2 DUP6 PUSH2 0x1BA3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C06 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1BAE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C1E DUP3 DUP5 PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C34 DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3F DUP4 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1C52 JUMPI PUSH2 0x1C51 PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C68 DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C73 DUP4 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1CAC JUMPI PUSH2 0x1CAB PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC2 DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCD DUP4 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1D02 JUMPI PUSH2 0x1D01 PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D18 DUP3 PUSH2 0x14B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D23 DUP4 PUSH2 0x14B2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1D36 JUMPI PUSH2 0x1D35 PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D56 DUP2 PUSH2 0x1D41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D71 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x1D7E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x1D8B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D4D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9E DUP3 PUSH2 0x13D4 JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1DB9 JUMPI PUSH2 0x1DB8 PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEA DUP3 PUSH2 0x14B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF5 DUP4 PUSH2 0x14B2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1E16 JUMPI PUSH2 0x1E15 PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E46 PUSH2 0x1E41 PUSH2 0x1E3C DUP5 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x1E21 JUMP JUMPDEST PUSH2 0x15F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E56 DUP2 PUSH2 0x1E2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E71 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E4D JUMP JUMPDEST PUSH2 0x1E7E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E4D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E9A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16EA JUMP JUMPDEST PUSH2 0x1EA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E4D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x6B6BAFC14FA8906C PUSH28 0xD3919E188A6672F9E155EF1517468CF25DF2C61D326964736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"254:5984:7:-:0;;;1144:1;1118:27;;1173:3;1149:27;;1494:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1562:8;1551:19;;;;;;;;;;1593:13;1576:30;;;;;;;;;;1494:117;;254:5984;;88:117:25;197:1;194;187:12;334:109;370:7;410:26;403:5;399:38;388:49;;334:109;;;:::o;449:120::-;521:23;538:5;521:23;:::i;:::-;514:5;511:34;501:62;;559:1;556;549:12;501:62;449:120;:::o;575:141::-;631:5;662:6;656:13;647:22;;678:32;704:5;678:32;:::i;:::-;575:141;;;;:::o;722:503::-;799:6;807;856:2;844:9;835:7;831:23;827:32;824:119;;;862:79;;:::i;:::-;824:119;982:1;1007:63;1062:7;1053:6;1042:9;1038:22;1007:63;:::i;:::-;997:73;;953:127;1119:2;1145:63;1200:7;1191:6;1180:9;1176:22;1145:63;:::i;:::-;1135:73;;1090:128;722:503;;;;;:::o;254:5984:7:-;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BASE_FEE_494":{"entryPoint":783,"id":494,"parameterSlots":0,"returnSlots":0},"@GAS_PRICE_LINK_496":{"entryPoint":3290,"id":496,"parameterSlots":0,"returnSlots":0},"@acceptSubscriptionOwnerTransfer_1063":{"entryPoint":2735,"id":1063,"parameterSlots":1,"returnSlots":0},"@addConsumer_1026":{"entryPoint":1359,"id":1026,"parameterSlots":2,"returnSlots":0},"@cancelSubscription_958":{"entryPoint":4202,"id":958,"parameterSlots":2,"returnSlots":0},"@createSubscription_885":{"entryPoint":2853,"id":885,"parameterSlots":0,"returnSlots":1},"@fulfillRandomWords_747":{"entryPoint":1418,"id":747,"parameterSlots":2,"returnSlots":0},"@fundSubscription_792":{"entryPoint":3743,"id":792,"parameterSlots":2,"returnSlots":0},"@getRequestConfig_1013":{"entryPoint":628,"id":1013,"parameterSlots":0,"returnSlots":3},"@getSubscription_931":{"entryPoint":3326,"id":931,"parameterSlots":1,"returnSlots":4},"@removeConsumer_1039":{"entryPoint":2794,"id":1039,"parameterSlots":2,"returnSlots":0},"@requestRandomWords_857":{"entryPoint":819,"id":857,"parameterSlots":5,"returnSlots":1},"@requestSubscriptionOwnerTransfer_1052":{"entryPoint":724,"id":1052,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address":{"entryPoint":5213,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":5387,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16":{"entryPoint":5431,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5694,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":5475,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":5119,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint96":{"entryPoint":6170,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32":{"entryPoint":5496,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256t_address":{"entryPoint":5715,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint64":{"entryPoint":5779,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint64t_address":{"entryPoint":5234,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint64t_uint96":{"entryPoint":6191,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":5940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32":{"entryPoint":4878,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":6885,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":5925,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5866,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":5977,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":4915,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":6922,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7501,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":4863,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7137,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack":{"entryPoint":6360,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack":{"entryPoint":6671,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":4763,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":6870,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5629,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":4794,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":5824,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint256_fromStack":{"entryPoint":7757,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint96_fromStack":{"entryPoint":5322,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7186,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7620,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":7813,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6395,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6706,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5009,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5644,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7016,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6738,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":6547,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed":{"entryPoint":7516,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":5839,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed":{"entryPoint":5337,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6071,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7772,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":5909,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":4837,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6854,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":5881,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":4809,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6826,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":7064,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":5964,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":4902,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6909,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":5892,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":4820,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":6837,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7075,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6302,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7351,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint96":{"entryPoint":7647,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7261,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7209,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint96":{"entryPoint":7437,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5172,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7489,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4853,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":4749,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5140,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5619,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":4778,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":5076,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":5298,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint96_to_t_uint256":{"entryPoint":7723,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":7086,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":7713,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":6474,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint64":{"entryPoint":7571,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6427,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6779,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6255,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5071,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9":{"entryPoint":6319,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0":{"entryPoint":6630,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5190,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":5364,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":5408,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5671,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":5452,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":5096,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":6147,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22345:25","statements":[{"body":{"nodeType":"YulBlock","src":"51:45:25","statements":[{"nodeType":"YulAssignment","src":"61:29:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"76:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"83:6:25","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"72:3:25"},"nodeType":"YulFunctionCall","src":"72:18:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"61:7:25"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"43:7:25","type":""}],"src":"7:89:25"},{"body":{"nodeType":"YulBlock","src":"165:52:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"182:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"204:5:25"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"187:16:25"},"nodeType":"YulFunctionCall","src":"187:23:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"175:6:25"},"nodeType":"YulFunctionCall","src":"175:36:25"},"nodeType":"YulExpressionStatement","src":"175:36:25"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"153:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"160:3:25","type":""}],"src":"102:115:25"},{"body":{"nodeType":"YulBlock","src":"267:49:25","statements":[{"nodeType":"YulAssignment","src":"277:33:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"292:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"299:10:25","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"288:3:25"},"nodeType":"YulFunctionCall","src":"288:22:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"277:7:25"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"249:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"259:7:25","type":""}],"src":"223:93:25"},{"body":{"nodeType":"YulBlock","src":"385:52:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"402:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"424:5:25"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"407:16:25"},"nodeType":"YulFunctionCall","src":"407:23:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"395:6:25"},"nodeType":"YulFunctionCall","src":"395:36:25"},"nodeType":"YulExpressionStatement","src":"395:36:25"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"373:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"380:3:25","type":""}],"src":"322:115:25"},{"body":{"nodeType":"YulBlock","src":"517:40:25","statements":[{"nodeType":"YulAssignment","src":"528:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"544:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"538:5:25"},"nodeType":"YulFunctionCall","src":"538:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"528:6:25"}]}]},"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"500:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"510:6:25","type":""}],"src":"443:114:25"},{"body":{"nodeType":"YulBlock","src":"674:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"691:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"696:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"684:6:25"},"nodeType":"YulFunctionCall","src":"684:19:25"},"nodeType":"YulExpressionStatement","src":"684:19:25"},{"nodeType":"YulAssignment","src":"712:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"731:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"736:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"727:3:25"},"nodeType":"YulFunctionCall","src":"727:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"712:11:25"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"646:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"651:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"662:11:25","type":""}],"src":"563:184:25"},{"body":{"nodeType":"YulBlock","src":"825:60:25","statements":[{"nodeType":"YulAssignment","src":"835:11:25","value":{"name":"ptr","nodeType":"YulIdentifier","src":"843:3:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"835:4:25"}]},{"nodeType":"YulAssignment","src":"856:22:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"868:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"873:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"864:3:25"},"nodeType":"YulFunctionCall","src":"864:14:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"856:4:25"}]}]},"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"812:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"820:4:25","type":""}],"src":"753:132:25"},{"body":{"nodeType":"YulBlock","src":"936:32:25","statements":[{"nodeType":"YulAssignment","src":"946:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"957:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"946:7:25"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"918:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"928:7:25","type":""}],"src":"891:77:25"},{"body":{"nodeType":"YulBlock","src":"1029:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1046:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1069:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1051:17:25"},"nodeType":"YulFunctionCall","src":"1051:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1039:6:25"},"nodeType":"YulFunctionCall","src":"1039:37:25"},"nodeType":"YulExpressionStatement","src":"1039:37:25"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1017:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1024:3:25","type":""}],"src":"974:108:25"},{"body":{"nodeType":"YulBlock","src":"1168:99:25","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1212:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"1220:3:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"1178:33:25"},"nodeType":"YulFunctionCall","src":"1178:46:25"},"nodeType":"YulExpressionStatement","src":"1178:46:25"},{"nodeType":"YulAssignment","src":"1233:28:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1251:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1256:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1247:3:25"},"nodeType":"YulFunctionCall","src":"1247:14:25"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"1233:10:25"}]}]},"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"1141:6:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1149:3:25","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"1157:10:25","type":""}],"src":"1088:179:25"},{"body":{"nodeType":"YulBlock","src":"1348:38:25","statements":[{"nodeType":"YulAssignment","src":"1358:22:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1370:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1375:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1366:3:25"},"nodeType":"YulFunctionCall","src":"1366:14:25"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"1358:4:25"}]}]},"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1335:3:25","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"1343:4:25","type":""}],"src":"1273:113:25"},{"body":{"nodeType":"YulBlock","src":"1546:608:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1556:68:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1618:5:25"}],"functionName":{"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1570:47:25"},"nodeType":"YulFunctionCall","src":"1570:54:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1560:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1633:93:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1714:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"1719:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1640:73:25"},"nodeType":"YulFunctionCall","src":"1640:86:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1633:3:25"}]},{"nodeType":"YulVariableDeclaration","src":"1735:71:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1800:5:25"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1750:49:25"},"nodeType":"YulFunctionCall","src":"1750:56:25"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"1739:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1815:21:25","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"1829:7:25"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"1819:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1905:224:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1919:34:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1946:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1940:5:25"},"nodeType":"YulFunctionCall","src":"1940:13:25"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"1923:13:25","type":""}]},{"nodeType":"YulAssignment","src":"1966:70:25","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"2017:13:25"},{"name":"pos","nodeType":"YulIdentifier","src":"2032:3:25"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"1973:43:25"},"nodeType":"YulFunctionCall","src":"1973:63:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1966:3:25"}]},{"nodeType":"YulAssignment","src":"2049:70:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2112:6:25"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2059:52:25"},"nodeType":"YulFunctionCall","src":"2059:60:25"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2049:6:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1867:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"1870:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1864:2:25"},"nodeType":"YulFunctionCall","src":"1864:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1878:18:25","statements":[{"nodeType":"YulAssignment","src":"1880:14:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1889:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"1892:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1885:3:25"},"nodeType":"YulFunctionCall","src":"1885:9:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1880:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"1849:14:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1851:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1860:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1855:1:25","type":""}]}]},"src":"1845:284:25"},{"nodeType":"YulAssignment","src":"2138:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"2145:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2138:3:25"}]}]},"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1525:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1532:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1541:3:25","type":""}],"src":"1422:732:25"},{"body":{"nodeType":"YulBlock","src":"2360:385:25","statements":[{"nodeType":"YulAssignment","src":"2370:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2382:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2393:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2378:3:25"},"nodeType":"YulFunctionCall","src":"2378:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2370:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2448:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2461:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2472:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2457:3:25"},"nodeType":"YulFunctionCall","src":"2457:17:25"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"2406:41:25"},"nodeType":"YulFunctionCall","src":"2406:69:25"},"nodeType":"YulExpressionStatement","src":"2406:69:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2527:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2540:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2551:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2536:3:25"},"nodeType":"YulFunctionCall","src":"2536:18:25"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"2485:41:25"},"nodeType":"YulFunctionCall","src":"2485:70:25"},"nodeType":"YulExpressionStatement","src":"2485:70:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2576:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2587:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2572:3:25"},"nodeType":"YulFunctionCall","src":"2572:18:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2596:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2602:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2592:3:25"},"nodeType":"YulFunctionCall","src":"2592:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2565:6:25"},"nodeType":"YulFunctionCall","src":"2565:48:25"},"nodeType":"YulExpressionStatement","src":"2565:48:25"},{"nodeType":"YulAssignment","src":"2622:116:25","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2724:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"2733:4:25"}],"functionName":{"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2630:93:25"},"nodeType":"YulFunctionCall","src":"2630:108:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2622:4:25"}]}]},"name":"abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2316:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2328:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2336:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2344:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2355:4:25","type":""}],"src":"2160:585:25"},{"body":{"nodeType":"YulBlock","src":"2791:35:25","statements":[{"nodeType":"YulAssignment","src":"2801:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2817:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2811:5:25"},"nodeType":"YulFunctionCall","src":"2811:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2801:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2784:6:25","type":""}],"src":"2751:75:25"},{"body":{"nodeType":"YulBlock","src":"2921:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2938:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2941:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2931:6:25"},"nodeType":"YulFunctionCall","src":"2931:12:25"},"nodeType":"YulExpressionStatement","src":"2931:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2832:117:25"},{"body":{"nodeType":"YulBlock","src":"3044:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3061:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3064:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3054:6:25"},"nodeType":"YulFunctionCall","src":"3054:12:25"},"nodeType":"YulExpressionStatement","src":"3054:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2955:117:25"},{"body":{"nodeType":"YulBlock","src":"3122:57:25","statements":[{"nodeType":"YulAssignment","src":"3132:41:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3147:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"3154:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3143:3:25"},"nodeType":"YulFunctionCall","src":"3143:30:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3132:7:25"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3104:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3114:7:25","type":""}],"src":"3078:101:25"},{"body":{"nodeType":"YulBlock","src":"3227:78:25","statements":[{"body":{"nodeType":"YulBlock","src":"3283:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3292:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3295:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3285:6:25"},"nodeType":"YulFunctionCall","src":"3285:12:25"},"nodeType":"YulExpressionStatement","src":"3285:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3250:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3274:5:25"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"3257:16:25"},"nodeType":"YulFunctionCall","src":"3257:23:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3247:2:25"},"nodeType":"YulFunctionCall","src":"3247:34:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3240:6:25"},"nodeType":"YulFunctionCall","src":"3240:42:25"},"nodeType":"YulIf","src":"3237:62:25"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3220:5:25","type":""}],"src":"3185:120:25"},{"body":{"nodeType":"YulBlock","src":"3362:86:25","statements":[{"nodeType":"YulAssignment","src":"3372:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3394:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3381:12:25"},"nodeType":"YulFunctionCall","src":"3381:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3372:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3436:5:25"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"3410:25:25"},"nodeType":"YulFunctionCall","src":"3410:32:25"},"nodeType":"YulExpressionStatement","src":"3410:32:25"}]},"name":"abi_decode_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3340:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3348:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3356:5:25","type":""}],"src":"3311:137:25"},{"body":{"nodeType":"YulBlock","src":"3499:81:25","statements":[{"nodeType":"YulAssignment","src":"3509:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3524:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"3531:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3520:3:25"},"nodeType":"YulFunctionCall","src":"3520:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3509:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3481:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3491:7:25","type":""}],"src":"3454:126:25"},{"body":{"nodeType":"YulBlock","src":"3631:51:25","statements":[{"nodeType":"YulAssignment","src":"3641:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3670:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3652:17:25"},"nodeType":"YulFunctionCall","src":"3652:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3641:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3613:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3623:7:25","type":""}],"src":"3586:96:25"},{"body":{"nodeType":"YulBlock","src":"3731:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"3788:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3797:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3800:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3790:6:25"},"nodeType":"YulFunctionCall","src":"3790:12:25"},"nodeType":"YulExpressionStatement","src":"3790:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3754:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3779:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3761:17:25"},"nodeType":"YulFunctionCall","src":"3761:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3751:2:25"},"nodeType":"YulFunctionCall","src":"3751:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3744:6:25"},"nodeType":"YulFunctionCall","src":"3744:43:25"},"nodeType":"YulIf","src":"3741:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3724:5:25","type":""}],"src":"3688:122:25"},{"body":{"nodeType":"YulBlock","src":"3868:87:25","statements":[{"nodeType":"YulAssignment","src":"3878:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3900:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3887:12:25"},"nodeType":"YulFunctionCall","src":"3887:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3878:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3943:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3916:26:25"},"nodeType":"YulFunctionCall","src":"3916:33:25"},"nodeType":"YulExpressionStatement","src":"3916:33:25"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3846:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3854:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3862:5:25","type":""}],"src":"3816:139:25"},{"body":{"nodeType":"YulBlock","src":"4043:390:25","statements":[{"body":{"nodeType":"YulBlock","src":"4089:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4091:77:25"},"nodeType":"YulFunctionCall","src":"4091:79:25"},"nodeType":"YulExpressionStatement","src":"4091:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4064:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"4073:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4060:3:25"},"nodeType":"YulFunctionCall","src":"4060:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"4085:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4056:3:25"},"nodeType":"YulFunctionCall","src":"4056:32:25"},"nodeType":"YulIf","src":"4053:119:25"},{"nodeType":"YulBlock","src":"4182:116:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4197:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4211:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4201:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4226:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4260:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4271:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4256:3:25"},"nodeType":"YulFunctionCall","src":"4256:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4280:7:25"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"4236:19:25"},"nodeType":"YulFunctionCall","src":"4236:52:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4226:6:25"}]}]},{"nodeType":"YulBlock","src":"4308:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4323:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4337:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4327:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4353:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4388:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4399:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4384:3:25"},"nodeType":"YulFunctionCall","src":"4384:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4408:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4363:20:25"},"nodeType":"YulFunctionCall","src":"4363:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4353:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint64t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4005:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4016:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4028:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4036:6:25","type":""}],"src":"3961:472:25"},{"body":{"nodeType":"YulBlock","src":"4483:65:25","statements":[{"nodeType":"YulAssignment","src":"4493:49:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4508:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"4515:26:25","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4504:3:25"},"nodeType":"YulFunctionCall","src":"4504:38:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4493:7:25"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4465:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4475:7:25","type":""}],"src":"4439:109:25"},{"body":{"nodeType":"YulBlock","src":"4617:52:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4634:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4656:5:25"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"4639:16:25"},"nodeType":"YulFunctionCall","src":"4639:23:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4627:6:25"},"nodeType":"YulFunctionCall","src":"4627:36:25"},"nodeType":"YulExpressionStatement","src":"4627:36:25"}]},"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4605:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4612:3:25","type":""}],"src":"4554:115:25"},{"body":{"nodeType":"YulBlock","src":"4771:122:25","statements":[{"nodeType":"YulAssignment","src":"4781:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4793:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4804:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4789:3:25"},"nodeType":"YulFunctionCall","src":"4789:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4781:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4859:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4872:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4883:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4868:3:25"},"nodeType":"YulFunctionCall","src":"4868:17:25"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"4817:41:25"},"nodeType":"YulFunctionCall","src":"4817:69:25"},"nodeType":"YulExpressionStatement","src":"4817:69:25"}]},"name":"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4743:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4755:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4766:4:25","type":""}],"src":"4675:218:25"},{"body":{"nodeType":"YulBlock","src":"4942:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"4999:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5008:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5011:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5001:6:25"},"nodeType":"YulFunctionCall","src":"5001:12:25"},"nodeType":"YulExpressionStatement","src":"5001:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4965:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4990:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"4972:17:25"},"nodeType":"YulFunctionCall","src":"4972:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4962:2:25"},"nodeType":"YulFunctionCall","src":"4962:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4955:6:25"},"nodeType":"YulFunctionCall","src":"4955:43:25"},"nodeType":"YulIf","src":"4952:63:25"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4935:5:25","type":""}],"src":"4899:122:25"},{"body":{"nodeType":"YulBlock","src":"5079:87:25","statements":[{"nodeType":"YulAssignment","src":"5089:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5111:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5098:12:25"},"nodeType":"YulFunctionCall","src":"5098:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5089:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5154:5:25"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"5127:26:25"},"nodeType":"YulFunctionCall","src":"5127:33:25"},"nodeType":"YulExpressionStatement","src":"5127:33:25"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5057:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"5065:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5073:5:25","type":""}],"src":"5027:139:25"},{"body":{"nodeType":"YulBlock","src":"5214:78:25","statements":[{"body":{"nodeType":"YulBlock","src":"5270:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5279:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5282:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5272:6:25"},"nodeType":"YulFunctionCall","src":"5272:12:25"},"nodeType":"YulExpressionStatement","src":"5272:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5237:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5261:5:25"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"5244:16:25"},"nodeType":"YulFunctionCall","src":"5244:23:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5234:2:25"},"nodeType":"YulFunctionCall","src":"5234:34:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5227:6:25"},"nodeType":"YulFunctionCall","src":"5227:42:25"},"nodeType":"YulIf","src":"5224:62:25"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5207:5:25","type":""}],"src":"5172:120:25"},{"body":{"nodeType":"YulBlock","src":"5349:86:25","statements":[{"nodeType":"YulAssignment","src":"5359:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5381:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5368:12:25"},"nodeType":"YulFunctionCall","src":"5368:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5359:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5423:5:25"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"5397:25:25"},"nodeType":"YulFunctionCall","src":"5397:32:25"},"nodeType":"YulExpressionStatement","src":"5397:32:25"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5327:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"5335:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5343:5:25","type":""}],"src":"5298:137:25"},{"body":{"nodeType":"YulBlock","src":"5483:78:25","statements":[{"body":{"nodeType":"YulBlock","src":"5539:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5548:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5551:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5541:6:25"},"nodeType":"YulFunctionCall","src":"5541:12:25"},"nodeType":"YulExpressionStatement","src":"5541:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5506:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5530:5:25"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"5513:16:25"},"nodeType":"YulFunctionCall","src":"5513:23:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5503:2:25"},"nodeType":"YulFunctionCall","src":"5503:34:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5496:6:25"},"nodeType":"YulFunctionCall","src":"5496:42:25"},"nodeType":"YulIf","src":"5493:62:25"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5476:5:25","type":""}],"src":"5441:120:25"},{"body":{"nodeType":"YulBlock","src":"5618:86:25","statements":[{"nodeType":"YulAssignment","src":"5628:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5650:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5637:12:25"},"nodeType":"YulFunctionCall","src":"5637:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5628:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5692:5:25"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"5666:25:25"},"nodeType":"YulFunctionCall","src":"5666:32:25"},"nodeType":"YulExpressionStatement","src":"5666:32:25"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5596:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"5604:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5612:5:25","type":""}],"src":"5567:137:25"},{"body":{"nodeType":"YulBlock","src":"5840:773:25","statements":[{"body":{"nodeType":"YulBlock","src":"5887:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5889:77:25"},"nodeType":"YulFunctionCall","src":"5889:79:25"},"nodeType":"YulExpressionStatement","src":"5889:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5861:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5870:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5857:3:25"},"nodeType":"YulFunctionCall","src":"5857:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"5882:3:25","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5853:3:25"},"nodeType":"YulFunctionCall","src":"5853:33:25"},"nodeType":"YulIf","src":"5850:120:25"},{"nodeType":"YulBlock","src":"5980:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5995:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6009:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5999:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6024:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6059:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6070:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6055:3:25"},"nodeType":"YulFunctionCall","src":"6055:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6079:7:25"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6034:20:25"},"nodeType":"YulFunctionCall","src":"6034:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6024:6:25"}]}]},{"nodeType":"YulBlock","src":"6107:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6122:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6136:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6126:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6152:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6186:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6197:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6182:3:25"},"nodeType":"YulFunctionCall","src":"6182:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6206:7:25"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"6162:19:25"},"nodeType":"YulFunctionCall","src":"6162:52:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6152:6:25"}]}]},{"nodeType":"YulBlock","src":"6234:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6249:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6263:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6253:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6279:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6313:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6324:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6309:3:25"},"nodeType":"YulFunctionCall","src":"6309:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6333:7:25"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"6289:19:25"},"nodeType":"YulFunctionCall","src":"6289:52:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6279:6:25"}]}]},{"nodeType":"YulBlock","src":"6361:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6376:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6390:2:25","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6380:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6406:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6440:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6451:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6436:3:25"},"nodeType":"YulFunctionCall","src":"6436:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6460:7:25"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"6416:19:25"},"nodeType":"YulFunctionCall","src":"6416:52:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6406:6:25"}]}]},{"nodeType":"YulBlock","src":"6488:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6503:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6517:3:25","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6507:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6534:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6568:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6579:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6564:3:25"},"nodeType":"YulFunctionCall","src":"6564:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6588:7:25"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"6544:19:25"},"nodeType":"YulFunctionCall","src":"6544:52:25"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6534:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5778:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5789:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5801:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5809:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5817:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5825:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5833:6:25","type":""}],"src":"5710:903:25"},{"body":{"nodeType":"YulBlock","src":"6664:32:25","statements":[{"nodeType":"YulAssignment","src":"6674:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"6685:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6674:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6646:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6656:7:25","type":""}],"src":"6619:77:25"},{"body":{"nodeType":"YulBlock","src":"6767:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6784:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6807:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6789:17:25"},"nodeType":"YulFunctionCall","src":"6789:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6777:6:25"},"nodeType":"YulFunctionCall","src":"6777:37:25"},"nodeType":"YulExpressionStatement","src":"6777:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6755:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6762:3:25","type":""}],"src":"6702:118:25"},{"body":{"nodeType":"YulBlock","src":"6924:124:25","statements":[{"nodeType":"YulAssignment","src":"6934:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6946:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6957:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6942:3:25"},"nodeType":"YulFunctionCall","src":"6942:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6934:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7014:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7027:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7038:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7023:3:25"},"nodeType":"YulFunctionCall","src":"7023:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6970:43:25"},"nodeType":"YulFunctionCall","src":"6970:71:25"},"nodeType":"YulExpressionStatement","src":"6970:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6896:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6908:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6919:4:25","type":""}],"src":"6826:222:25"},{"body":{"nodeType":"YulBlock","src":"7097:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"7154:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7163:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7166:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7156:6:25"},"nodeType":"YulFunctionCall","src":"7156:12:25"},"nodeType":"YulExpressionStatement","src":"7156:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7120:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7145:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7127:17:25"},"nodeType":"YulFunctionCall","src":"7127:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7117:2:25"},"nodeType":"YulFunctionCall","src":"7117:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7110:6:25"},"nodeType":"YulFunctionCall","src":"7110:43:25"},"nodeType":"YulIf","src":"7107:63:25"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7090:5:25","type":""}],"src":"7054:122:25"},{"body":{"nodeType":"YulBlock","src":"7234:87:25","statements":[{"nodeType":"YulAssignment","src":"7244:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7266:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7253:12:25"},"nodeType":"YulFunctionCall","src":"7253:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7244:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7309:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"7282:26:25"},"nodeType":"YulFunctionCall","src":"7282:33:25"},"nodeType":"YulExpressionStatement","src":"7282:33:25"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7212:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"7220:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7228:5:25","type":""}],"src":"7182:139:25"},{"body":{"nodeType":"YulBlock","src":"7410:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"7456:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7458:77:25"},"nodeType":"YulFunctionCall","src":"7458:79:25"},"nodeType":"YulExpressionStatement","src":"7458:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7431:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"7440:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7427:3:25"},"nodeType":"YulFunctionCall","src":"7427:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"7452:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7423:3:25"},"nodeType":"YulFunctionCall","src":"7423:32:25"},"nodeType":"YulIf","src":"7420:119:25"},{"nodeType":"YulBlock","src":"7549:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7564:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7578:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7568:6:25","type":""}]},{"nodeType":"YulAssignment","src":"7593:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7628:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"7639:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7624:3:25"},"nodeType":"YulFunctionCall","src":"7624:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7648:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7603:20:25"},"nodeType":"YulFunctionCall","src":"7603:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7593:6:25"}]}]},{"nodeType":"YulBlock","src":"7676:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7691:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7705:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7695:6:25","type":""}]},{"nodeType":"YulAssignment","src":"7721:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7756:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"7767:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7752:3:25"},"nodeType":"YulFunctionCall","src":"7752:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7776:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7731:20:25"},"nodeType":"YulFunctionCall","src":"7731:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7721:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7372:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7383:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7395:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7403:6:25","type":""}],"src":"7327:474:25"},{"body":{"nodeType":"YulBlock","src":"7872:262:25","statements":[{"body":{"nodeType":"YulBlock","src":"7918:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7920:77:25"},"nodeType":"YulFunctionCall","src":"7920:79:25"},"nodeType":"YulExpressionStatement","src":"7920:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7893:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"7902:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7889:3:25"},"nodeType":"YulFunctionCall","src":"7889:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"7914:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7885:3:25"},"nodeType":"YulFunctionCall","src":"7885:32:25"},"nodeType":"YulIf","src":"7882:119:25"},{"nodeType":"YulBlock","src":"8011:116:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8026:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"8040:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8030:6:25","type":""}]},{"nodeType":"YulAssignment","src":"8055:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8089:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8100:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8085:3:25"},"nodeType":"YulFunctionCall","src":"8085:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8109:7:25"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"8065:19:25"},"nodeType":"YulFunctionCall","src":"8065:52:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8055:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7842:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7853:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7865:6:25","type":""}],"src":"7807:327:25"},{"body":{"nodeType":"YulBlock","src":"8203:52:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8220:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8242:5:25"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"8225:16:25"},"nodeType":"YulFunctionCall","src":"8225:23:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8213:6:25"},"nodeType":"YulFunctionCall","src":"8213:36:25"},"nodeType":"YulExpressionStatement","src":"8213:36:25"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8191:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8198:3:25","type":""}],"src":"8140:115:25"},{"body":{"nodeType":"YulBlock","src":"8357:122:25","statements":[{"nodeType":"YulAssignment","src":"8367:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8379:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8390:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8375:3:25"},"nodeType":"YulFunctionCall","src":"8375:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8367:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8445:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8458:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8469:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8454:3:25"},"nodeType":"YulFunctionCall","src":"8454:17:25"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"8403:41:25"},"nodeType":"YulFunctionCall","src":"8403:69:25"},"nodeType":"YulExpressionStatement","src":"8403:69:25"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8329:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8341:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8352:4:25","type":""}],"src":"8261:218:25"},{"body":{"nodeType":"YulBlock","src":"8550:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8567:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8590:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8572:17:25"},"nodeType":"YulFunctionCall","src":"8572:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8560:6:25"},"nodeType":"YulFunctionCall","src":"8560:37:25"},"nodeType":"YulExpressionStatement","src":"8560:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8538:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8545:3:25","type":""}],"src":"8485:118:25"},{"body":{"nodeType":"YulBlock","src":"8683:40:25","statements":[{"nodeType":"YulAssignment","src":"8694:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8710:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8704:5:25"},"nodeType":"YulFunctionCall","src":"8704:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8694:6:25"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8666:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8676:6:25","type":""}],"src":"8609:114:25"},{"body":{"nodeType":"YulBlock","src":"8840:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8857:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"8862:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8850:6:25"},"nodeType":"YulFunctionCall","src":"8850:19:25"},"nodeType":"YulExpressionStatement","src":"8850:19:25"},{"nodeType":"YulAssignment","src":"8878:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8897:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"8902:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8893:3:25"},"nodeType":"YulFunctionCall","src":"8893:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8878:11:25"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8812:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"8817:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8828:11:25","type":""}],"src":"8729:184:25"},{"body":{"nodeType":"YulBlock","src":"8991:60:25","statements":[{"nodeType":"YulAssignment","src":"9001:11:25","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9009:3:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9001:4:25"}]},{"nodeType":"YulAssignment","src":"9022:22:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9034:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"9039:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9030:3:25"},"nodeType":"YulFunctionCall","src":"9030:14:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9022:4:25"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8978:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8986:4:25","type":""}],"src":"8919:132:25"},{"body":{"nodeType":"YulBlock","src":"9112:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9129:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9152:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9134:17:25"},"nodeType":"YulFunctionCall","src":"9134:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9122:6:25"},"nodeType":"YulFunctionCall","src":"9122:37:25"},"nodeType":"YulExpressionStatement","src":"9122:37:25"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9100:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9107:3:25","type":""}],"src":"9057:108:25"},{"body":{"nodeType":"YulBlock","src":"9251:99:25","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9295:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"9303:3:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"9261:33:25"},"nodeType":"YulFunctionCall","src":"9261:46:25"},"nodeType":"YulExpressionStatement","src":"9261:46:25"},{"nodeType":"YulAssignment","src":"9316:28:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9334:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"9339:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9330:3:25"},"nodeType":"YulFunctionCall","src":"9330:14:25"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"9316:10:25"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"9224:6:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9232:3:25","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"9240:10:25","type":""}],"src":"9171:179:25"},{"body":{"nodeType":"YulBlock","src":"9431:38:25","statements":[{"nodeType":"YulAssignment","src":"9441:22:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9453:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"9458:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9449:3:25"},"nodeType":"YulFunctionCall","src":"9449:14:25"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"9441:4:25"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9418:3:25","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"9426:4:25","type":""}],"src":"9356:113:25"},{"body":{"nodeType":"YulBlock","src":"9629:608:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9639:68:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9701:5:25"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9653:47:25"},"nodeType":"YulFunctionCall","src":"9653:54:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9643:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9716:93:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9797:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"9802:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9723:73:25"},"nodeType":"YulFunctionCall","src":"9723:86:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9716:3:25"}]},{"nodeType":"YulVariableDeclaration","src":"9818:71:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9883:5:25"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9833:49:25"},"nodeType":"YulFunctionCall","src":"9833:56:25"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"9822:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9898:21:25","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"9912:7:25"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"9902:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"9988:224:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10002:34:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10029:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10023:5:25"},"nodeType":"YulFunctionCall","src":"10023:13:25"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"10006:13:25","type":""}]},{"nodeType":"YulAssignment","src":"10049:70:25","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"10100:13:25"},{"name":"pos","nodeType":"YulIdentifier","src":"10115:3:25"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"10056:43:25"},"nodeType":"YulFunctionCall","src":"10056:63:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10049:3:25"}]},{"nodeType":"YulAssignment","src":"10132:70:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10195:6:25"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10142:52:25"},"nodeType":"YulFunctionCall","src":"10142:60:25"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10132:6:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9950:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"9953:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9947:2:25"},"nodeType":"YulFunctionCall","src":"9947:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9961:18:25","statements":[{"nodeType":"YulAssignment","src":"9963:14:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9972:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"9975:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9968:3:25"},"nodeType":"YulFunctionCall","src":"9968:9:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9963:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"9932:14:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9934:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9943:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9938:1:25","type":""}]}]},"src":"9928:284:25"},{"nodeType":"YulAssignment","src":"10221:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"10228:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10221:3:25"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9608:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9615:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9624:3:25","type":""}],"src":"9505:732:25"},{"body":{"nodeType":"YulBlock","src":"10471:468:25","statements":[{"nodeType":"YulAssignment","src":"10481:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10493:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10504:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10489:3:25"},"nodeType":"YulFunctionCall","src":"10489:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10481:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10560:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10573:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10584:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10569:3:25"},"nodeType":"YulFunctionCall","src":"10569:17:25"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"10518:41:25"},"nodeType":"YulFunctionCall","src":"10518:69:25"},"nodeType":"YulExpressionStatement","src":"10518:69:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10639:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10652:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10663:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10648:3:25"},"nodeType":"YulFunctionCall","src":"10648:18:25"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"10597:41:25"},"nodeType":"YulFunctionCall","src":"10597:70:25"},"nodeType":"YulExpressionStatement","src":"10597:70:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10721:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10734:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10745:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10730:3:25"},"nodeType":"YulFunctionCall","src":"10730:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10677:43:25"},"nodeType":"YulFunctionCall","src":"10677:72:25"},"nodeType":"YulExpressionStatement","src":"10677:72:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10770:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10781:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10766:3:25"},"nodeType":"YulFunctionCall","src":"10766:18:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10790:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"10796:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10786:3:25"},"nodeType":"YulFunctionCall","src":"10786:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10759:6:25"},"nodeType":"YulFunctionCall","src":"10759:48:25"},"nodeType":"YulExpressionStatement","src":"10759:48:25"},{"nodeType":"YulAssignment","src":"10816:116:25","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10918:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"10927:4:25"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10824:93:25"},"nodeType":"YulFunctionCall","src":"10824:108:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10816:4:25"}]}]},"name":"abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10419:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10431:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10439:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10447:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10455:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10466:4:25","type":""}],"src":"10243:696:25"},{"body":{"nodeType":"YulBlock","src":"10987:78:25","statements":[{"body":{"nodeType":"YulBlock","src":"11043:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11052:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11055:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11045:6:25"},"nodeType":"YulFunctionCall","src":"11045:12:25"},"nodeType":"YulExpressionStatement","src":"11045:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11010:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11034:5:25"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"11017:16:25"},"nodeType":"YulFunctionCall","src":"11017:23:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11007:2:25"},"nodeType":"YulFunctionCall","src":"11007:34:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11000:6:25"},"nodeType":"YulFunctionCall","src":"11000:42:25"},"nodeType":"YulIf","src":"10997:62:25"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10980:5:25","type":""}],"src":"10945:120:25"},{"body":{"nodeType":"YulBlock","src":"11122:86:25","statements":[{"nodeType":"YulAssignment","src":"11132:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11154:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11141:12:25"},"nodeType":"YulFunctionCall","src":"11141:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11132:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11196:5:25"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"11170:25:25"},"nodeType":"YulFunctionCall","src":"11170:32:25"},"nodeType":"YulExpressionStatement","src":"11170:32:25"}]},"name":"abi_decode_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11100:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"11108:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11116:5:25","type":""}],"src":"11071:137:25"},{"body":{"nodeType":"YulBlock","src":"11295:389:25","statements":[{"body":{"nodeType":"YulBlock","src":"11341:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11343:77:25"},"nodeType":"YulFunctionCall","src":"11343:79:25"},"nodeType":"YulExpressionStatement","src":"11343:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11316:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"11325:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11312:3:25"},"nodeType":"YulFunctionCall","src":"11312:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"11337:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11308:3:25"},"nodeType":"YulFunctionCall","src":"11308:32:25"},"nodeType":"YulIf","src":"11305:119:25"},{"nodeType":"YulBlock","src":"11434:116:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11449:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11463:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11453:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11478:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11512:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11523:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11508:3:25"},"nodeType":"YulFunctionCall","src":"11508:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11532:7:25"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"11488:19:25"},"nodeType":"YulFunctionCall","src":"11488:52:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11478:6:25"}]}]},{"nodeType":"YulBlock","src":"11560:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11575:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11589:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11579:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11605:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11639:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11650:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11635:3:25"},"nodeType":"YulFunctionCall","src":"11635:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11659:7:25"}],"functionName":{"name":"abi_decode_t_uint96","nodeType":"YulIdentifier","src":"11615:19:25"},"nodeType":"YulFunctionCall","src":"11615:52:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11605:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint64t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11257:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11268:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11280:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11288:6:25","type":""}],"src":"11214:470:25"},{"body":{"nodeType":"YulBlock","src":"11718:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11735:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11738:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11728:6:25"},"nodeType":"YulFunctionCall","src":"11728:88:25"},"nodeType":"YulExpressionStatement","src":"11728:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11832:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11835:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11825:6:25"},"nodeType":"YulFunctionCall","src":"11825:15:25"},"nodeType":"YulExpressionStatement","src":"11825:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11856:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11859:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11849:6:25"},"nodeType":"YulFunctionCall","src":"11849:15:25"},"nodeType":"YulExpressionStatement","src":"11849:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"11690:180:25"},{"body":{"nodeType":"YulBlock","src":"11972:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11989:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"11994:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11982:6:25"},"nodeType":"YulFunctionCall","src":"11982:19:25"},"nodeType":"YulExpressionStatement","src":"11982:19:25"},{"nodeType":"YulAssignment","src":"12010:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12029:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12034:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12025:3:25"},"nodeType":"YulFunctionCall","src":"12025:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12010:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11944:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"11949:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11960:11:25","type":""}],"src":"11876:169:25"},{"body":{"nodeType":"YulBlock","src":"12157:59:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12179:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12187:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12175:3:25"},"nodeType":"YulFunctionCall","src":"12175:14:25"},{"hexValue":"6e6f7420696d706c656d656e746564","kind":"string","nodeType":"YulLiteral","src":"12191:17:25","type":"","value":"not implemented"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12168:6:25"},"nodeType":"YulFunctionCall","src":"12168:41:25"},"nodeType":"YulExpressionStatement","src":"12168:41:25"}]},"name":"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12149:6:25","type":""}],"src":"12051:165:25"},{"body":{"nodeType":"YulBlock","src":"12368:220:25","statements":[{"nodeType":"YulAssignment","src":"12378:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12444:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12449:2:25","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12385:58:25"},"nodeType":"YulFunctionCall","src":"12385:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12378:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12550:3:25"}],"functionName":{"name":"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","nodeType":"YulIdentifier","src":"12461:88:25"},"nodeType":"YulFunctionCall","src":"12461:93:25"},"nodeType":"YulExpressionStatement","src":"12461:93:25"},{"nodeType":"YulAssignment","src":"12563:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12574:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12579:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12570:3:25"},"nodeType":"YulFunctionCall","src":"12570:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12563:3:25"}]}]},"name":"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12356:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12364:3:25","type":""}],"src":"12222:366:25"},{"body":{"nodeType":"YulBlock","src":"12765:248:25","statements":[{"nodeType":"YulAssignment","src":"12775:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12787:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12798:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12783:3:25"},"nodeType":"YulFunctionCall","src":"12783:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12775:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12822:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12833:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12818:3:25"},"nodeType":"YulFunctionCall","src":"12818:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12841:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"12847:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12837:3:25"},"nodeType":"YulFunctionCall","src":"12837:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12811:6:25"},"nodeType":"YulFunctionCall","src":"12811:47:25"},"nodeType":"YulExpressionStatement","src":"12811:47:25"},{"nodeType":"YulAssignment","src":"12867:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13001:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12875:124:25"},"nodeType":"YulFunctionCall","src":"12875:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12867:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12745:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12760:4:25","type":""}],"src":"12594:419:25"},{"body":{"nodeType":"YulBlock","src":"13047:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13064:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13067:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13057:6:25"},"nodeType":"YulFunctionCall","src":"13057:88:25"},"nodeType":"YulExpressionStatement","src":"13057:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13161:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13164:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13154:6:25"},"nodeType":"YulFunctionCall","src":"13154:15:25"},"nodeType":"YulExpressionStatement","src":"13154:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13185:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13188:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13178:6:25"},"nodeType":"YulFunctionCall","src":"13178:15:25"},"nodeType":"YulExpressionStatement","src":"13178:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"13019:180:25"},{"body":{"nodeType":"YulBlock","src":"13248:190:25","statements":[{"nodeType":"YulAssignment","src":"13258:33:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13285:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13267:17:25"},"nodeType":"YulFunctionCall","src":"13267:24:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13258:5:25"}]},{"body":{"nodeType":"YulBlock","src":"13381:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13383:16:25"},"nodeType":"YulFunctionCall","src":"13383:18:25"},"nodeType":"YulExpressionStatement","src":"13383:18:25"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13306:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"13313:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13303:2:25"},"nodeType":"YulFunctionCall","src":"13303:77:25"},"nodeType":"YulIf","src":"13300:103:25"},{"nodeType":"YulAssignment","src":"13412:20:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13423:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"13430:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13419:3:25"},"nodeType":"YulFunctionCall","src":"13419:13:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13412:3:25"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13234:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13244:3:25","type":""}],"src":"13205:233:25"},{"body":{"nodeType":"YulBlock","src":"13648:448:25","statements":[{"nodeType":"YulAssignment","src":"13658:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13670:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13681:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13666:3:25"},"nodeType":"YulFunctionCall","src":"13666:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13658:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13739:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13752:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13763:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13748:3:25"},"nodeType":"YulFunctionCall","src":"13748:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13695:43:25"},"nodeType":"YulFunctionCall","src":"13695:71:25"},"nodeType":"YulExpressionStatement","src":"13695:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13820:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13833:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13844:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13829:3:25"},"nodeType":"YulFunctionCall","src":"13829:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13776:43:25"},"nodeType":"YulFunctionCall","src":"13776:72:25"},"nodeType":"YulExpressionStatement","src":"13776:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13900:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13913:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13924:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13909:3:25"},"nodeType":"YulFunctionCall","src":"13909:18:25"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"13858:41:25"},"nodeType":"YulFunctionCall","src":"13858:70:25"},"nodeType":"YulExpressionStatement","src":"13858:70:25"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13980:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13993:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14004:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13989:3:25"},"nodeType":"YulFunctionCall","src":"13989:18:25"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"13938:41:25"},"nodeType":"YulFunctionCall","src":"13938:70:25"},"nodeType":"YulExpressionStatement","src":"13938:70:25"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"14060:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14073:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14084:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14069:3:25"},"nodeType":"YulFunctionCall","src":"14069:19:25"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"14018:41:25"},"nodeType":"YulFunctionCall","src":"14018:71:25"},"nodeType":"YulExpressionStatement","src":"14018:71:25"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13588:9:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13600:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13608:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13616:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13624:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13632:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13643:4:25","type":""}],"src":"13444:652:25"},{"body":{"nodeType":"YulBlock","src":"14208:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14230:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"14238:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14226:3:25"},"nodeType":"YulFunctionCall","src":"14226:14:25"},{"hexValue":"6e6f6e6578697374656e742072657175657374","kind":"string","nodeType":"YulLiteral","src":"14242:21:25","type":"","value":"nonexistent request"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14219:6:25"},"nodeType":"YulFunctionCall","src":"14219:45:25"},"nodeType":"YulExpressionStatement","src":"14219:45:25"}]},"name":"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14200:6:25","type":""}],"src":"14102:169:25"},{"body":{"nodeType":"YulBlock","src":"14423:220:25","statements":[{"nodeType":"YulAssignment","src":"14433:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14499:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"14504:2:25","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14440:58:25"},"nodeType":"YulFunctionCall","src":"14440:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14433:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14605:3:25"}],"functionName":{"name":"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","nodeType":"YulIdentifier","src":"14516:88:25"},"nodeType":"YulFunctionCall","src":"14516:93:25"},"nodeType":"YulExpressionStatement","src":"14516:93:25"},{"nodeType":"YulAssignment","src":"14618:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14629:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"14634:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14625:3:25"},"nodeType":"YulFunctionCall","src":"14625:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14618:3:25"}]}]},"name":"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14411:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14419:3:25","type":""}],"src":"14277:366:25"},{"body":{"nodeType":"YulBlock","src":"14820:248:25","statements":[{"nodeType":"YulAssignment","src":"14830:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14842:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14853:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14838:3:25"},"nodeType":"YulFunctionCall","src":"14838:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14830:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14877:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14888:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14873:3:25"},"nodeType":"YulFunctionCall","src":"14873:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14896:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"14902:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14892:3:25"},"nodeType":"YulFunctionCall","src":"14892:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14866:6:25"},"nodeType":"YulFunctionCall","src":"14866:47:25"},"nodeType":"YulExpressionStatement","src":"14866:47:25"},{"nodeType":"YulAssignment","src":"14922:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15056:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14930:124:25"},"nodeType":"YulFunctionCall","src":"14930:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14922:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14800:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14815:4:25","type":""}],"src":"14649:419:25"},{"body":{"nodeType":"YulBlock","src":"15200:206:25","statements":[{"nodeType":"YulAssignment","src":"15210:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15222:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15233:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15218:3:25"},"nodeType":"YulFunctionCall","src":"15218:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15210:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15290:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15303:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15314:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15299:3:25"},"nodeType":"YulFunctionCall","src":"15299:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15246:43:25"},"nodeType":"YulFunctionCall","src":"15246:71:25"},"nodeType":"YulExpressionStatement","src":"15246:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15371:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15384:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15395:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15380:3:25"},"nodeType":"YulFunctionCall","src":"15380:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15327:43:25"},"nodeType":"YulFunctionCall","src":"15327:72:25"},"nodeType":"YulExpressionStatement","src":"15327:72:25"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15164:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15176:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15184:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15195:4:25","type":""}],"src":"15074:332:25"},{"body":{"nodeType":"YulBlock","src":"15440:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15457:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15460:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15450:6:25"},"nodeType":"YulFunctionCall","src":"15450:88:25"},"nodeType":"YulExpressionStatement","src":"15450:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15554:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15557:4:25","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15547:6:25"},"nodeType":"YulFunctionCall","src":"15547:15:25"},"nodeType":"YulExpressionStatement","src":"15547:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15578:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15581:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15571:6:25"},"nodeType":"YulFunctionCall","src":"15571:15:25"},"nodeType":"YulExpressionStatement","src":"15571:15:25"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"15412:180:25"},{"body":{"nodeType":"YulBlock","src":"15672:40:25","statements":[{"nodeType":"YulAssignment","src":"15683:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15699:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15693:5:25"},"nodeType":"YulFunctionCall","src":"15693:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15683:6:25"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15655:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15665:6:25","type":""}],"src":"15598:114:25"},{"body":{"nodeType":"YulBlock","src":"15829:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15846:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"15851:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15839:6:25"},"nodeType":"YulFunctionCall","src":"15839:19:25"},"nodeType":"YulExpressionStatement","src":"15839:19:25"},{"nodeType":"YulAssignment","src":"15867:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15886:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15891:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15882:3:25"},"nodeType":"YulFunctionCall","src":"15882:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15867:11:25"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15801:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"15806:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15817:11:25","type":""}],"src":"15718:184:25"},{"body":{"nodeType":"YulBlock","src":"15980:60:25","statements":[{"nodeType":"YulAssignment","src":"15990:11:25","value":{"name":"ptr","nodeType":"YulIdentifier","src":"15998:3:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15990:4:25"}]},{"nodeType":"YulAssignment","src":"16011:22:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16023:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"16028:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16019:3:25"},"nodeType":"YulFunctionCall","src":"16019:14:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16011:4:25"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15967:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"15975:4:25","type":""}],"src":"15908:132:25"},{"body":{"nodeType":"YulBlock","src":"16101:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16118:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16141:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16123:17:25"},"nodeType":"YulFunctionCall","src":"16123:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16111:6:25"},"nodeType":"YulFunctionCall","src":"16111:37:25"},"nodeType":"YulExpressionStatement","src":"16111:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16089:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16096:3:25","type":""}],"src":"16046:108:25"},{"body":{"nodeType":"YulBlock","src":"16240:99:25","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16284:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"16292:3:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16250:33:25"},"nodeType":"YulFunctionCall","src":"16250:46:25"},"nodeType":"YulExpressionStatement","src":"16250:46:25"},{"nodeType":"YulAssignment","src":"16305:28:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16323:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"16328:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16319:3:25"},"nodeType":"YulFunctionCall","src":"16319:14:25"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"16305:10:25"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"16213:6:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16221:3:25","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"16229:10:25","type":""}],"src":"16160:179:25"},{"body":{"nodeType":"YulBlock","src":"16420:38:25","statements":[{"nodeType":"YulAssignment","src":"16430:22:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16442:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"16447:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16438:3:25"},"nodeType":"YulFunctionCall","src":"16438:14:25"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"16430:4:25"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16407:3:25","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"16415:4:25","type":""}],"src":"16345:113:25"},{"body":{"nodeType":"YulBlock","src":"16618:608:25","statements":[{"nodeType":"YulVariableDeclaration","src":"16628:68:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16690:5:25"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16642:47:25"},"nodeType":"YulFunctionCall","src":"16642:54:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16632:6:25","type":""}]},{"nodeType":"YulAssignment","src":"16705:93:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16786:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"16791:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16712:73:25"},"nodeType":"YulFunctionCall","src":"16712:86:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16705:3:25"}]},{"nodeType":"YulVariableDeclaration","src":"16807:71:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16872:5:25"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16822:49:25"},"nodeType":"YulFunctionCall","src":"16822:56:25"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"16811:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16887:21:25","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"16901:7:25"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"16891:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"16977:224:25","statements":[{"nodeType":"YulVariableDeclaration","src":"16991:34:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17018:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17012:5:25"},"nodeType":"YulFunctionCall","src":"17012:13:25"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"16995:13:25","type":""}]},{"nodeType":"YulAssignment","src":"17038:70:25","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"17089:13:25"},{"name":"pos","nodeType":"YulIdentifier","src":"17104:3:25"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"17045:43:25"},"nodeType":"YulFunctionCall","src":"17045:63:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17038:3:25"}]},{"nodeType":"YulAssignment","src":"17121:70:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17184:6:25"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"17131:52:25"},"nodeType":"YulFunctionCall","src":"17131:60:25"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17121:6:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16939:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"16942:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16936:2:25"},"nodeType":"YulFunctionCall","src":"16936:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16950:18:25","statements":[{"nodeType":"YulAssignment","src":"16952:14:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16961:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"16964:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16957:3:25"},"nodeType":"YulFunctionCall","src":"16957:9:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"16952:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"16921:14:25","statements":[{"nodeType":"YulVariableDeclaration","src":"16923:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"16932:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"16927:1:25","type":""}]}]},"src":"16917:284:25"},{"nodeType":"YulAssignment","src":"17210:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"17217:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17210:3:25"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16597:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16604:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16613:3:25","type":""}],"src":"16494:732:25"},{"body":{"nodeType":"YulBlock","src":"17408:307:25","statements":[{"nodeType":"YulAssignment","src":"17418:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17430:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"17441:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17426:3:25"},"nodeType":"YulFunctionCall","src":"17426:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17418:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17498:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17511:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"17522:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17507:3:25"},"nodeType":"YulFunctionCall","src":"17507:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17454:43:25"},"nodeType":"YulFunctionCall","src":"17454:71:25"},"nodeType":"YulExpressionStatement","src":"17454:71:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17546:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"17557:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17542:3:25"},"nodeType":"YulFunctionCall","src":"17542:18:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17566:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"17572:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17562:3:25"},"nodeType":"YulFunctionCall","src":"17562:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17535:6:25"},"nodeType":"YulFunctionCall","src":"17535:48:25"},"nodeType":"YulExpressionStatement","src":"17535:48:25"},{"nodeType":"YulAssignment","src":"17592:116:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17694:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"17703:4:25"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17600:93:25"},"nodeType":"YulFunctionCall","src":"17600:108:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17592:4:25"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17372:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17384:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17392:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17403:4:25","type":""}],"src":"17232:483:25"},{"body":{"nodeType":"YulBlock","src":"17779:40:25","statements":[{"nodeType":"YulAssignment","src":"17790:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17806:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17800:5:25"},"nodeType":"YulFunctionCall","src":"17800:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17790:6:25"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17762:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17772:6:25","type":""}],"src":"17721:98:25"},{"body":{"nodeType":"YulBlock","src":"17938:34:25","statements":[{"nodeType":"YulAssignment","src":"17948:18:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"17963:3:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17948:11:25"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17910:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"17915:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17926:11:25","type":""}],"src":"17825:147:25"},{"body":{"nodeType":"YulBlock","src":"18027:258:25","statements":[{"nodeType":"YulVariableDeclaration","src":"18037:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"18046:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18041:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"18106:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18131:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"18136:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18127:3:25"},"nodeType":"YulFunctionCall","src":"18127:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18150:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"18155:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18146:3:25"},"nodeType":"YulFunctionCall","src":"18146:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18140:5:25"},"nodeType":"YulFunctionCall","src":"18140:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18120:6:25"},"nodeType":"YulFunctionCall","src":"18120:39:25"},"nodeType":"YulExpressionStatement","src":"18120:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18067:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"18070:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18064:2:25"},"nodeType":"YulFunctionCall","src":"18064:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18078:19:25","statements":[{"nodeType":"YulAssignment","src":"18080:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18089:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"18092:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18085:3:25"},"nodeType":"YulFunctionCall","src":"18085:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18080:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"18060:3:25","statements":[]},"src":"18056:113:25"},{"body":{"nodeType":"YulBlock","src":"18203:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18253:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"18258:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18249:3:25"},"nodeType":"YulFunctionCall","src":"18249:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"18267:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18242:6:25"},"nodeType":"YulFunctionCall","src":"18242:27:25"},"nodeType":"YulExpressionStatement","src":"18242:27:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18184:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"18187:6:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18181:2:25"},"nodeType":"YulFunctionCall","src":"18181:13:25"},"nodeType":"YulIf","src":"18178:101:25"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18009:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"18014:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"18019:6:25","type":""}],"src":"17978:307:25"},{"body":{"nodeType":"YulBlock","src":"18399:265:25","statements":[{"nodeType":"YulVariableDeclaration","src":"18409:52:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18455:5:25"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"18423:31:25"},"nodeType":"YulFunctionCall","src":"18423:38:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18413:6:25","type":""}]},{"nodeType":"YulAssignment","src":"18470:95:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18553:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"18558:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18477:75:25"},"nodeType":"YulFunctionCall","src":"18477:88:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18470:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18600:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"18607:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18596:3:25"},"nodeType":"YulFunctionCall","src":"18596:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"18614:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"18619:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"18574:21:25"},"nodeType":"YulFunctionCall","src":"18574:52:25"},"nodeType":"YulExpressionStatement","src":"18574:52:25"},{"nodeType":"YulAssignment","src":"18635:23:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18646:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"18651:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18642:3:25"},"nodeType":"YulFunctionCall","src":"18642:16:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18635:3:25"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18380:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18387:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18395:3:25","type":""}],"src":"18291:373:25"},{"body":{"nodeType":"YulBlock","src":"18804:137:25","statements":[{"nodeType":"YulAssignment","src":"18815:100:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18902:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"18911:3:25"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18822:79:25"},"nodeType":"YulFunctionCall","src":"18822:93:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18815:3:25"}]},{"nodeType":"YulAssignment","src":"18925:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"18932:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18925:3:25"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18783:3:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18789:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18800:3:25","type":""}],"src":"18670:271:25"},{"body":{"nodeType":"YulBlock","src":"18992:146:25","statements":[{"nodeType":"YulAssignment","src":"19002:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19025:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19007:17:25"},"nodeType":"YulFunctionCall","src":"19007:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19002:1:25"}]},{"nodeType":"YulAssignment","src":"19036:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19059:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19041:17:25"},"nodeType":"YulFunctionCall","src":"19041:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19036:1:25"}]},{"body":{"nodeType":"YulBlock","src":"19083:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19085:16:25"},"nodeType":"YulFunctionCall","src":"19085:18:25"},"nodeType":"YulExpressionStatement","src":"19085:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19077:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"19080:1:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19074:2:25"},"nodeType":"YulFunctionCall","src":"19074:8:25"},"nodeType":"YulIf","src":"19071:34:25"},{"nodeType":"YulAssignment","src":"19115:17:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19127:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"19130:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19123:3:25"},"nodeType":"YulFunctionCall","src":"19123:9:25"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"19115:4:25"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18978:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"18981:1:25","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"18987:4:25","type":""}],"src":"18947:191:25"},{"body":{"nodeType":"YulBlock","src":"19192:300:25","statements":[{"nodeType":"YulAssignment","src":"19202:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19225:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19207:17:25"},"nodeType":"YulFunctionCall","src":"19207:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19202:1:25"}]},{"nodeType":"YulAssignment","src":"19236:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19259:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19241:17:25"},"nodeType":"YulFunctionCall","src":"19241:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19236:1:25"}]},{"body":{"nodeType":"YulBlock","src":"19434:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19436:16:25"},"nodeType":"YulFunctionCall","src":"19436:18:25"},"nodeType":"YulExpressionStatement","src":"19436:18:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19346:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19339:6:25"},"nodeType":"YulFunctionCall","src":"19339:9:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19332:6:25"},"nodeType":"YulFunctionCall","src":"19332:17:25"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19354:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19361:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"19429:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"19357:3:25"},"nodeType":"YulFunctionCall","src":"19357:74:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19351:2:25"},"nodeType":"YulFunctionCall","src":"19351:81:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19328:3:25"},"nodeType":"YulFunctionCall","src":"19328:105:25"},"nodeType":"YulIf","src":"19325:131:25"},{"nodeType":"YulAssignment","src":"19466:20:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19481:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"19484:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19477:3:25"},"nodeType":"YulFunctionCall","src":"19477:9:25"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"19466:7:25"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19175:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"19178:1:25","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"19184:7:25","type":""}],"src":"19144:348:25"},{"body":{"nodeType":"YulBlock","src":"19542:261:25","statements":[{"nodeType":"YulAssignment","src":"19552:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19575:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19557:17:25"},"nodeType":"YulFunctionCall","src":"19557:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19552:1:25"}]},{"nodeType":"YulAssignment","src":"19586:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19609:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19591:17:25"},"nodeType":"YulFunctionCall","src":"19591:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19586:1:25"}]},{"body":{"nodeType":"YulBlock","src":"19749:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19751:16:25"},"nodeType":"YulFunctionCall","src":"19751:18:25"},"nodeType":"YulExpressionStatement","src":"19751:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19670:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19677:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"19745:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19673:3:25"},"nodeType":"YulFunctionCall","src":"19673:74:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19667:2:25"},"nodeType":"YulFunctionCall","src":"19667:81:25"},"nodeType":"YulIf","src":"19664:107:25"},{"nodeType":"YulAssignment","src":"19781:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19792:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"19795:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19788:3:25"},"nodeType":"YulFunctionCall","src":"19788:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"19781:3:25"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19529:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"19532:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"19538:3:25","type":""}],"src":"19498:305:25"},{"body":{"nodeType":"YulBlock","src":"19853:144:25","statements":[{"nodeType":"YulAssignment","src":"19863:24:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19885:1:25"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"19868:16:25"},"nodeType":"YulFunctionCall","src":"19868:19:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19863:1:25"}]},{"nodeType":"YulAssignment","src":"19896:24:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19918:1:25"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"19901:16:25"},"nodeType":"YulFunctionCall","src":"19901:19:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19896:1:25"}]},{"body":{"nodeType":"YulBlock","src":"19942:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19944:16:25"},"nodeType":"YulFunctionCall","src":"19944:18:25"},"nodeType":"YulExpressionStatement","src":"19944:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19936:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"19939:1:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19933:2:25"},"nodeType":"YulFunctionCall","src":"19933:8:25"},"nodeType":"YulIf","src":"19930:34:25"},{"nodeType":"YulAssignment","src":"19974:17:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19986:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"19989:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19982:3:25"},"nodeType":"YulFunctionCall","src":"19982:9:25"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"19974:4:25"}]}]},"name":"checked_sub_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19839:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"19842:1:25","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"19848:4:25","type":""}],"src":"19809:188:25"},{"body":{"nodeType":"YulBlock","src":"20045:48:25","statements":[{"nodeType":"YulAssignment","src":"20055:32:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20080:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20073:6:25"},"nodeType":"YulFunctionCall","src":"20073:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20066:6:25"},"nodeType":"YulFunctionCall","src":"20066:21:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"20055:7:25"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20027:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"20037:7:25","type":""}],"src":"20003:90:25"},{"body":{"nodeType":"YulBlock","src":"20158:50:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20175:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20195:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"20180:14:25"},"nodeType":"YulFunctionCall","src":"20180:21:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20168:6:25"},"nodeType":"YulFunctionCall","src":"20168:34:25"},"nodeType":"YulExpressionStatement","src":"20168:34:25"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20146:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20153:3:25","type":""}],"src":"20099:109:25"},{"body":{"nodeType":"YulBlock","src":"20360:280:25","statements":[{"nodeType":"YulAssignment","src":"20370:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20382:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20393:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20378:3:25"},"nodeType":"YulFunctionCall","src":"20378:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20370:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20450:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20463:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20474:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20459:3:25"},"nodeType":"YulFunctionCall","src":"20459:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20406:43:25"},"nodeType":"YulFunctionCall","src":"20406:71:25"},"nodeType":"YulExpressionStatement","src":"20406:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20529:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20542:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20553:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20538:3:25"},"nodeType":"YulFunctionCall","src":"20538:18:25"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"20487:41:25"},"nodeType":"YulFunctionCall","src":"20487:70:25"},"nodeType":"YulExpressionStatement","src":"20487:70:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20605:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20618:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20629:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20614:3:25"},"nodeType":"YulFunctionCall","src":"20614:18:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"20567:37:25"},"nodeType":"YulFunctionCall","src":"20567:66:25"},"nodeType":"YulExpressionStatement","src":"20567:66:25"}]},"name":"abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20316:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20328:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20336:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20344:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20355:4:25","type":""}],"src":"20214:426:25"},{"body":{"nodeType":"YulBlock","src":"20688:141:25","statements":[{"nodeType":"YulAssignment","src":"20698:32:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20724:5:25"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"20707:16:25"},"nodeType":"YulFunctionCall","src":"20707:23:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20698:5:25"}]},{"body":{"nodeType":"YulBlock","src":"20772:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20774:16:25"},"nodeType":"YulFunctionCall","src":"20774:18:25"},"nodeType":"YulExpressionStatement","src":"20774:18:25"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20745:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"20752:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20742:2:25"},"nodeType":"YulFunctionCall","src":"20742:29:25"},"nodeType":"YulIf","src":"20739:55:25"},{"nodeType":"YulAssignment","src":"20803:20:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20814:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"20821:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20810:3:25"},"nodeType":"YulFunctionCall","src":"20810:13:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20803:3:25"}]}]},"name":"increment_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20674:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"20684:3:25","type":""}],"src":"20646:183:25"},{"body":{"nodeType":"YulBlock","src":"20933:124:25","statements":[{"nodeType":"YulAssignment","src":"20943:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20955:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20966:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20951:3:25"},"nodeType":"YulFunctionCall","src":"20951:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20943:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21023:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21036:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21047:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21032:3:25"},"nodeType":"YulFunctionCall","src":"21032:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20979:43:25"},"nodeType":"YulFunctionCall","src":"20979:71:25"},"nodeType":"YulExpressionStatement","src":"20979:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20905:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20917:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20928:4:25","type":""}],"src":"20835:222:25"},{"body":{"nodeType":"YulBlock","src":"21106:219:25","statements":[{"nodeType":"YulAssignment","src":"21116:24:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21138:1:25"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"21121:16:25"},"nodeType":"YulFunctionCall","src":"21121:19:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21116:1:25"}]},{"nodeType":"YulAssignment","src":"21149:24:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21171:1:25"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"21154:16:25"},"nodeType":"YulFunctionCall","src":"21154:19:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21149:1:25"}]},{"body":{"nodeType":"YulBlock","src":"21271:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21273:16:25"},"nodeType":"YulFunctionCall","src":"21273:18:25"},"nodeType":"YulExpressionStatement","src":"21273:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21232:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21239:26:25","type":"","value":"0xffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"21267:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21235:3:25"},"nodeType":"YulFunctionCall","src":"21235:34:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21229:2:25"},"nodeType":"YulFunctionCall","src":"21229:41:25"},"nodeType":"YulIf","src":"21226:67:25"},{"nodeType":"YulAssignment","src":"21303:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21314:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"21317:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21310:3:25"},"nodeType":"YulFunctionCall","src":"21310:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"21303:3:25"}]}]},"name":"checked_add_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21093:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"21096:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"21102:3:25","type":""}],"src":"21063:262:25"},{"body":{"nodeType":"YulBlock","src":"21363:28:25","statements":[{"nodeType":"YulAssignment","src":"21373:12:25","value":{"name":"value","nodeType":"YulIdentifier","src":"21380:5:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21373:3:25"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21349:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21359:3:25","type":""}],"src":"21331:60:25"},{"body":{"nodeType":"YulBlock","src":"21456:81:25","statements":[{"nodeType":"YulAssignment","src":"21466:65:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21523:5:25"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"21506:16:25"},"nodeType":"YulFunctionCall","src":"21506:23:25"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"21497:8:25"},"nodeType":"YulFunctionCall","src":"21497:33:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21479:17:25"},"nodeType":"YulFunctionCall","src":"21479:52:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"21466:9:25"}]}]},"name":"convert_t_uint96_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21436:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"21446:9:25","type":""}],"src":"21397:140:25"},{"body":{"nodeType":"YulBlock","src":"21607:65:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21624:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21659:5:25"}],"functionName":{"name":"convert_t_uint96_to_t_uint256","nodeType":"YulIdentifier","src":"21629:29:25"},"nodeType":"YulFunctionCall","src":"21629:36:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21617:6:25"},"nodeType":"YulFunctionCall","src":"21617:49:25"},"nodeType":"YulExpressionStatement","src":"21617:49:25"}]},"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21595:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21602:3:25","type":""}],"src":"21543:129:25"},{"body":{"nodeType":"YulBlock","src":"21802:204:25","statements":[{"nodeType":"YulAssignment","src":"21812:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21824:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21835:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21820:3:25"},"nodeType":"YulFunctionCall","src":"21820:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21812:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21891:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21904:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21915:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21900:3:25"},"nodeType":"YulFunctionCall","src":"21900:17:25"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21848:42:25"},"nodeType":"YulFunctionCall","src":"21848:70:25"},"nodeType":"YulExpressionStatement","src":"21848:70:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21971:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21984:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21995:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21980:3:25"},"nodeType":"YulFunctionCall","src":"21980:18:25"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21928:42:25"},"nodeType":"YulFunctionCall","src":"21928:71:25"},"nodeType":"YulExpressionStatement","src":"21928:71:25"}]},"name":"abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21766:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21778:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21786:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21797:4:25","type":""}],"src":"21678:328:25"},{"body":{"nodeType":"YulBlock","src":"22137:205:25","statements":[{"nodeType":"YulAssignment","src":"22147:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22159:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22170:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22155:3:25"},"nodeType":"YulFunctionCall","src":"22155:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22147:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22227:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22240:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22251:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22236:3:25"},"nodeType":"YulFunctionCall","src":"22236:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22183:43:25"},"nodeType":"YulFunctionCall","src":"22183:71:25"},"nodeType":"YulExpressionStatement","src":"22183:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22307:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22320:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22331:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22316:3:25"},"nodeType":"YulFunctionCall","src":"22316:18:25"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22264:42:25"},"nodeType":"YulFunctionCall","src":"22264:71:25"},"nodeType":"YulExpressionStatement","src":"22264:71:25"}]},"name":"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22101:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22113:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22121:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22132:4:25","type":""}],"src":"22012:330:25"}]},"contents":"{\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function array_length_t_array$_t_bytes32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(value0, pos) -> updatedPos {\n        abi_encode_t_bytes32_to_t_bytes32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes32[] -> bytes32[]\n    function abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint64t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint96_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_uint64t_uint96(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"not implemented\")\n\n    }\n\n    function abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0(memPtr) {\n\n        mstore(add(memPtr, 0), \"nonexistent request\")\n\n    }\n\n    function abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint96(x, y) -> diff {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function increment_t_uint64(value) -> ret {\n        value := cleanup_t_uint64(value)\n        if eq(value, 0xffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint96(x, y) -> sum {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint96(value)))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"494":[{"length":32,"start":785},{"length":32,"start":2225}],"496":[{"length":32,"start":2156},{"length":32,"start":3292}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82359740 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA410347F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA410347F EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xA47C7696 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xAFC69B53 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xD7AE1D30 EQ PUSH2 0x258 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x82359740 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x9F87FAD7 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x1CD JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0x12291 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x4C357CB EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x3D18651E EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x5D3B1D30 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x7341C10C EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0xAEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH2 0xE9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x106A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x3 PUSH3 0x1E8480 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29A JUMPI PUSH2 0x299 PUSH2 0x186F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2C8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x306 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3FA SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x415 SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP10 PUSH32 0x63373D1C4696214B898952999C9AAEC57DAC1EE2723CEC59BEA6888F489A9772 DUP6 DUP6 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x539 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP2 SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x581 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FE SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CD JUMPI PUSH2 0x6CC PUSH2 0x186F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x771 JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x726 SWAP3 SWAP2 SWAP1 PUSH2 0x1A52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x752 JUMPI PUSH2 0x751 PUSH2 0x1A7B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x769 SWAP1 PUSH2 0x194A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x701 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x790 SWAP3 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x85F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x864 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GAS DUP9 PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH2 0x8AF SWAP2 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8E8 SWAP2 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP9 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 PUSH32 0x7DFFC5AE5EE4E2E4DF1651CF6AD329A73CEBDB728F37EA0187B9B17E036756E4 DUP11 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA9C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE1 SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1C SWAP1 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB4C SWAP1 PUSH2 0x1D93 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x464722B4166576D3DCBBA877B999BC35CF911F4EAF434B7EBA68FA113951D0BF CALLER PUSH1 0x40 MLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE61 JUMPI PUSH2 0xE60 PUSH2 0x186F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE8F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFE8 SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xD39EC07F4E209F627A4C427971473820DC129761BA28DE8906BD56F57101D4F8 DUP3 DUP5 DUP5 PUSH2 0x104F SWAP2 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105D SWAP3 SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1191 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1188 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xE8ED5B475A5B5987AA9165E8731BB78043F39EEE32EC5A1169A89E27FCD49815 DUP5 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x120F SWAP3 SWAP2 SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A4 DUP2 PUSH2 0x128D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12C3 DUP2 PUSH2 0x12AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1308 DUP2 PUSH2 0x12F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x131A DUP4 DUP4 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133E DUP3 PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x1348 DUP2 DUP6 PUSH2 0x12D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1353 DUP4 PUSH2 0x12E5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1384 JUMPI DUP2 MLOAD PUSH2 0x136B DUP9 DUP3 PUSH2 0x130E JUMP JUMPDEST SWAP8 POP PUSH2 0x1376 DUP4 PUSH2 0x1326 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1357 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13A6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x129B JUMP JUMPDEST PUSH2 0x13B3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12BA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x13C5 DUP2 DUP5 PUSH2 0x1333 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F1 DUP2 PUSH2 0x13D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x13FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140E DUP2 PUSH2 0x13E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143F DUP3 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144F DUP2 PUSH2 0x1434 JUMP JUMPDEST DUP2 EQ PUSH2 0x145A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146C DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1489 JUMPI PUSH2 0x1488 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1497 DUP6 DUP3 DUP7 ADD PUSH2 0x13FF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A8 DUP6 DUP3 DUP7 ADD PUSH2 0x145D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D3 DUP2 PUSH2 0x14B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14EE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14FD DUP2 PUSH2 0x12F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x151A DUP2 PUSH2 0x14F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1529 DUP2 PUSH2 0x128D JUMP JUMPDEST DUP2 EQ PUSH2 0x1534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1546 DUP2 PUSH2 0x1520 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1555 DUP2 PUSH2 0x12AA JUMP JUMPDEST DUP2 EQ PUSH2 0x1560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1572 DUP2 PUSH2 0x154C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1594 JUMPI PUSH2 0x1593 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15A2 DUP9 DUP3 DUP10 ADD PUSH2 0x150B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x15B3 DUP9 DUP3 DUP10 ADD PUSH2 0x13FF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x15C4 DUP9 DUP3 DUP10 ADD PUSH2 0x1537 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x15D5 DUP9 DUP3 DUP10 ADD PUSH2 0x1563 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x15E6 DUP9 DUP3 DUP10 ADD PUSH2 0x1563 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1606 DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1621 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1630 DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x163B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x164D DUP2 PUSH2 0x1627 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x166A JUMPI PUSH2 0x1669 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1678 DUP6 DUP3 DUP7 ADD PUSH2 0x163E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1689 DUP6 DUP3 DUP7 ADD PUSH2 0x145D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A9 JUMPI PUSH2 0x16A8 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16B7 DUP5 DUP3 DUP6 ADD PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16C9 DUP2 PUSH2 0x13D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16F3 DUP2 PUSH2 0x1434 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172E DUP2 PUSH2 0x1434 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1740 DUP4 DUP4 PUSH2 0x1725 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1764 DUP3 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0x176E DUP2 DUP6 PUSH2 0x1704 JUMP JUMPDEST SWAP4 POP PUSH2 0x1779 DUP4 PUSH2 0x1715 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17AA JUMPI DUP2 MLOAD PUSH2 0x1791 DUP9 DUP3 PUSH2 0x1734 JUMP JUMPDEST SWAP8 POP PUSH2 0x179C DUP4 PUSH2 0x174C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x177D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x17CC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x17D9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x17E6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x16EA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x17F8 DUP2 DUP5 PUSH2 0x1759 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x180C DUP2 PUSH2 0x14B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1829 DUP2 PUSH2 0x1803 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1846 JUMPI PUSH2 0x1845 PUSH2 0x13CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1854 DUP6 DUP3 DUP7 ADD PUSH2 0x13FF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1865 DUP6 DUP3 DUP7 ADD PUSH2 0x181A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420696D706C656D656E7465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E5 PUSH1 0xF DUP4 PUSH2 0x189E JUMP JUMPDEST SWAP2 POP PUSH2 0x18F0 DUP3 PUSH2 0x18AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1914 DUP2 PUSH2 0x18D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1955 DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1988 JUMPI PUSH2 0x1987 PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x19A8 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x19B5 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x19C2 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x129B JUMP JUMPDEST PUSH2 0x19CF PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x19DC PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x12BA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x6E6F6E6578697374656E74207265717565737400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1C PUSH1 0x13 DUP4 PUSH2 0x189E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A27 DUP3 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A4B DUP2 PUSH2 0x1A0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A67 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x1A74 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADF DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF1 DUP4 DUP4 PUSH2 0x1AD6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B15 DUP3 PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0x1B1F DUP2 DUP6 PUSH2 0x1AB5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B2A DUP4 PUSH2 0x1AC6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B5B JUMPI DUP2 MLOAD PUSH2 0x1B42 DUP9 DUP3 PUSH2 0x1AE5 JUMP JUMPDEST SWAP8 POP PUSH2 0x1B4D DUP4 PUSH2 0x1AFD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B2E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B7D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15FD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1B8F DUP2 DUP5 PUSH2 0x1B0A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BCC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BB1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1BDB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BEC DUP3 PUSH2 0x1B98 JUMP JUMPDEST PUSH2 0x1BF6 DUP2 DUP6 PUSH2 0x1BA3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C06 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1BAE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C1E DUP3 DUP5 PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C34 DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3F DUP4 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1C52 JUMPI PUSH2 0x1C51 PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C68 DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C73 DUP4 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1CAC JUMPI PUSH2 0x1CAB PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC2 DUP3 PUSH2 0x15F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCD DUP4 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1D02 JUMPI PUSH2 0x1D01 PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D18 DUP3 PUSH2 0x14B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D23 DUP4 PUSH2 0x14B2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1D36 JUMPI PUSH2 0x1D35 PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D56 DUP2 PUSH2 0x1D41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D71 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x1D7E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x1D8B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D4D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9E DUP3 PUSH2 0x13D4 JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1DB9 JUMPI PUSH2 0x1DB8 PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEA DUP3 PUSH2 0x14B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF5 DUP4 PUSH2 0x14B2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1E16 JUMPI PUSH2 0x1E15 PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E46 PUSH2 0x1E41 PUSH2 0x1E3C DUP5 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x1E21 JUMP JUMPDEST PUSH2 0x15F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E56 DUP2 PUSH2 0x1E2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E71 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E4D JUMP JUMPDEST PUSH2 0x1E7E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E4D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E9A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16EA JUMP JUMPDEST PUSH2 0x1EA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E4D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x6B6BAFC14FA8906C PUSH28 0xD3919E188A6672F9E155EF1517468CF25DF2C61D326964736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"254:5984:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5555:184;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5982:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;317:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3691:718;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5743:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2165:978;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6121:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5861:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4413:269;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;353:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4686:396;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;3345:342;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5086:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5555:184;5638:6;5652;5666:16;5705:1;5708:7;5731:1;5717:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5697:37;;;;;;5555:184;;;:::o;5982:135::-;6087:25;;;;;;;;;;:::i;:::-;;;;;;;;317:32;;;:::o;3691:718::-;3884:7;3944:1;3903:43;;:15;:23;3919:6;3903:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;3899:92;;;3963:21;;;;;;;;;;;;;;3899:92;3997:17;4017:15;;:17;;;;;;;;;:::i;:::-;;;;;3997:37;;4040:15;4058:13;;:15;;;;;;;;;:::i;:::-;;;;;4040:33;;4104:82;;;;;;;;4120:6;4104:82;;;;;;4146:17;4104:82;;;;;;4175:9;4104:82;;;;;4080:10;:21;4091:9;4080:21;;;;;;;;;;;:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4366:10;4198:184;;4274:6;4198:184;;4226:8;4198:184;4242:9;4259:7;4288:28;4324:17;4349:9;4198:184;;;;;;;;;;:::i;:::-;;;;;;;;4395:9;4388:16;;;;3691:718;;;;;;;:::o;5743:114::-;5827:25;;;;;;;;;;:::i;:::-;;;;;;;;2165:978;2247:16;2266:9;2247:28;;2317:1;2285:10;:22;2296:10;2285:22;;;;;;;;;;;:28;;;;;;;;;;;;:33;;;2281:83;;;2328:29;;;;;;;;;;:::i;:::-;;;;;;;;2281:83;2369:18;2390:10;:22;2401:10;2390:22;;;;;;;;;;;2369:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2419:22;2458:3;:12;;;2444:27;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2419:52;;2482:9;2477:114;2501:3;:12;;;2497:16;;:1;:16;2477:114;;;2568:10;2580:1;2557:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2547:36;;;;;;2539:45;;2528:5;2534:1;2528:8;;;;;;;;:::i;:::-;;;;;;;:56;;;;;2515:3;;;;;:::i;:::-;;;;2477:114;;;;2597:19;2622:20;2668:32;;;2702:10;2714:5;2645:75;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2622:98;;2727:12;2745:9;:14;;2765:3;:20;;;2745:50;;2787:7;2745:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2726:69;;;2802:14;2863;2838:39;;2850:9;2839:8;:20;;;;:::i;:::-;2838:39;;;;:::i;:::-;2826:8;:52;;;;;;:::i;:::-;2802:77;;2926:7;2889:44;;:15;:26;2905:3;:9;;;2889:26;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:44;;;2885:93;;;2950:21;;;;;;;;;;;;;;2885:93;3021:7;2983:15;:26;2999:3;:9;;;2983:26;;;;;;;;;;;;;;;:34;;;:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3042:10;:22;3053:10;3042:22;;;;;;;;;;;;3034:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3097:10;3076:62;3109:10;3121:7;3130;3076:62;;;;;;;;:::i;:::-;;;;;;;;2241:902;;;;;;;2165:978;;:::o;6121:115::-;6206:25;;;;;;;;;;:::i;:::-;;;;;;;;5861:117;5948:25;;;;;;;;;;:::i;:::-;;;;;;;;4413:269;4470:13;4491:14;;:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;4547:45;;;;;;;;4568:10;4547:45;;;;;;4589:1;4547:45;;;;;4513:15;:31;4529:14;;;;;;;;;;;4513:31;;;;;;;;;;;;;;;:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4623:14;;;;;;;;;;4603:47;;;4639:10;4603:47;;;;;;:::i;:::-;;;;;;;;4663:14;;;;;;;;;;4656:21;;4413:269;:::o;353:38::-;;;:::o;4686:396::-;4781:14;4803:15;4826:13;4847:26;4933:1;4892:43;;:15;:23;4908:6;4892:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;4888:92;;;4952:21;;;;;;;;;;;;;;4888:92;4993:15;:23;5009:6;4993:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;5026:1;5029:15;:23;5045:6;5029:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;5074:1;5060:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4985:92;;;;;;;;4686:396;;;;;:::o;3345:342::-;3460:1;3419:43;;:15;:23;3435:6;3419:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;3415:92;;;3479:21;;;;;;;;;;;;;;3415:92;3512:17;3532:15;:23;3548:6;3532:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;3512:51;;3604:7;3569:15;:23;3585:6;3569:23;;;;;;;;;;;;;;;:31;;;:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3641:6;3622:60;;;3649:10;3674:7;3661:10;:20;;;;:::i;:::-;3622:60;;;;;;;:::i;:::-;;;;;;;;3409:278;3345:342;;:::o;5086:215::-;5173:6;5348:13;5364:15;:23;5380:6;5364:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;5348:45;;5420:1;5403:19;;:5;:19;;;5399:68;;;5439:21;;;;;;;;;;;;;;5399:68;5490:5;5476:19;;:10;:19;;;5472:68;;5527:5;5512:21;;;;;;;;;;;:::i;:::-;;;;;;;;5472:68;5213:6:::1;5192:66;;;5221:3;5226:15;:23;5242:6;5226:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;5192:66;;;;;;;:::i;:::-;;;;;;;;5272:15;:23;5288:6;5272:23;;;;;;;;;;;;;;;;5264:32:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5342:209:::0;5086:215;;;:::o;7:89:25:-;43:7;83:6;76:5;72:18;61:29;;7:89;;;:::o;102:115::-;187:23;204:5;187:23;:::i;:::-;182:3;175:36;102:115;;:::o;223:93::-;259:7;299:10;292:5;288:22;277:33;;223:93;;;:::o;322:115::-;407:23;424:5;407:23;:::i;:::-;402:3;395:36;322:115;;:::o;443:114::-;510:6;544:5;538:12;528:22;;443:114;;;:::o;563:184::-;662:11;696:6;691:3;684:19;736:4;731:3;727:14;712:29;;563:184;;;;:::o;753:132::-;820:4;843:3;835:11;;873:4;868:3;864:14;856:22;;753:132;;;:::o;891:77::-;928:7;957:5;946:16;;891:77;;;:::o;974:108::-;1051:24;1069:5;1051:24;:::i;:::-;1046:3;1039:37;974:108;;:::o;1088:179::-;1157:10;1178:46;1220:3;1212:6;1178:46;:::i;:::-;1256:4;1251:3;1247:14;1233:28;;1088:179;;;;:::o;1273:113::-;1343:4;1375;1370:3;1366:14;1358:22;;1273:113;;;:::o;1422:732::-;1541:3;1570:54;1618:5;1570:54;:::i;:::-;1640:86;1719:6;1714:3;1640:86;:::i;:::-;1633:93;;1750:56;1800:5;1750:56;:::i;:::-;1829:7;1860:1;1845:284;1870:6;1867:1;1864:13;1845:284;;;1946:6;1940:13;1973:63;2032:3;2017:13;1973:63;:::i;:::-;1966:70;;2059:60;2112:6;2059:60;:::i;:::-;2049:70;;1905:224;1892:1;1889;1885:9;1880:14;;1845:284;;;1849:14;2145:3;2138:10;;1546:608;;;1422:732;;;;:::o;2160:585::-;2355:4;2393:2;2382:9;2378:18;2370:26;;2406:69;2472:1;2461:9;2457:17;2448:6;2406:69;:::i;:::-;2485:70;2551:2;2540:9;2536:18;2527:6;2485:70;:::i;:::-;2602:9;2596:4;2592:20;2587:2;2576:9;2572:18;2565:48;2630:108;2733:4;2724:6;2630:108;:::i;:::-;2622:116;;2160:585;;;;;;:::o;2832:117::-;2941:1;2938;2931:12;3078:101;3114:7;3154:18;3147:5;3143:30;3132:41;;3078:101;;;:::o;3185:120::-;3257:23;3274:5;3257:23;:::i;:::-;3250:5;3247:34;3237:62;;3295:1;3292;3285:12;3237:62;3185:120;:::o;3311:137::-;3356:5;3394:6;3381:20;3372:29;;3410:32;3436:5;3410:32;:::i;:::-;3311:137;;;;:::o;3454:126::-;3491:7;3531:42;3524:5;3520:54;3509:65;;3454:126;;;:::o;3586:96::-;3623:7;3652:24;3670:5;3652:24;:::i;:::-;3641:35;;3586:96;;;:::o;3688:122::-;3761:24;3779:5;3761:24;:::i;:::-;3754:5;3751:35;3741:63;;3800:1;3797;3790:12;3741:63;3688:122;:::o;3816:139::-;3862:5;3900:6;3887:20;3878:29;;3916:33;3943:5;3916:33;:::i;:::-;3816:139;;;;:::o;3961:472::-;4028:6;4036;4085:2;4073:9;4064:7;4060:23;4056:32;4053:119;;;4091:79;;:::i;:::-;4053:119;4211:1;4236:52;4280:7;4271:6;4260:9;4256:22;4236:52;:::i;:::-;4226:62;;4182:116;4337:2;4363:53;4408:7;4399:6;4388:9;4384:22;4363:53;:::i;:::-;4353:63;;4308:118;3961:472;;;;;:::o;4439:109::-;4475:7;4515:26;4508:5;4504:38;4493:49;;4439:109;;;:::o;4554:115::-;4639:23;4656:5;4639:23;:::i;:::-;4634:3;4627:36;4554:115;;:::o;4675:218::-;4766:4;4804:2;4793:9;4789:18;4781:26;;4817:69;4883:1;4872:9;4868:17;4859:6;4817:69;:::i;:::-;4675:218;;;;:::o;4899:122::-;4972:24;4990:5;4972:24;:::i;:::-;4965:5;4962:35;4952:63;;5011:1;5008;5001:12;4952:63;4899:122;:::o;5027:139::-;5073:5;5111:6;5098:20;5089:29;;5127:33;5154:5;5127:33;:::i;:::-;5027:139;;;;:::o;5172:120::-;5244:23;5261:5;5244:23;:::i;:::-;5237:5;5234:34;5224:62;;5282:1;5279;5272:12;5224:62;5172:120;:::o;5298:137::-;5343:5;5381:6;5368:20;5359:29;;5397:32;5423:5;5397:32;:::i;:::-;5298:137;;;;:::o;5441:120::-;5513:23;5530:5;5513:23;:::i;:::-;5506:5;5503:34;5493:62;;5551:1;5548;5541:12;5493:62;5441:120;:::o;5567:137::-;5612:5;5650:6;5637:20;5628:29;;5666:32;5692:5;5666:32;:::i;:::-;5567:137;;;;:::o;5710:903::-;5801:6;5809;5817;5825;5833;5882:3;5870:9;5861:7;5857:23;5853:33;5850:120;;;5889:79;;:::i;:::-;5850:120;6009:1;6034:53;6079:7;6070:6;6059:9;6055:22;6034:53;:::i;:::-;6024:63;;5980:117;6136:2;6162:52;6206:7;6197:6;6186:9;6182:22;6162:52;:::i;:::-;6152:62;;6107:117;6263:2;6289:52;6333:7;6324:6;6313:9;6309:22;6289:52;:::i;:::-;6279:62;;6234:117;6390:2;6416:52;6460:7;6451:6;6440:9;6436:22;6416:52;:::i;:::-;6406:62;;6361:117;6517:3;6544:52;6588:7;6579:6;6568:9;6564:22;6544:52;:::i;:::-;6534:62;;6488:118;5710:903;;;;;;;;:::o;6619:77::-;6656:7;6685:5;6674:16;;6619:77;;;:::o;6702:118::-;6789:24;6807:5;6789:24;:::i;:::-;6784:3;6777:37;6702:118;;:::o;6826:222::-;6919:4;6957:2;6946:9;6942:18;6934:26;;6970:71;7038:1;7027:9;7023:17;7014:6;6970:71;:::i;:::-;6826:222;;;;:::o;7054:122::-;7127:24;7145:5;7127:24;:::i;:::-;7120:5;7117:35;7107:63;;7166:1;7163;7156:12;7107:63;7054:122;:::o;7182:139::-;7228:5;7266:6;7253:20;7244:29;;7282:33;7309:5;7282:33;:::i;:::-;7182:139;;;;:::o;7327:474::-;7395:6;7403;7452:2;7440:9;7431:7;7427:23;7423:32;7420:119;;;7458:79;;:::i;:::-;7420:119;7578:1;7603:53;7648:7;7639:6;7628:9;7624:22;7603:53;:::i;:::-;7593:63;;7549:117;7705:2;7731:53;7776:7;7767:6;7756:9;7752:22;7731:53;:::i;:::-;7721:63;;7676:118;7327:474;;;;;:::o;7807:327::-;7865:6;7914:2;7902:9;7893:7;7889:23;7885:32;7882:119;;;7920:79;;:::i;:::-;7882:119;8040:1;8065:52;8109:7;8100:6;8089:9;8085:22;8065:52;:::i;:::-;8055:62;;8011:116;7807:327;;;;:::o;8140:115::-;8225:23;8242:5;8225:23;:::i;:::-;8220:3;8213:36;8140:115;;:::o;8261:218::-;8352:4;8390:2;8379:9;8375:18;8367:26;;8403:69;8469:1;8458:9;8454:17;8445:6;8403:69;:::i;:::-;8261:218;;;;:::o;8485:118::-;8572:24;8590:5;8572:24;:::i;:::-;8567:3;8560:37;8485:118;;:::o;8609:114::-;8676:6;8710:5;8704:12;8694:22;;8609:114;;;:::o;8729:184::-;8828:11;8862:6;8857:3;8850:19;8902:4;8897:3;8893:14;8878:29;;8729:184;;;;:::o;8919:132::-;8986:4;9009:3;9001:11;;9039:4;9034:3;9030:14;9022:22;;8919:132;;;:::o;9057:108::-;9134:24;9152:5;9134:24;:::i;:::-;9129:3;9122:37;9057:108;;:::o;9171:179::-;9240:10;9261:46;9303:3;9295:6;9261:46;:::i;:::-;9339:4;9334:3;9330:14;9316:28;;9171:179;;;;:::o;9356:113::-;9426:4;9458;9453:3;9449:14;9441:22;;9356:113;;;:::o;9505:732::-;9624:3;9653:54;9701:5;9653:54;:::i;:::-;9723:86;9802:6;9797:3;9723:86;:::i;:::-;9716:93;;9833:56;9883:5;9833:56;:::i;:::-;9912:7;9943:1;9928:284;9953:6;9950:1;9947:13;9928:284;;;10029:6;10023:13;10056:63;10115:3;10100:13;10056:63;:::i;:::-;10049:70;;10142:60;10195:6;10142:60;:::i;:::-;10132:70;;9988:224;9975:1;9972;9968:9;9963:14;;9928:284;;;9932:14;10228:3;10221:10;;9629:608;;;9505:732;;;;:::o;10243:696::-;10466:4;10504:3;10493:9;10489:19;10481:27;;10518:69;10584:1;10573:9;10569:17;10560:6;10518:69;:::i;:::-;10597:70;10663:2;10652:9;10648:18;10639:6;10597:70;:::i;:::-;10677:72;10745:2;10734:9;10730:18;10721:6;10677:72;:::i;:::-;10796:9;10790:4;10786:20;10781:2;10770:9;10766:18;10759:48;10824:108;10927:4;10918:6;10824:108;:::i;:::-;10816:116;;10243:696;;;;;;;:::o;10945:120::-;11017:23;11034:5;11017:23;:::i;:::-;11010:5;11007:34;10997:62;;11055:1;11052;11045:12;10997:62;10945:120;:::o;11071:137::-;11116:5;11154:6;11141:20;11132:29;;11170:32;11196:5;11170:32;:::i;:::-;11071:137;;;;:::o;11214:470::-;11280:6;11288;11337:2;11325:9;11316:7;11312:23;11308:32;11305:119;;;11343:79;;:::i;:::-;11305:119;11463:1;11488:52;11532:7;11523:6;11512:9;11508:22;11488:52;:::i;:::-;11478:62;;11434:116;11589:2;11615:52;11659:7;11650:6;11639:9;11635:22;11615:52;:::i;:::-;11605:62;;11560:117;11214:470;;;;;:::o;11690:180::-;11738:77;11735:1;11728:88;11835:4;11832:1;11825:15;11859:4;11856:1;11849:15;11876:169;11960:11;11994:6;11989:3;11982:19;12034:4;12029:3;12025:14;12010:29;;11876:169;;;;:::o;12051:165::-;12191:17;12187:1;12179:6;12175:14;12168:41;12051:165;:::o;12222:366::-;12364:3;12385:67;12449:2;12444:3;12385:67;:::i;:::-;12378:74;;12461:93;12550:3;12461:93;:::i;:::-;12579:2;12574:3;12570:12;12563:19;;12222:366;;;:::o;12594:419::-;12760:4;12798:2;12787:9;12783:18;12775:26;;12847:9;12841:4;12837:20;12833:1;12822:9;12818:17;12811:47;12875:131;13001:4;12875:131;:::i;:::-;12867:139;;12594:419;;;:::o;13019:180::-;13067:77;13064:1;13057:88;13164:4;13161:1;13154:15;13188:4;13185:1;13178:15;13205:233;13244:3;13267:24;13285:5;13267:24;:::i;:::-;13258:33;;13313:66;13306:5;13303:77;13300:103;;;13383:18;;:::i;:::-;13300:103;13430:1;13423:5;13419:13;13412:20;;13205:233;;;:::o;13444:652::-;13643:4;13681:3;13670:9;13666:19;13658:27;;13695:71;13763:1;13752:9;13748:17;13739:6;13695:71;:::i;:::-;13776:72;13844:2;13833:9;13829:18;13820:6;13776:72;:::i;:::-;13858:70;13924:2;13913:9;13909:18;13900:6;13858:70;:::i;:::-;13938;14004:2;13993:9;13989:18;13980:6;13938:70;:::i;:::-;14018:71;14084:3;14073:9;14069:19;14060:6;14018:71;:::i;:::-;13444:652;;;;;;;;:::o;14102:169::-;14242:21;14238:1;14230:6;14226:14;14219:45;14102:169;:::o;14277:366::-;14419:3;14440:67;14504:2;14499:3;14440:67;:::i;:::-;14433:74;;14516:93;14605:3;14516:93;:::i;:::-;14634:2;14629:3;14625:12;14618:19;;14277:366;;;:::o;14649:419::-;14815:4;14853:2;14842:9;14838:18;14830:26;;14902:9;14896:4;14892:20;14888:1;14877:9;14873:17;14866:47;14930:131;15056:4;14930:131;:::i;:::-;14922:139;;14649:419;;;:::o;15074:332::-;15195:4;15233:2;15222:9;15218:18;15210:26;;15246:71;15314:1;15303:9;15299:17;15290:6;15246:71;:::i;:::-;15327:72;15395:2;15384:9;15380:18;15371:6;15327:72;:::i;:::-;15074:332;;;;;:::o;15412:180::-;15460:77;15457:1;15450:88;15557:4;15554:1;15547:15;15581:4;15578:1;15571:15;15598:114;15665:6;15699:5;15693:12;15683:22;;15598:114;;;:::o;15718:184::-;15817:11;15851:6;15846:3;15839:19;15891:4;15886:3;15882:14;15867:29;;15718:184;;;;:::o;15908:132::-;15975:4;15998:3;15990:11;;16028:4;16023:3;16019:14;16011:22;;15908:132;;;:::o;16046:108::-;16123:24;16141:5;16123:24;:::i;:::-;16118:3;16111:37;16046:108;;:::o;16160:179::-;16229:10;16250:46;16292:3;16284:6;16250:46;:::i;:::-;16328:4;16323:3;16319:14;16305:28;;16160:179;;;;:::o;16345:113::-;16415:4;16447;16442:3;16438:14;16430:22;;16345:113;;;:::o;16494:732::-;16613:3;16642:54;16690:5;16642:54;:::i;:::-;16712:86;16791:6;16786:3;16712:86;:::i;:::-;16705:93;;16822:56;16872:5;16822:56;:::i;:::-;16901:7;16932:1;16917:284;16942:6;16939:1;16936:13;16917:284;;;17018:6;17012:13;17045:63;17104:3;17089:13;17045:63;:::i;:::-;17038:70;;17131:60;17184:6;17131:60;:::i;:::-;17121:70;;16977:224;16964:1;16961;16957:9;16952:14;;16917:284;;;16921:14;17217:3;17210:10;;16618:608;;;16494:732;;;;:::o;17232:483::-;17403:4;17441:2;17430:9;17426:18;17418:26;;17454:71;17522:1;17511:9;17507:17;17498:6;17454:71;:::i;:::-;17572:9;17566:4;17562:20;17557:2;17546:9;17542:18;17535:48;17600:108;17703:4;17694:6;17600:108;:::i;:::-;17592:116;;17232:483;;;;;:::o;17721:98::-;17772:6;17806:5;17800:12;17790:22;;17721:98;;;:::o;17825:147::-;17926:11;17963:3;17948:18;;17825:147;;;;:::o;17978:307::-;18046:1;18056:113;18070:6;18067:1;18064:13;18056:113;;;18155:1;18150:3;18146:11;18140:18;18136:1;18131:3;18127:11;18120:39;18092:2;18089:1;18085:10;18080:15;;18056:113;;;18187:6;18184:1;18181:13;18178:101;;;18267:1;18258:6;18253:3;18249:16;18242:27;18178:101;18027:258;17978:307;;;:::o;18291:373::-;18395:3;18423:38;18455:5;18423:38;:::i;:::-;18477:88;18558:6;18553:3;18477:88;:::i;:::-;18470:95;;18574:52;18619:6;18614:3;18607:4;18600:5;18596:16;18574:52;:::i;:::-;18651:6;18646:3;18642:16;18635:23;;18399:265;18291:373;;;;:::o;18670:271::-;18800:3;18822:93;18911:3;18902:6;18822:93;:::i;:::-;18815:100;;18932:3;18925:10;;18670:271;;;;:::o;18947:191::-;18987:4;19007:20;19025:1;19007:20;:::i;:::-;19002:25;;19041:20;19059:1;19041:20;:::i;:::-;19036:25;;19080:1;19077;19074:8;19071:34;;;19085:18;;:::i;:::-;19071:34;19130:1;19127;19123:9;19115:17;;18947:191;;;;:::o;19144:348::-;19184:7;19207:20;19225:1;19207:20;:::i;:::-;19202:25;;19241:20;19259:1;19241:20;:::i;:::-;19236:25;;19429:1;19361:66;19357:74;19354:1;19351:81;19346:1;19339:9;19332:17;19328:105;19325:131;;;19436:18;;:::i;:::-;19325:131;19484:1;19481;19477:9;19466:20;;19144:348;;;;:::o;19498:305::-;19538:3;19557:20;19575:1;19557:20;:::i;:::-;19552:25;;19591:20;19609:1;19591:20;:::i;:::-;19586:25;;19745:1;19677:66;19673:74;19670:1;19667:81;19664:107;;;19751:18;;:::i;:::-;19664:107;19795:1;19792;19788:9;19781:16;;19498:305;;;;:::o;19809:188::-;19848:4;19868:19;19885:1;19868:19;:::i;:::-;19863:24;;19901:19;19918:1;19901:19;:::i;:::-;19896:24;;19939:1;19936;19933:8;19930:34;;;19944:18;;:::i;:::-;19930:34;19989:1;19986;19982:9;19974:17;;19809:188;;;;:::o;20003:90::-;20037:7;20080:5;20073:13;20066:21;20055:32;;20003:90;;;:::o;20099:109::-;20180:21;20195:5;20180:21;:::i;:::-;20175:3;20168:34;20099:109;;:::o;20214:426::-;20355:4;20393:2;20382:9;20378:18;20370:26;;20406:71;20474:1;20463:9;20459:17;20450:6;20406:71;:::i;:::-;20487:70;20553:2;20542:9;20538:18;20529:6;20487:70;:::i;:::-;20567:66;20629:2;20618:9;20614:18;20605:6;20567:66;:::i;:::-;20214:426;;;;;;:::o;20646:183::-;20684:3;20707:23;20724:5;20707:23;:::i;:::-;20698:32;;20752:18;20745:5;20742:29;20739:55;;;20774:18;;:::i;:::-;20739:55;20821:1;20814:5;20810:13;20803:20;;20646:183;;;:::o;20835:222::-;20928:4;20966:2;20955:9;20951:18;20943:26;;20979:71;21047:1;21036:9;21032:17;21023:6;20979:71;:::i;:::-;20835:222;;;;:::o;21063:262::-;21102:3;21121:19;21138:1;21121:19;:::i;:::-;21116:24;;21154:19;21171:1;21154:19;:::i;:::-;21149:24;;21267:1;21239:26;21235:34;21232:1;21229:41;21226:67;;;21273:18;;:::i;:::-;21226:67;21317:1;21314;21310:9;21303:16;;21063:262;;;;:::o;21331:60::-;21359:3;21380:5;21373:12;;21331:60;;;:::o;21397:140::-;21446:9;21479:52;21497:33;21506:23;21523:5;21506:23;:::i;:::-;21497:33;:::i;:::-;21479:52;:::i;:::-;21466:65;;21397:140;;;:::o;21543:129::-;21629:36;21659:5;21629:36;:::i;:::-;21624:3;21617:49;21543:129;;:::o;21678:328::-;21797:4;21835:2;21824:9;21820:18;21812:26;;21848:70;21915:1;21904:9;21900:17;21891:6;21848:70;:::i;:::-;21928:71;21995:2;21984:9;21980:18;21971:6;21928:71;:::i;:::-;21678:328;;;;;:::o;22012:330::-;22132:4;22170:2;22159:9;22155:18;22147:26;;22183:71;22251:1;22240:9;22236:17;22227:6;22183:71;:::i;:::-;22264;22331:2;22320:9;22316:18;22307:6;22264:71;:::i;:::-;22012:330;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1581600","executionCost":"infinite","totalCost":"infinite"},"external":{"BASE_FEE()":"infinite","GAS_PRICE_LINK()":"infinite","acceptSubscriptionOwnerTransfer(uint64)":"723","addConsumer(uint64,address)":"1009","cancelSubscription(uint64,address)":"infinite","createSubscription()":"infinite","fulfillRandomWords(uint256,address)":"infinite","fundSubscription(uint64,uint96)":"infinite","getRequestConfig()":"885","getSubscription(uint64)":"infinite","removeConsumer(uint64,address)":"965","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"infinite","requestSubscriptionOwnerTransfer(uint64,address)":"943"}},"methodIdentifiers":{"BASE_FEE()":"3d18651e","GAS_PRICE_LINK()":"a410347f","acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","fulfillRandomWords(uint256,address)":"808974ff","fundSubscription(uint64,uint96)":"afc69b53","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_baseFee\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"_gasPriceLink\",\"type\":\"uint96\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSubscription\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MustBeSubOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputSeed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"payment\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"RandomWordsFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"preSeed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RandomWordsRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SubscriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFunded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_FEE\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GAS_PRICE_LINK\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"fulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"uint96\",\"name\":\"_amount\",\"type\":\"uint96\"}],\"name\":\"fundSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"_minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"_callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"_subId\":\"- A unique subscription id.\"}},\"fulfillRandomWords(uint256,address)\":{\"details\":\"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.\",\"params\":{\"_consumer\":\"the VRF randomness consumer to send the result to\",\"_requestId\":\"the request to fulfill\"}},\"fundSubscription(uint64,uint96)\":{\"params\":{\"_amount\":\"the amount to fund\",\"_subId\":\"the subscription to fund\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fulfillRandomWords(uint256,address)\":{\"notice\":\"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer.\"},\"fundSubscription(uint64,uint96)\":{\"notice\":\"fundSubscription allows funding a subscription with an arbitrary amount for testing.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\":\"VRFCoordinatorV2Mock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0xec8b7e3032e887dd0732d2a5f8552ddce64a99a81b0008ef0bcf6cad68a535fc\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n}\\n\",\"keccak256\":\"0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// A mock for testing code that relies on VRFCoordinatorV2.\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/LinkTokenInterface.sol\\\";\\nimport \\\"../interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"../VRFConsumerBaseV2.sol\\\";\\n\\ncontract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface {\\n  uint96 public immutable BASE_FEE;\\n  uint96 public immutable GAS_PRICE_LINK;\\n\\n  error InvalidSubscription();\\n  error InsufficientBalance();\\n  error MustBeSubOwner(address owner);\\n\\n  event RandomWordsRequested(\\n    bytes32 indexed keyHash,\\n    uint256 requestId,\\n    uint256 preSeed,\\n    uint64 indexed subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords,\\n    address indexed sender\\n  );\\n  event RandomWordsFulfilled(uint256 indexed requestId, uint256 outputSeed, uint96 payment, bool success);\\n  event SubscriptionCreated(uint64 indexed subId, address owner);\\n  event SubscriptionFunded(uint64 indexed subId, uint256 oldBalance, uint256 newBalance);\\n  event SubscriptionCanceled(uint64 indexed subId, address to, uint256 amount);\\n\\n  uint64 s_currentSubId;\\n  uint256 s_nextRequestId = 1;\\n  uint256 s_nextPreSeed = 100;\\n  struct Subscription {\\n    address owner;\\n    uint96 balance;\\n  }\\n  mapping(uint64 => Subscription) s_subscriptions; /* subId */ /* subscription */\\n\\n  struct Request {\\n    uint64 subId;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n  }\\n  mapping(uint256 => Request) s_requests; /* requestId */ /* request */\\n\\n  constructor(uint96 _baseFee, uint96 _gasPriceLink) {\\n    BASE_FEE = _baseFee;\\n    GAS_PRICE_LINK = _gasPriceLink;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\\n   * @notice consumer.\\n   *\\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\\n   * @dev against the real coordinator a small amount of additional LINK is required.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   */\\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external {\\n    uint256 startGas = gasleft();\\n    if (s_requests[_requestId].subId == 0) {\\n      revert(\\\"nonexistent request\\\");\\n    }\\n    Request memory req = s_requests[_requestId];\\n\\n    uint256[] memory words = new uint256[](req.numWords);\\n    for (uint256 i = 0; i < req.numWords; i++) {\\n      words[i] = uint256(keccak256(abi.encode(_requestId, i)));\\n    }\\n\\n    VRFConsumerBaseV2 v;\\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, words);\\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\\n\\n    uint96 payment = uint96(BASE_FEE + ((startGas - gasleft()) * GAS_PRICE_LINK));\\n    if (s_subscriptions[req.subId].balance < payment) {\\n      revert InsufficientBalance();\\n    }\\n    s_subscriptions[req.subId].balance -= payment;\\n    delete (s_requests[_requestId]);\\n    emit RandomWordsFulfilled(_requestId, _requestId, payment, success);\\n  }\\n\\n  /**\\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\\n   *\\n   * @param _subId the subscription to fund\\n   * @param _amount the amount to fund\\n   */\\n  function fundSubscription(uint64 _subId, uint96 _amount) public {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    uint96 oldBalance = s_subscriptions[_subId].balance;\\n    s_subscriptions[_subId].balance += _amount;\\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\\n  }\\n\\n  function requestRandomWords(\\n    bytes32 _keyHash,\\n    uint64 _subId,\\n    uint16 _minimumRequestConfirmations,\\n    uint32 _callbackGasLimit,\\n    uint32 _numWords\\n  ) external override returns (uint256) {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n\\n    uint256 requestId = s_nextRequestId++;\\n    uint256 preSeed = s_nextPreSeed++;\\n\\n    s_requests[requestId] = Request({subId: _subId, callbackGasLimit: _callbackGasLimit, numWords: _numWords});\\n\\n    emit RandomWordsRequested(\\n      _keyHash,\\n      requestId,\\n      preSeed,\\n      _subId,\\n      _minimumRequestConfirmations,\\n      _callbackGasLimit,\\n      _numWords,\\n      msg.sender\\n    );\\n    return requestId;\\n  }\\n\\n  function createSubscription() external override returns (uint64 _subId) {\\n    s_currentSubId++;\\n    s_subscriptions[s_currentSubId] = Subscription({owner: msg.sender, balance: 0});\\n    emit SubscriptionCreated(s_currentSubId, msg.sender);\\n    return s_currentSubId;\\n  }\\n\\n  function getSubscription(uint64 _subId)\\n    external\\n    view\\n    override\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    )\\n  {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    return (s_subscriptions[_subId].balance, 0, s_subscriptions[_subId].owner, new address[](0));\\n  }\\n\\n  function cancelSubscription(uint64 _subId, address _to) external override onlySubOwner(_subId) {\\n    emit SubscriptionCanceled(_subId, _to, s_subscriptions[_subId].balance);\\n    delete (s_subscriptions[_subId]);\\n  }\\n\\n  modifier onlySubOwner(uint64 _subId) {\\n    address owner = s_subscriptions[_subId].owner;\\n    if (owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    if (msg.sender != owner) {\\n      revert MustBeSubOwner(owner);\\n    }\\n    _;\\n  }\\n\\n  function getRequestConfig()\\n    external\\n    pure\\n    override\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    )\\n  {\\n    return (3, 2000000, new bytes32[](0));\\n  }\\n\\n  function addConsumer(uint64 _subId, address _consumer) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function removeConsumer(uint64 _subId, address _consumer) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function acceptSubscriptionOwnerTransfer(uint64 _subId) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n}\\n\",\"keccak256\":\"0xf1e7d4258d0608cb3c8d6c3adc47fb5c1b6b2c9f8d67ba40e62d72a85ebba908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":556,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_currentSubId","offset":0,"slot":"0","type":"t_uint64"},{"astId":559,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_nextRequestId","offset":0,"slot":"1","type":"t_uint256"},{"astId":562,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_nextPreSeed","offset":0,"slot":"2","type":"t_uint256"},{"astId":572,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_subscriptions","offset":0,"slot":"3","type":"t_mapping(t_uint64,t_struct(Subscription)567_storage)"},{"astId":584,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_requests","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_struct(Request)579_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_uint256,t_struct(Request)579_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)","numberOfBytes":"32","value":"t_struct(Request)579_storage"},"t_mapping(t_uint64,t_struct(Subscription)567_storage)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)","numberOfBytes":"32","value":"t_struct(Subscription)567_storage"},"t_struct(Request)579_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2Mock.Request","members":[{"astId":574,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"subId","offset":0,"slot":"0","type":"t_uint64"},{"astId":576,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"callbackGasLimit","offset":8,"slot":"0","type":"t_uint32"},{"astId":578,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"numWords","offset":12,"slot":"0","type":"t_uint32"}],"numberOfBytes":"32"},"t_struct(Subscription)567_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2Mock.Subscription","members":[{"astId":564,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":566,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"balance","offset":20,"slot":"0","type":"t_uint96"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}},"userdoc":{"kind":"user","methods":{"createSubscription()":{"notice":"Create a VRF subscription."},"fulfillRandomWords(uint256,address)":{"notice":"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer."},"fundSubscription(uint64,uint96)":{"notice":"fundSubscription allows funding a subscription with an arbitrary amount for testing."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"}},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1072,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1240":{"entryPoint":null,"id":1240,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":576,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":437,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":289,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":468,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":522,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":383,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":835,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":336,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":309,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":314,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":304,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":299,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":319,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:25","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:25","statements":[{"nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:25"},"nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:25"},"nodeType":"YulFunctionCall","src":"187:12:25"},"nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:25"},"nodeType":"YulFunctionCall","src":"310:12:25"},"nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nodeType":"YulBlock","src":"423:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:25"},"nodeType":"YulFunctionCall","src":"433:12:25"},"nodeType":"YulExpressionStatement","src":"433:12:25"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:25"},{"body":{"nodeType":"YulBlock","src":"546:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:25"},"nodeType":"YulFunctionCall","src":"556:12:25"},"nodeType":"YulExpressionStatement","src":"556:12:25"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:25"},{"body":{"nodeType":"YulBlock","src":"628:54:25","statements":[{"nodeType":"YulAssignment","src":"638:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:25"},"nodeType":"YulFunctionCall","src":"652:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:25"},"nodeType":"YulFunctionCall","src":"668:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:25"},"nodeType":"YulFunctionCall","src":"648:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:25","type":""}],"src":"580:102:25"},{"body":{"nodeType":"YulBlock","src":"716:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:25"},"nodeType":"YulFunctionCall","src":"726:88:25"},"nodeType":"YulExpressionStatement","src":"726:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:25"},"nodeType":"YulFunctionCall","src":"823:15:25"},"nodeType":"YulExpressionStatement","src":"823:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:25"},"nodeType":"YulFunctionCall","src":"847:15:25"},"nodeType":"YulExpressionStatement","src":"847:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:25"},{"body":{"nodeType":"YulBlock","src":"917:238:25","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:25"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:25"},"nodeType":"YulFunctionCall","src":"957:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:25"},"nodeType":"YulFunctionCall","src":"945:40:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:25"},"nodeType":"YulFunctionCall","src":"1098:18:25"},"nodeType":"YulExpressionStatement","src":"1098:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:25"},"nodeType":"YulFunctionCall","src":"1036:34:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:25"},"nodeType":"YulFunctionCall","src":"1072:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:25"},"nodeType":"YulFunctionCall","src":"1033:62:25"},"nodeType":"YulIf","src":"1030:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:25"},"nodeType":"YulFunctionCall","src":"1127:22:25"},"nodeType":"YulExpressionStatement","src":"1127:22:25"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:25","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:25","type":""}],"src":"874:281:25"},{"body":{"nodeType":"YulBlock","src":"1202:88:25","statements":[{"nodeType":"YulAssignment","src":"1212:30:25","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:25"},"nodeType":"YulFunctionCall","src":"1222:20:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:25"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:25"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:25"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:25"},"nodeType":"YulFunctionCall","src":"1251:33:25"},"nodeType":"YulExpressionStatement","src":"1251:33:25"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:25","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:25","type":""}],"src":"1161:129:25"},{"body":{"nodeType":"YulBlock","src":"1363:241:25","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:25"},"nodeType":"YulFunctionCall","src":"1470:18:25"},"nodeType":"YulExpressionStatement","src":"1470:18:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:25"},"nodeType":"YulFunctionCall","src":"1437:30:25"},"nodeType":"YulIf","src":"1434:56:25"},{"nodeType":"YulAssignment","src":"1500:37:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:25"},"nodeType":"YulFunctionCall","src":"1508:29:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:25"}]},{"nodeType":"YulAssignment","src":"1574:23:25","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:25"},"nodeType":"YulFunctionCall","src":"1582:15:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:25"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:25","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:25","type":""}],"src":"1296:308:25"},{"body":{"nodeType":"YulBlock","src":"1659:258:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1669:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1678:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1673:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1738:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1763:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"1768:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:25"},"nodeType":"YulFunctionCall","src":"1759:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1782:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"1787:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:25"},"nodeType":"YulFunctionCall","src":"1778:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1772:5:25"},"nodeType":"YulFunctionCall","src":"1772:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:25"},"nodeType":"YulFunctionCall","src":"1752:39:25"},"nodeType":"YulExpressionStatement","src":"1752:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1699:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"1702:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1696:2:25"},"nodeType":"YulFunctionCall","src":"1696:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1710:19:25","statements":[{"nodeType":"YulAssignment","src":"1712:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1721:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:25"},"nodeType":"YulFunctionCall","src":"1717:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"1692:3:25","statements":[]},"src":"1688:113:25"},{"body":{"nodeType":"YulBlock","src":"1835:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1885:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:25"},"nodeType":"YulFunctionCall","src":"1881:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:25"},"nodeType":"YulFunctionCall","src":"1874:27:25"},"nodeType":"YulExpressionStatement","src":"1874:27:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1816:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"1819:6:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1813:2:25"},"nodeType":"YulFunctionCall","src":"1813:13:25"},"nodeType":"YulIf","src":"1810:101:25"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1641:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1646:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1651:6:25","type":""}],"src":"1610:307:25"},{"body":{"nodeType":"YulBlock","src":"2018:326:25","statements":[{"nodeType":"YulAssignment","src":"2028:75:25","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2095:6:25"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2053:41:25"},"nodeType":"YulFunctionCall","src":"2053:49:25"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2037:15:25"},"nodeType":"YulFunctionCall","src":"2037:66:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2028:5:25"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2119:5:25"},{"name":"length","nodeType":"YulIdentifier","src":"2126:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:25"},"nodeType":"YulFunctionCall","src":"2112:21:25"},"nodeType":"YulExpressionStatement","src":"2112:21:25"},{"nodeType":"YulVariableDeclaration","src":"2142:27:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2157:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2164:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:25"},"nodeType":"YulFunctionCall","src":"2153:16:25"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2146:3:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2207:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2209:77:25"},"nodeType":"YulFunctionCall","src":"2209:79:25"},"nodeType":"YulExpressionStatement","src":"2209:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2188:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2193:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:25"},"nodeType":"YulFunctionCall","src":"2184:16:25"},{"name":"end","nodeType":"YulIdentifier","src":"2202:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2181:2:25"},"nodeType":"YulFunctionCall","src":"2181:25:25"},"nodeType":"YulIf","src":"2178:112:25"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2321:3:25"},{"name":"dst","nodeType":"YulIdentifier","src":"2326:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2331:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2299:21:25"},"nodeType":"YulFunctionCall","src":"2299:39:25"},"nodeType":"YulExpressionStatement","src":"2299:39:25"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1991:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1996:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"2004:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2012:5:25","type":""}],"src":"1923:421:25"},{"body":{"nodeType":"YulBlock","src":"2437:282:25","statements":[{"body":{"nodeType":"YulBlock","src":"2486:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2488:77:25"},"nodeType":"YulFunctionCall","src":"2488:79:25"},"nodeType":"YulExpressionStatement","src":"2488:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2473:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:25"},"nodeType":"YulFunctionCall","src":"2461:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"2480:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:25"},"nodeType":"YulFunctionCall","src":"2457:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:25"},"nodeType":"YulFunctionCall","src":"2450:35:25"},"nodeType":"YulIf","src":"2447:122:25"},{"nodeType":"YulVariableDeclaration","src":"2578:27:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2598:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:25"},"nodeType":"YulFunctionCall","src":"2592:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2582:6:25","type":""}]},{"nodeType":"YulAssignment","src":"2614:99:25","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2686:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2694:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:25"},"nodeType":"YulFunctionCall","src":"2682:17:25"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"2709:3:25"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2623:58:25"},"nodeType":"YulFunctionCall","src":"2623:90:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2614:5:25"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2415:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"2423:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2431:5:25","type":""}],"src":"2364:355:25"},{"body":{"nodeType":"YulBlock","src":"2839:739:25","statements":[{"body":{"nodeType":"YulBlock","src":"2885:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2887:77:25"},"nodeType":"YulFunctionCall","src":"2887:79:25"},"nodeType":"YulExpressionStatement","src":"2887:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2869:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2856:3:25"},"nodeType":"YulFunctionCall","src":"2856:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"2881:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2852:3:25"},"nodeType":"YulFunctionCall","src":"2852:32:25"},"nodeType":"YulIf","src":"2849:119:25"},{"nodeType":"YulBlock","src":"2978:291:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2993:38:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3028:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:25"},"nodeType":"YulFunctionCall","src":"3013:17:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3007:5:25"},"nodeType":"YulFunctionCall","src":"3007:24:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2997:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3078:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3080:77:25"},"nodeType":"YulFunctionCall","src":"3080:79:25"},"nodeType":"YulExpressionStatement","src":"3080:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3050:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"3058:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3047:2:25"},"nodeType":"YulFunctionCall","src":"3047:30:25"},"nodeType":"YulIf","src":"3044:117:25"},{"nodeType":"YulAssignment","src":"3175:84:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3242:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3227:3:25"},"nodeType":"YulFunctionCall","src":"3227:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3251:7:25"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3185:41:25"},"nodeType":"YulFunctionCall","src":"3185:74:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3175:6:25"}]}]},{"nodeType":"YulBlock","src":"3279:292:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3294:39:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3318:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3329:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3314:3:25"},"nodeType":"YulFunctionCall","src":"3314:18:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3308:5:25"},"nodeType":"YulFunctionCall","src":"3308:25:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3298:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3380:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3382:77:25"},"nodeType":"YulFunctionCall","src":"3382:79:25"},"nodeType":"YulExpressionStatement","src":"3382:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3352:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"3360:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3349:2:25"},"nodeType":"YulFunctionCall","src":"3349:30:25"},"nodeType":"YulIf","src":"3346:117:25"},{"nodeType":"YulAssignment","src":"3477:84:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3533:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3544:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3529:3:25"},"nodeType":"YulFunctionCall","src":"3529:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3553:7:25"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3487:41:25"},"nodeType":"YulFunctionCall","src":"3487:74:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3477:6:25"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2801:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2812:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2824:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2832:6:25","type":""}],"src":"2725:853:25"},{"body":{"nodeType":"YulBlock","src":"3612:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3629:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3632:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3622:6:25"},"nodeType":"YulFunctionCall","src":"3622:88:25"},"nodeType":"YulExpressionStatement","src":"3622:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3726:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3729:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3719:6:25"},"nodeType":"YulFunctionCall","src":"3719:15:25"},"nodeType":"YulExpressionStatement","src":"3719:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3750:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3753:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3743:6:25"},"nodeType":"YulFunctionCall","src":"3743:15:25"},"nodeType":"YulExpressionStatement","src":"3743:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3584:180:25"},{"body":{"nodeType":"YulBlock","src":"3821:269:25","statements":[{"nodeType":"YulAssignment","src":"3831:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3845:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3841:3:25"},"nodeType":"YulFunctionCall","src":"3841:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3831:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"3862:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3892:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"3898:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3888:3:25"},"nodeType":"YulFunctionCall","src":"3888:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3866:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3939:51:25","statements":[{"nodeType":"YulAssignment","src":"3953:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3967:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"3975:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3963:3:25"},"nodeType":"YulFunctionCall","src":"3963:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3953:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3919:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3912:6:25"},"nodeType":"YulFunctionCall","src":"3912:26:25"},"nodeType":"YulIf","src":"3909:81:25"},{"body":{"nodeType":"YulBlock","src":"4042:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4056:16:25"},"nodeType":"YulFunctionCall","src":"4056:18:25"},"nodeType":"YulExpressionStatement","src":"4056:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4006:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4029:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4037:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4026:2:25"},"nodeType":"YulFunctionCall","src":"4026:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4003:2:25"},"nodeType":"YulFunctionCall","src":"4003:38:25"},"nodeType":"YulIf","src":"4000:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3805:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3814:6:25","type":""}],"src":"3770:320:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620026da380380620026da8339818101604052810190620000379190620002be565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b505050620003a8565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b60208210811415620003a257620003a162000343565b5b50919050565b61232280620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611633565b6102bc565b6040516100fb919061167b565b60405180910390f35b61010c61039e565b604051610119919061172f565b60405180910390f35b61013c60048036038101906101379190611787565b610430565b60405161014991906117f5565b60405180910390f35b61016c6004803603810190610167919061183c565b610476565b005b6101886004803603810190610183919061187c565b61058e565b005b6101a4600480360381019061019f919061187c565b6105ee565b005b6101c060048036038101906101bb9190611787565b61060e565b6040516101cd91906117f5565b60405180910390f35b6101f060048036038101906101eb91906118cf565b610695565b6040516101fd919061190b565b60405180910390f35b61020e61074d565b60405161021b919061172f565b60405180910390f35b61023e60048036038101906102399190611952565b6107df565b005b61025a60048036038101906102559190611ac7565b6107f5565b005b61027660048036038101906102719190611787565b610857565b604051610283919061172f565b60405180910390f35b6102a660048036038101906102a19190611b4a565b6108bf565b6040516102b3919061167b565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611bb9565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611bb9565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611c5d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611cef565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611d81565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611ded565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611e7f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611bb9565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611bb9565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611d81565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a7929190611edb565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611ded565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611f71565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90612003565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611f71565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e5383838360016112b4565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb9061206f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff5919061167b565b60405180910390a3505050565b61100d848484610b5e565b611019848484846112ba565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90612101565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611451565b01905060008167ffffffffffffffff8111156110a3576110a261199c565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b612121565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60018111156112ae57600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146112225780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461121a919061217f565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112ad5780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112a591906121b3565b925050819055505b5b50505050565b50505050565b60006112db8473ffffffffffffffffffffffffffffffffffffffff166115a4565b15611444578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611304610a08565b8786866040518563ffffffff1660e01b8152600401611326949392919061225e565b602060405180830381600087803b15801561134057600080fd5b505af192505050801561137157506040513d601f19601f8201168201806040525081019061136e91906122bf565b60015b6113f4573d80600081146113a1576040519150601f19603f3d011682016040523d82523d6000602084013e6113a6565b606091505b506000815114156113ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e390612101565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611449565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106114af577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816114a5576114a4612121565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106114ec576d04ee2d6d415b85acef810000000083816114e2576114e1612121565b5b0492506020810190505b662386f26fc10000831061151b57662386f26fc10000838161151157611510612121565b5b0492506010810190505b6305f5e1008310611544576305f5e100838161153a57611539612121565b5b0492506008810190505b612710831061156957612710838161155f5761155e612121565b5b0492506004810190505b6064831061158c576064838161158257611581612121565b5b0492506002810190505b600a831061159b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611610816115db565b811461161b57600080fd5b50565b60008135905061162d81611607565b92915050565b600060208284031215611649576116486115d1565b5b60006116578482850161161e565b91505092915050565b60008115159050919050565b61167581611660565b82525050565b6000602082019050611690600083018461166c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116d05780820151818401526020810190506116b5565b838111156116df576000848401525b50505050565b6000601f19601f8301169050919050565b600061170182611696565b61170b81856116a1565b935061171b8185602086016116b2565b611724816116e5565b840191505092915050565b6000602082019050818103600083015261174981846116f6565b905092915050565b6000819050919050565b61176481611751565b811461176f57600080fd5b50565b6000813590506117818161175b565b92915050565b60006020828403121561179d5761179c6115d1565b5b60006117ab84828501611772565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117df826117b4565b9050919050565b6117ef816117d4565b82525050565b600060208201905061180a60008301846117e6565b92915050565b611819816117d4565b811461182457600080fd5b50565b60008135905061183681611810565b92915050565b60008060408385031215611853576118526115d1565b5b600061186185828601611827565b925050602061187285828601611772565b9150509250929050565b600080600060608486031215611895576118946115d1565b5b60006118a386828701611827565b93505060206118b486828701611827565b92505060406118c586828701611772565b9150509250925092565b6000602082840312156118e5576118e46115d1565b5b60006118f384828501611827565b91505092915050565b61190581611751565b82525050565b600060208201905061192060008301846118fc565b92915050565b61192f81611660565b811461193a57600080fd5b50565b60008135905061194c81611926565b92915050565b60008060408385031215611969576119686115d1565b5b600061197785828601611827565b92505060206119888582860161193d565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119d4826116e5565b810181811067ffffffffffffffff821117156119f3576119f261199c565b5b80604052505050565b6000611a066115c7565b9050611a1282826119cb565b919050565b600067ffffffffffffffff821115611a3257611a3161199c565b5b611a3b826116e5565b9050602081019050919050565b82818337600083830152505050565b6000611a6a611a6584611a17565b6119fc565b905082815260208101848484011115611a8657611a85611997565b5b611a91848285611a48565b509392505050565b600082601f830112611aae57611aad611992565b5b8135611abe848260208601611a57565b91505092915050565b60008060008060808587031215611ae157611ae06115d1565b5b6000611aef87828801611827565b9450506020611b0087828801611827565b9350506040611b1187828801611772565b925050606085013567ffffffffffffffff811115611b3257611b316115d6565b5b611b3e87828801611a99565b91505092959194509250565b60008060408385031215611b6157611b606115d1565b5b6000611b6f85828601611827565b9250506020611b8085828601611827565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611bd157607f821691505b60208210811415611be557611be4611b8a565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611c476021836116a1565b9150611c5282611beb565b604082019050919050565b60006020820190508181036000830152611c7681611c3a565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611cd9603d836116a1565b9150611ce482611c7d565b604082019050919050565b60006020820190508181036000830152611d0881611ccc565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611d6b602d836116a1565b9150611d7682611d0f565b604082019050919050565b60006020820190508181036000830152611d9a81611d5e565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611dd76018836116a1565b9150611de282611da1565b602082019050919050565b60006020820190508181036000830152611e0681611dca565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611e696029836116a1565b9150611e7482611e0d565b604082019050919050565b60006020820190508181036000830152611e9881611e5c565b9050919050565b600081905092915050565b6000611eb582611696565b611ebf8185611e9f565b9350611ecf8185602086016116b2565b80840191505092915050565b6000611ee78285611eaa565b9150611ef38284611eaa565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611f5b6025836116a1565b9150611f6682611eff565b604082019050919050565b60006020820190508181036000830152611f8a81611f4e565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611fed6024836116a1565b9150611ff882611f91565b604082019050919050565b6000602082019050818103600083015261201c81611fe0565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006120596019836116a1565b915061206482612023565b602082019050919050565b600060208201905081810360008301526120888161204c565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006120eb6032836116a1565b91506120f68261208f565b604082019050919050565b6000602082019050818103600083015261211a816120de565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061218a82611751565b915061219583611751565b9250828210156121a8576121a7612150565b5b828203905092915050565b60006121be82611751565b91506121c983611751565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156121fe576121fd612150565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b600061223082612209565b61223a8185612214565b935061224a8185602086016116b2565b612253816116e5565b840191505092915050565b600060808201905061227360008301876117e6565b61228060208301866117e6565b61228d60408301856118fc565b818103606083015261229f8184612225565b905095945050505050565b6000815190506122b981611607565b92915050565b6000602082840312156122d5576122d46115d1565b5b60006122e3848285016122aa565b9150509291505056fea2646970667358221220a50925419473cc2c56322ce0cfa3d3ec5c3641371e437c4800e68b3475fd92c064736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x26DA CODESIZE SUB DUP1 PUSH3 0x26DA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2BE JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x18A DUP3 PUSH3 0x13F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AB PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C1 PUSH3 0x121 JUMP JUMPDEST SWAP1 POP PUSH3 0x1CF DUP3 DUP3 PUSH3 0x17F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH3 0x1F1 PUSH3 0x150 JUMP JUMPDEST JUMPDEST PUSH3 0x1FD DUP3 PUSH3 0x13F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x22A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x23A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x257 PUSH3 0x251 DUP5 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x1B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x276 JUMPI PUSH3 0x275 PUSH3 0x13A JUMP JUMPDEST JUMPDEST PUSH3 0x283 DUP5 DUP3 DUP6 PUSH3 0x20A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A3 JUMPI PUSH3 0x2A2 PUSH3 0x135 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D8 JUMPI PUSH3 0x2D7 PUSH3 0x12B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F8 PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x307 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x32B JUMPI PUSH3 0x32A PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x339 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x38B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3A2 JUMPI PUSH3 0x3A1 PUSH3 0x343 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2322 DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x183C JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x187C JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x187C JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x190B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1CEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1E7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x2003 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x206F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1451 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x199C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1222 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x217F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AD JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12A5 SWAP2 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A4 JUMP JUMPDEST ISZERO PUSH2 0x1444 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1304 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1326 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x225E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1371 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136E SWAP2 SWAP1 PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13F4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13A1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x13EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E3 SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x14AF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x14EC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x14E2 JUMPI PUSH2 0x14E1 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x151B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1544 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x153A JUMPI PUSH2 0x1539 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1569 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x155F JUMPI PUSH2 0x155E PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x158C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x159B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1610 DUP2 PUSH2 0x15DB JUMP JUMPDEST DUP2 EQ PUSH2 0x161B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x162D DUP2 PUSH2 0x1607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1649 JUMPI PUSH2 0x1648 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1657 DUP5 DUP3 DUP6 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1675 DUP2 PUSH2 0x1660 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1690 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x166C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16B5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16DF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1701 DUP3 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x170B DUP2 DUP6 PUSH2 0x16A1 JUMP JUMPDEST SWAP4 POP PUSH2 0x171B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x1724 DUP2 PUSH2 0x16E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1749 DUP2 DUP5 PUSH2 0x16F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1764 DUP2 PUSH2 0x1751 JUMP JUMPDEST DUP2 EQ PUSH2 0x176F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1781 DUP2 PUSH2 0x175B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AB DUP5 DUP3 DUP6 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DF DUP3 PUSH2 0x17B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17EF DUP2 PUSH2 0x17D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x180A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1819 DUP2 PUSH2 0x17D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1836 DUP2 PUSH2 0x1810 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1853 JUMPI PUSH2 0x1852 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1861 DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1872 DUP6 DUP3 DUP7 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1895 JUMPI PUSH2 0x1894 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18A3 DUP7 DUP3 DUP8 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18B4 DUP7 DUP3 DUP8 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18C5 DUP7 DUP3 DUP8 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E5 JUMPI PUSH2 0x18E4 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18F3 DUP5 DUP3 DUP6 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1905 DUP2 PUSH2 0x1751 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1920 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x192F DUP2 PUSH2 0x1660 JUMP JUMPDEST DUP2 EQ PUSH2 0x193A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x194C DUP2 PUSH2 0x1926 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1969 JUMPI PUSH2 0x1968 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1977 DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1988 DUP6 DUP3 DUP7 ADD PUSH2 0x193D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x19D4 DUP3 PUSH2 0x16E5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x19F3 JUMPI PUSH2 0x19F2 PUSH2 0x199C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A06 PUSH2 0x15C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A12 DUP3 DUP3 PUSH2 0x19CB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A32 JUMPI PUSH2 0x1A31 PUSH2 0x199C JUMP JUMPDEST JUMPDEST PUSH2 0x1A3B DUP3 PUSH2 0x16E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6A PUSH2 0x1A65 DUP5 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0x19FC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A86 JUMPI PUSH2 0x1A85 PUSH2 0x1997 JUMP JUMPDEST JUMPDEST PUSH2 0x1A91 DUP5 DUP3 DUP6 PUSH2 0x1A48 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AAE JUMPI PUSH2 0x1AAD PUSH2 0x1992 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1ABE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1AE1 JUMPI PUSH2 0x1AE0 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AEF DUP8 DUP3 DUP9 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1B00 DUP8 DUP3 DUP9 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1B11 DUP8 DUP3 DUP9 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B32 JUMPI PUSH2 0x1B31 PUSH2 0x15D6 JUMP JUMPDEST JUMPDEST PUSH2 0x1B3E DUP8 DUP3 DUP9 ADD PUSH2 0x1A99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B61 JUMPI PUSH2 0x1B60 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B6F DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B80 DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BD1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1BE5 JUMPI PUSH2 0x1BE4 PUSH2 0x1B8A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C47 PUSH1 0x21 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C52 DUP3 PUSH2 0x1BEB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C76 DUP2 PUSH2 0x1C3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD9 PUSH1 0x3D DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE4 DUP3 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D08 DUP2 PUSH2 0x1CCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6B PUSH1 0x2D DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D76 DUP3 PUSH2 0x1D0F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D9A DUP2 PUSH2 0x1D5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD7 PUSH1 0x18 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE2 DUP3 PUSH2 0x1DA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E06 DUP2 PUSH2 0x1DCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E69 PUSH1 0x29 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E74 DUP3 PUSH2 0x1E0D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E98 DUP2 PUSH2 0x1E5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB5 DUP3 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x1EBF DUP2 DUP6 PUSH2 0x1E9F JUMP JUMPDEST SWAP4 POP PUSH2 0x1ECF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16B2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE7 DUP3 DUP6 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF3 DUP3 DUP5 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F5B PUSH1 0x25 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F66 DUP3 PUSH2 0x1EFF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F8A DUP2 PUSH2 0x1F4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FED PUSH1 0x24 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF8 DUP3 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x201C DUP2 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2059 PUSH1 0x19 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2064 DUP3 PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2088 DUP2 PUSH2 0x204C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EB PUSH1 0x32 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F6 DUP3 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x211A DUP2 PUSH2 0x20DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x218A DUP3 PUSH2 0x1751 JUMP JUMPDEST SWAP2 POP PUSH2 0x2195 DUP4 PUSH2 0x1751 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x21A8 JUMPI PUSH2 0x21A7 PUSH2 0x2150 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BE DUP3 PUSH2 0x1751 JUMP JUMPDEST SWAP2 POP PUSH2 0x21C9 DUP4 PUSH2 0x1751 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x21FE JUMPI PUSH2 0x21FD PUSH2 0x2150 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2230 DUP3 PUSH2 0x2209 JUMP JUMPDEST PUSH2 0x223A DUP2 DUP6 PUSH2 0x2214 JUMP JUMPDEST SWAP4 POP PUSH2 0x224A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x2253 DUP2 PUSH2 0x16E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2273 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x2280 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x228D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18FC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x229F DUP2 DUP5 PUSH2 0x2225 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22B9 DUP2 PUSH2 0x1607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22D5 JUMPI PUSH2 0x22D4 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22E3 DUP5 DUP3 DUP6 ADD PUSH2 0x22AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 MULMOD 0x25 COINBASE SWAP5 PUSH20 0xCC2C56322CE0CFA3D3EC5C3641371E437C4800E6 DUP12 CALLVALUE PUSH22 0xFD92C064736F6C634300080900330000000000000000 ","sourceMap":"628:16327:9:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;628:16327;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:25:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;628:16327:9:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2121":{"entryPoint":4788,"id":2121,"parameterSlots":4,"returnSlots":0},"@_approve_1954":{"entryPoint":2576,"id":1954,"parameterSlots":2,"returnSlots":0},"@_baseURI_1391":{"entryPoint":4190,"id":1391,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2108":{"entryPoint":4494,"id":2108,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_2062":{"entryPoint":4794,"id":2062,"parameterSlots":4,"returnSlots":1},"@_exists_1623":{"entryPoint":4429,"id":1623,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1657":{"entryPoint":2761,"id":1657,"parameterSlots":2,"returnSlots":1},"@_msgSender_2750":{"entryPoint":2568,"id":2750,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1605":{"entryPoint":3672,"id":1605,"parameterSlots":1,"returnSlots":1},"@_requireMinted_2000":{"entryPoint":2493,"id":2000,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_1592":{"entryPoint":4098,"id":1592,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1986":{"entryPoint":3733,"id":1986,"parameterSlots":3,"returnSlots":0},"@_transfer_1930":{"entryPoint":2910,"id":1930,"parameterSlots":3,"returnSlots":0},"@approve_1434":{"entryPoint":1142,"id":1434,"parameterSlots":2,"returnSlots":0},"@balanceOf_1295":{"entryPoint":1685,"id":1295,"parameterSlots":1,"returnSlots":1},"@getApproved_1452":{"entryPoint":1072,"id":1452,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1487":{"entryPoint":2239,"id":1487,"parameterSlots":2,"returnSlots":1},"@isContract_2426":{"entryPoint":5540,"id":2426,"parameterSlots":1,"returnSlots":1},"@log10_3673":{"entryPoint":5201,"id":3673,"parameterSlots":1,"returnSlots":1},"@name_1333":{"entryPoint":926,"id":1333,"parameterSlots":0,"returnSlots":1},"@ownerOf_1323":{"entryPoint":1550,"id":1323,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_1533":{"entryPoint":1518,"id":1533,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1563":{"entryPoint":2037,"id":1563,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1469":{"entryPoint":2015,"id":1469,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1271":{"entryPoint":700,"id":1271,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2958":{"entryPoint":2387,"id":2958,"parameterSlots":1,"returnSlots":1},"@symbol_1343":{"entryPoint":1869,"id":1343,"parameterSlots":0,"returnSlots":1},"@toString_2818":{"entryPoint":4213,"id":2818,"parameterSlots":1,"returnSlots":1},"@tokenURI_1382":{"entryPoint":2135,"id":1382,"parameterSlots":1,"returnSlots":1},"@transferFrom_1514":{"entryPoint":1422,"id":1514,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6743,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6183,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":6461,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5662,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8874,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6809,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6002,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6351,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6986,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6268,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6855,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6482,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6204,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8895,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6023,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6118,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5740,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8741,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5878,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7850,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":7518,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":8414,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":8014,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":8160,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":8268,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":7772,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":7626,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":7226,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":7372,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6396,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7899,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6133,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8798,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5755,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5935,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7553,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8449,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8049,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8195,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8303,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7807,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7661,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7261,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7407,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6411,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6652,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5575,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6679,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8713,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5782,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8724,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5793,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7839,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8627,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8575,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6100,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5728,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5595,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6068,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5969,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":6728,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":5810,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7097,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6603,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":8528,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8481,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7050,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6556,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":6546,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":6551,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5590,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5585,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5861,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":7439,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8335,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":7935,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":8081,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":8227,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":7693,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":7585,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":7147,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":7293,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6160,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6438,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5639,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5979,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23861:25","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:25","statements":[{"nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:25"},"nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:25"},"nodeType":"YulFunctionCall","src":"187:12:25"},"nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:25"},"nodeType":"YulFunctionCall","src":"310:12:25"},"nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nodeType":"YulBlock","src":"378:105:25","statements":[{"nodeType":"YulAssignment","src":"388:89:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:25","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:25"},"nodeType":"YulFunctionCall","src":"399:78:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:25"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:25","type":""}],"src":"334:149:25"},{"body":{"nodeType":"YulBlock","src":"531:78:25","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:25"},"nodeType":"YulFunctionCall","src":"589:12:25"},"nodeType":"YulExpressionStatement","src":"589:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:25"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:25"},"nodeType":"YulFunctionCall","src":"561:23:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:25"},"nodeType":"YulFunctionCall","src":"551:34:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:25"},"nodeType":"YulFunctionCall","src":"544:42:25"},"nodeType":"YulIf","src":"541:62:25"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:25","type":""}],"src":"489:120:25"},{"body":{"nodeType":"YulBlock","src":"666:86:25","statements":[{"nodeType":"YulAssignment","src":"676:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:25"},"nodeType":"YulFunctionCall","src":"685:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:25"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:25"},"nodeType":"YulFunctionCall","src":"714:32:25"},"nodeType":"YulExpressionStatement","src":"714:32:25"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:25","type":""}],"src":"615:137:25"},{"body":{"nodeType":"YulBlock","src":"823:262:25","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:25"},"nodeType":"YulFunctionCall","src":"871:79:25"},"nodeType":"YulExpressionStatement","src":"871:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:25"},"nodeType":"YulFunctionCall","src":"840:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:25"},"nodeType":"YulFunctionCall","src":"836:32:25"},"nodeType":"YulIf","src":"833:119:25"},{"nodeType":"YulBlock","src":"962:116:25","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:25"},"nodeType":"YulFunctionCall","src":"1036:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:25"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:25"},"nodeType":"YulFunctionCall","src":"1016:52:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:25","type":""}],"src":"758:327:25"},{"body":{"nodeType":"YulBlock","src":"1133:48:25","statements":[{"nodeType":"YulAssignment","src":"1143:32:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:25"},"nodeType":"YulFunctionCall","src":"1161:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:25"},"nodeType":"YulFunctionCall","src":"1154:21:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:25"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:25","type":""}],"src":"1091:90:25"},{"body":{"nodeType":"YulBlock","src":"1246:50:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:25"},"nodeType":"YulFunctionCall","src":"1268:21:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:25"},"nodeType":"YulFunctionCall","src":"1256:34:25"},"nodeType":"YulExpressionStatement","src":"1256:34:25"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:25","type":""}],"src":"1187:109:25"},{"body":{"nodeType":"YulBlock","src":"1394:118:25","statements":[{"nodeType":"YulAssignment","src":"1404:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:25"},"nodeType":"YulFunctionCall","src":"1412:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:25"},"nodeType":"YulFunctionCall","src":"1487:17:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:25"},"nodeType":"YulFunctionCall","src":"1440:65:25"},"nodeType":"YulExpressionStatement","src":"1440:65:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:25","type":""}],"src":"1302:210:25"},{"body":{"nodeType":"YulBlock","src":"1577:40:25","statements":[{"nodeType":"YulAssignment","src":"1588:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:25"},"nodeType":"YulFunctionCall","src":"1598:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:25","type":""}],"src":"1518:99:25"},{"body":{"nodeType":"YulBlock","src":"1719:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:25"},"nodeType":"YulFunctionCall","src":"1729:19:25"},"nodeType":"YulExpressionStatement","src":"1729:19:25"},{"nodeType":"YulAssignment","src":"1757:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:25"},"nodeType":"YulFunctionCall","src":"1772:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:25","type":""}],"src":"1623:169:25"},{"body":{"nodeType":"YulBlock","src":"1847:258:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:25"},"nodeType":"YulFunctionCall","src":"1947:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:25"},"nodeType":"YulFunctionCall","src":"1966:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:25"},"nodeType":"YulFunctionCall","src":"1960:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:25"},"nodeType":"YulFunctionCall","src":"1940:39:25"},"nodeType":"YulExpressionStatement","src":"1940:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:25"},"nodeType":"YulFunctionCall","src":"1884:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:25","statements":[{"nodeType":"YulAssignment","src":"1900:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:25"},"nodeType":"YulFunctionCall","src":"1905:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:25","statements":[]},"src":"1876:113:25"},{"body":{"nodeType":"YulBlock","src":"2023:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:25"},"nodeType":"YulFunctionCall","src":"2069:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:25"},"nodeType":"YulFunctionCall","src":"2062:27:25"},"nodeType":"YulExpressionStatement","src":"2062:27:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:25"},"nodeType":"YulFunctionCall","src":"2001:13:25"},"nodeType":"YulIf","src":"1998:101:25"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:25","type":""}],"src":"1798:307:25"},{"body":{"nodeType":"YulBlock","src":"2159:54:25","statements":[{"nodeType":"YulAssignment","src":"2169:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:25"},"nodeType":"YulFunctionCall","src":"2183:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:25"},"nodeType":"YulFunctionCall","src":"2199:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:25"},"nodeType":"YulFunctionCall","src":"2179:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:25","type":""}],"src":"2111:102:25"},{"body":{"nodeType":"YulBlock","src":"2311:272:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:25"},"nodeType":"YulFunctionCall","src":"2335:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:25","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:25"},"nodeType":"YulFunctionCall","src":"2390:71:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:25"},"nodeType":"YulFunctionCall","src":"2492:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:25"},"nodeType":"YulFunctionCall","src":"2470:52:25"},"nodeType":"YulExpressionStatement","src":"2470:52:25"},{"nodeType":"YulAssignment","src":"2531:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:25"},"nodeType":"YulFunctionCall","src":"2547:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:25"},"nodeType":"YulFunctionCall","src":"2538:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:25","type":""}],"src":"2219:364:25"},{"body":{"nodeType":"YulBlock","src":"2707:195:25","statements":[{"nodeType":"YulAssignment","src":"2717:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:25"},"nodeType":"YulFunctionCall","src":"2725:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:25"},"nodeType":"YulFunctionCall","src":"2760:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:25"},"nodeType":"YulFunctionCall","src":"2779:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:25"},"nodeType":"YulFunctionCall","src":"2753:47:25"},"nodeType":"YulExpressionStatement","src":"2753:47:25"},{"nodeType":"YulAssignment","src":"2809:86:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:25"},"nodeType":"YulFunctionCall","src":"2817:78:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:25","type":""}],"src":"2589:313:25"},{"body":{"nodeType":"YulBlock","src":"2953:32:25","statements":[{"nodeType":"YulAssignment","src":"2963:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:25","type":""}],"src":"2908:77:25"},{"body":{"nodeType":"YulBlock","src":"3034:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:25"},"nodeType":"YulFunctionCall","src":"3093:12:25"},"nodeType":"YulExpressionStatement","src":"3093:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:25"},"nodeType":"YulFunctionCall","src":"3064:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:25"},"nodeType":"YulFunctionCall","src":"3054:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:25"},"nodeType":"YulFunctionCall","src":"3047:43:25"},"nodeType":"YulIf","src":"3044:63:25"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:25","type":""}],"src":"2991:122:25"},{"body":{"nodeType":"YulBlock","src":"3171:87:25","statements":[{"nodeType":"YulAssignment","src":"3181:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:25"},"nodeType":"YulFunctionCall","src":"3190:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:25"},"nodeType":"YulFunctionCall","src":"3219:33:25"},"nodeType":"YulExpressionStatement","src":"3219:33:25"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:25","type":""}],"src":"3119:139:25"},{"body":{"nodeType":"YulBlock","src":"3330:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:25"},"nodeType":"YulFunctionCall","src":"3378:79:25"},"nodeType":"YulExpressionStatement","src":"3378:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:25"},"nodeType":"YulFunctionCall","src":"3347:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:25"},"nodeType":"YulFunctionCall","src":"3343:32:25"},"nodeType":"YulIf","src":"3340:119:25"},{"nodeType":"YulBlock","src":"3469:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:25","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:25"},"nodeType":"YulFunctionCall","src":"3544:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:25"},"nodeType":"YulFunctionCall","src":"3523:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:25","type":""}],"src":"3264:329:25"},{"body":{"nodeType":"YulBlock","src":"3644:81:25","statements":[{"nodeType":"YulAssignment","src":"3654:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:25"},"nodeType":"YulFunctionCall","src":"3665:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:25","type":""}],"src":"3599:126:25"},{"body":{"nodeType":"YulBlock","src":"3776:51:25","statements":[{"nodeType":"YulAssignment","src":"3786:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:25"},"nodeType":"YulFunctionCall","src":"3797:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:25","type":""}],"src":"3731:96:25"},{"body":{"nodeType":"YulBlock","src":"3898:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:25"},"nodeType":"YulFunctionCall","src":"3920:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:25"},"nodeType":"YulFunctionCall","src":"3908:37:25"},"nodeType":"YulExpressionStatement","src":"3908:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:25","type":""}],"src":"3833:118:25"},{"body":{"nodeType":"YulBlock","src":"4055:124:25","statements":[{"nodeType":"YulAssignment","src":"4065:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:25"},"nodeType":"YulFunctionCall","src":"4073:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:25"},"nodeType":"YulFunctionCall","src":"4154:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:25"},"nodeType":"YulFunctionCall","src":"4101:71:25"},"nodeType":"YulExpressionStatement","src":"4101:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:25","type":""}],"src":"3957:222:25"},{"body":{"nodeType":"YulBlock","src":"4228:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:25"},"nodeType":"YulFunctionCall","src":"4287:12:25"},"nodeType":"YulExpressionStatement","src":"4287:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:25"},"nodeType":"YulFunctionCall","src":"4258:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:25"},"nodeType":"YulFunctionCall","src":"4248:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:25"},"nodeType":"YulFunctionCall","src":"4241:43:25"},"nodeType":"YulIf","src":"4238:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:25","type":""}],"src":"4185:122:25"},{"body":{"nodeType":"YulBlock","src":"4365:87:25","statements":[{"nodeType":"YulAssignment","src":"4375:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:25"},"nodeType":"YulFunctionCall","src":"4384:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:25"},"nodeType":"YulFunctionCall","src":"4413:33:25"},"nodeType":"YulExpressionStatement","src":"4413:33:25"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:25","type":""}],"src":"4313:139:25"},{"body":{"nodeType":"YulBlock","src":"4541:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:25"},"nodeType":"YulFunctionCall","src":"4589:79:25"},"nodeType":"YulExpressionStatement","src":"4589:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:25"},"nodeType":"YulFunctionCall","src":"4558:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:25"},"nodeType":"YulFunctionCall","src":"4554:32:25"},"nodeType":"YulIf","src":"4551:119:25"},{"nodeType":"YulBlock","src":"4680:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:25"},"nodeType":"YulFunctionCall","src":"4755:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:25"},"nodeType":"YulFunctionCall","src":"4734:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:25"}]}]},{"nodeType":"YulBlock","src":"4807:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:25"},"nodeType":"YulFunctionCall","src":"4883:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:25"},"nodeType":"YulFunctionCall","src":"4862:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:25","type":""}],"src":"4458:474:25"},{"body":{"nodeType":"YulBlock","src":"5038:519:25","statements":[{"body":{"nodeType":"YulBlock","src":"5084:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5086:77:25"},"nodeType":"YulFunctionCall","src":"5086:79:25"},"nodeType":"YulExpressionStatement","src":"5086:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5059:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5068:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5055:3:25"},"nodeType":"YulFunctionCall","src":"5055:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"5080:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5051:3:25"},"nodeType":"YulFunctionCall","src":"5051:32:25"},"nodeType":"YulIf","src":"5048:119:25"},{"nodeType":"YulBlock","src":"5177:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5192:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5206:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5196:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5221:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5256:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5267:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:25"},"nodeType":"YulFunctionCall","src":"5252:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5276:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5231:20:25"},"nodeType":"YulFunctionCall","src":"5231:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5221:6:25"}]}]},{"nodeType":"YulBlock","src":"5304:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5319:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5333:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5323:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5349:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5395:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:25"},"nodeType":"YulFunctionCall","src":"5380:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5404:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5359:20:25"},"nodeType":"YulFunctionCall","src":"5359:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5349:6:25"}]}]},{"nodeType":"YulBlock","src":"5432:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5447:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5461:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5451:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5477:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5512:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5523:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5508:3:25"},"nodeType":"YulFunctionCall","src":"5508:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5532:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5487:20:25"},"nodeType":"YulFunctionCall","src":"5487:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5477:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4992:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5003:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5015:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5023:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5031:6:25","type":""}],"src":"4938:619:25"},{"body":{"nodeType":"YulBlock","src":"5629:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"5675:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5677:77:25"},"nodeType":"YulFunctionCall","src":"5677:79:25"},"nodeType":"YulExpressionStatement","src":"5677:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5650:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5659:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5646:3:25"},"nodeType":"YulFunctionCall","src":"5646:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"5671:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5642:3:25"},"nodeType":"YulFunctionCall","src":"5642:32:25"},"nodeType":"YulIf","src":"5639:119:25"},{"nodeType":"YulBlock","src":"5768:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5783:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5797:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5787:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5812:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5847:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5858:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5843:3:25"},"nodeType":"YulFunctionCall","src":"5843:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5867:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5822:20:25"},"nodeType":"YulFunctionCall","src":"5822:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5812:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5599:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5610:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5622:6:25","type":""}],"src":"5563:329:25"},{"body":{"nodeType":"YulBlock","src":"5963:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5980:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6003:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5985:17:25"},"nodeType":"YulFunctionCall","src":"5985:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5973:6:25"},"nodeType":"YulFunctionCall","src":"5973:37:25"},"nodeType":"YulExpressionStatement","src":"5973:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5951:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5958:3:25","type":""}],"src":"5898:118:25"},{"body":{"nodeType":"YulBlock","src":"6120:124:25","statements":[{"nodeType":"YulAssignment","src":"6130:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6142:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6153:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6138:3:25"},"nodeType":"YulFunctionCall","src":"6138:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6130:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6210:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6223:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6234:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6219:3:25"},"nodeType":"YulFunctionCall","src":"6219:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6166:43:25"},"nodeType":"YulFunctionCall","src":"6166:71:25"},"nodeType":"YulExpressionStatement","src":"6166:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6092:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6104:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6115:4:25","type":""}],"src":"6022:222:25"},{"body":{"nodeType":"YulBlock","src":"6290:76:25","statements":[{"body":{"nodeType":"YulBlock","src":"6344:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6353:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6356:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6346:6:25"},"nodeType":"YulFunctionCall","src":"6346:12:25"},"nodeType":"YulExpressionStatement","src":"6346:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6313:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6335:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6320:14:25"},"nodeType":"YulFunctionCall","src":"6320:21:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6310:2:25"},"nodeType":"YulFunctionCall","src":"6310:32:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6303:6:25"},"nodeType":"YulFunctionCall","src":"6303:40:25"},"nodeType":"YulIf","src":"6300:60:25"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6283:5:25","type":""}],"src":"6250:116:25"},{"body":{"nodeType":"YulBlock","src":"6421:84:25","statements":[{"nodeType":"YulAssignment","src":"6431:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6453:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6440:12:25"},"nodeType":"YulFunctionCall","src":"6440:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6431:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6493:5:25"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6469:23:25"},"nodeType":"YulFunctionCall","src":"6469:30:25"},"nodeType":"YulExpressionStatement","src":"6469:30:25"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6399:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"6407:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6415:5:25","type":""}],"src":"6372:133:25"},{"body":{"nodeType":"YulBlock","src":"6591:388:25","statements":[{"body":{"nodeType":"YulBlock","src":"6637:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6639:77:25"},"nodeType":"YulFunctionCall","src":"6639:79:25"},"nodeType":"YulExpressionStatement","src":"6639:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6612:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"6621:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6608:3:25"},"nodeType":"YulFunctionCall","src":"6608:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"6633:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6604:3:25"},"nodeType":"YulFunctionCall","src":"6604:32:25"},"nodeType":"YulIf","src":"6601:119:25"},{"nodeType":"YulBlock","src":"6730:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6745:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6759:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6749:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6774:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6809:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6820:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6805:3:25"},"nodeType":"YulFunctionCall","src":"6805:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6829:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6784:20:25"},"nodeType":"YulFunctionCall","src":"6784:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6774:6:25"}]}]},{"nodeType":"YulBlock","src":"6857:115:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6872:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6886:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6876:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6902:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6934:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6945:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6930:3:25"},"nodeType":"YulFunctionCall","src":"6930:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6954:7:25"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6912:17:25"},"nodeType":"YulFunctionCall","src":"6912:50:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6902:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6553:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6564:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6576:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6584:6:25","type":""}],"src":"6511:468:25"},{"body":{"nodeType":"YulBlock","src":"7074:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7091:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7094:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7084:6:25"},"nodeType":"YulFunctionCall","src":"7084:12:25"},"nodeType":"YulExpressionStatement","src":"7084:12:25"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6985:117:25"},{"body":{"nodeType":"YulBlock","src":"7197:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7214:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7217:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7207:6:25"},"nodeType":"YulFunctionCall","src":"7207:12:25"},"nodeType":"YulExpressionStatement","src":"7207:12:25"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7108:117:25"},{"body":{"nodeType":"YulBlock","src":"7259:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7276:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7279:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7269:6:25"},"nodeType":"YulFunctionCall","src":"7269:88:25"},"nodeType":"YulExpressionStatement","src":"7269:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7373:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7376:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7366:6:25"},"nodeType":"YulFunctionCall","src":"7366:15:25"},"nodeType":"YulExpressionStatement","src":"7366:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7397:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7400:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7390:6:25"},"nodeType":"YulFunctionCall","src":"7390:15:25"},"nodeType":"YulExpressionStatement","src":"7390:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7231:180:25"},{"body":{"nodeType":"YulBlock","src":"7460:238:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7470:58:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7492:6:25"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7522:4:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7500:21:25"},"nodeType":"YulFunctionCall","src":"7500:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7488:3:25"},"nodeType":"YulFunctionCall","src":"7488:40:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7474:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"7639:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7641:16:25"},"nodeType":"YulFunctionCall","src":"7641:18:25"},"nodeType":"YulExpressionStatement","src":"7641:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7582:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"7594:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7579:2:25"},"nodeType":"YulFunctionCall","src":"7579:34:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7618:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7630:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7615:2:25"},"nodeType":"YulFunctionCall","src":"7615:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7576:2:25"},"nodeType":"YulFunctionCall","src":"7576:62:25"},"nodeType":"YulIf","src":"7573:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7677:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7681:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7670:6:25"},"nodeType":"YulFunctionCall","src":"7670:22:25"},"nodeType":"YulExpressionStatement","src":"7670:22:25"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7446:6:25","type":""},{"name":"size","nodeType":"YulTypedName","src":"7454:4:25","type":""}],"src":"7417:281:25"},{"body":{"nodeType":"YulBlock","src":"7745:88:25","statements":[{"nodeType":"YulAssignment","src":"7755:30:25","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7765:18:25"},"nodeType":"YulFunctionCall","src":"7765:20:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7755:6:25"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7814:6:25"},{"name":"size","nodeType":"YulIdentifier","src":"7822:4:25"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7794:19:25"},"nodeType":"YulFunctionCall","src":"7794:33:25"},"nodeType":"YulExpressionStatement","src":"7794:33:25"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7729:4:25","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7738:6:25","type":""}],"src":"7704:129:25"},{"body":{"nodeType":"YulBlock","src":"7905:241:25","statements":[{"body":{"nodeType":"YulBlock","src":"8010:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8012:16:25"},"nodeType":"YulFunctionCall","src":"8012:18:25"},"nodeType":"YulExpressionStatement","src":"8012:18:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7982:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7990:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7979:2:25"},"nodeType":"YulFunctionCall","src":"7979:30:25"},"nodeType":"YulIf","src":"7976:56:25"},{"nodeType":"YulAssignment","src":"8042:37:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8072:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8050:21:25"},"nodeType":"YulFunctionCall","src":"8050:29:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8042:4:25"}]},{"nodeType":"YulAssignment","src":"8116:23:25","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8128:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"8134:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8124:3:25"},"nodeType":"YulFunctionCall","src":"8124:15:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8116:4:25"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7889:6:25","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7900:4:25","type":""}],"src":"7839:307:25"},{"body":{"nodeType":"YulBlock","src":"8203:103:25","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8226:3:25"},{"name":"src","nodeType":"YulIdentifier","src":"8231:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"8236:6:25"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8213:12:25"},"nodeType":"YulFunctionCall","src":"8213:30:25"},"nodeType":"YulExpressionStatement","src":"8213:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8284:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"8289:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8280:3:25"},"nodeType":"YulFunctionCall","src":"8280:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"8298:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8273:6:25"},"nodeType":"YulFunctionCall","src":"8273:27:25"},"nodeType":"YulExpressionStatement","src":"8273:27:25"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8185:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8190:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"8195:6:25","type":""}],"src":"8152:154:25"},{"body":{"nodeType":"YulBlock","src":"8395:327:25","statements":[{"nodeType":"YulAssignment","src":"8405:74:25","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8471:6:25"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8430:40:25"},"nodeType":"YulFunctionCall","src":"8430:48:25"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8414:15:25"},"nodeType":"YulFunctionCall","src":"8414:65:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8405:5:25"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8495:5:25"},{"name":"length","nodeType":"YulIdentifier","src":"8502:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8488:6:25"},"nodeType":"YulFunctionCall","src":"8488:21:25"},"nodeType":"YulExpressionStatement","src":"8488:21:25"},{"nodeType":"YulVariableDeclaration","src":"8518:27:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8533:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"8540:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8529:3:25"},"nodeType":"YulFunctionCall","src":"8529:16:25"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8522:3:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"8583:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8585:77:25"},"nodeType":"YulFunctionCall","src":"8585:79:25"},"nodeType":"YulExpressionStatement","src":"8585:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8564:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"8569:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8560:3:25"},"nodeType":"YulFunctionCall","src":"8560:16:25"},{"name":"end","nodeType":"YulIdentifier","src":"8578:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8557:2:25"},"nodeType":"YulFunctionCall","src":"8557:25:25"},"nodeType":"YulIf","src":"8554:112:25"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8699:3:25"},{"name":"dst","nodeType":"YulIdentifier","src":"8704:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"8709:6:25"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"8675:23:25"},"nodeType":"YulFunctionCall","src":"8675:41:25"},"nodeType":"YulExpressionStatement","src":"8675:41:25"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8368:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"8373:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"8381:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8389:5:25","type":""}],"src":"8312:410:25"},{"body":{"nodeType":"YulBlock","src":"8802:277:25","statements":[{"body":{"nodeType":"YulBlock","src":"8851:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8853:77:25"},"nodeType":"YulFunctionCall","src":"8853:79:25"},"nodeType":"YulExpressionStatement","src":"8853:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8830:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"8838:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8826:3:25"},"nodeType":"YulFunctionCall","src":"8826:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"8845:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8822:3:25"},"nodeType":"YulFunctionCall","src":"8822:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8815:6:25"},"nodeType":"YulFunctionCall","src":"8815:35:25"},"nodeType":"YulIf","src":"8812:122:25"},{"nodeType":"YulVariableDeclaration","src":"8943:34:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8970:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8957:12:25"},"nodeType":"YulFunctionCall","src":"8957:20:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8947:6:25","type":""}]},{"nodeType":"YulAssignment","src":"8986:87:25","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9046:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9054:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9042:3:25"},"nodeType":"YulFunctionCall","src":"9042:17:25"},{"name":"length","nodeType":"YulIdentifier","src":"9061:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"9069:3:25"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8995:46:25"},"nodeType":"YulFunctionCall","src":"8995:78:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8986:5:25"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8780:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"8788:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8796:5:25","type":""}],"src":"8741:338:25"},{"body":{"nodeType":"YulBlock","src":"9211:817:25","statements":[{"body":{"nodeType":"YulBlock","src":"9258:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9260:77:25"},"nodeType":"YulFunctionCall","src":"9260:79:25"},"nodeType":"YulExpressionStatement","src":"9260:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9232:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"9241:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9228:3:25"},"nodeType":"YulFunctionCall","src":"9228:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"9253:3:25","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9224:3:25"},"nodeType":"YulFunctionCall","src":"9224:33:25"},"nodeType":"YulIf","src":"9221:120:25"},{"nodeType":"YulBlock","src":"9351:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9366:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9380:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9370:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9395:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9430:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9441:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9426:3:25"},"nodeType":"YulFunctionCall","src":"9426:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9450:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9405:20:25"},"nodeType":"YulFunctionCall","src":"9405:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9395:6:25"}]}]},{"nodeType":"YulBlock","src":"9478:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9493:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9507:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9497:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9523:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9558:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9569:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9554:3:25"},"nodeType":"YulFunctionCall","src":"9554:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9578:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9533:20:25"},"nodeType":"YulFunctionCall","src":"9533:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9523:6:25"}]}]},{"nodeType":"YulBlock","src":"9606:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9621:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9635:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9625:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9651:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9686:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9697:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9682:3:25"},"nodeType":"YulFunctionCall","src":"9682:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9706:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9661:20:25"},"nodeType":"YulFunctionCall","src":"9661:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9651:6:25"}]}]},{"nodeType":"YulBlock","src":"9734:287:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9749:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9780:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9791:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9776:3:25"},"nodeType":"YulFunctionCall","src":"9776:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9763:12:25"},"nodeType":"YulFunctionCall","src":"9763:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9753:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"9842:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9844:77:25"},"nodeType":"YulFunctionCall","src":"9844:79:25"},"nodeType":"YulExpressionStatement","src":"9844:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9814:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9822:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9811:2:25"},"nodeType":"YulFunctionCall","src":"9811:30:25"},"nodeType":"YulIf","src":"9808:117:25"},{"nodeType":"YulAssignment","src":"9939:72:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9983:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9994:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9979:3:25"},"nodeType":"YulFunctionCall","src":"9979:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10003:7:25"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9949:29:25"},"nodeType":"YulFunctionCall","src":"9949:62:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9939:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9157:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9168:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9180:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9188:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9196:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9204:6:25","type":""}],"src":"9085:943:25"},{"body":{"nodeType":"YulBlock","src":"10117:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"10163:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10165:77:25"},"nodeType":"YulFunctionCall","src":"10165:79:25"},"nodeType":"YulExpressionStatement","src":"10165:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10138:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"10147:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10134:3:25"},"nodeType":"YulFunctionCall","src":"10134:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"10159:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10130:3:25"},"nodeType":"YulFunctionCall","src":"10130:32:25"},"nodeType":"YulIf","src":"10127:119:25"},{"nodeType":"YulBlock","src":"10256:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10271:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10285:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10275:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10300:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10335:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10346:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10331:3:25"},"nodeType":"YulFunctionCall","src":"10331:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10355:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10310:20:25"},"nodeType":"YulFunctionCall","src":"10310:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10300:6:25"}]}]},{"nodeType":"YulBlock","src":"10383:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10398:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10412:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10402:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10428:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10463:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10474:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10459:3:25"},"nodeType":"YulFunctionCall","src":"10459:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10483:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10438:20:25"},"nodeType":"YulFunctionCall","src":"10438:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10428:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10079:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10090:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10102:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10110:6:25","type":""}],"src":"10034:474:25"},{"body":{"nodeType":"YulBlock","src":"10542:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10559:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10562:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10552:6:25"},"nodeType":"YulFunctionCall","src":"10552:88:25"},"nodeType":"YulExpressionStatement","src":"10552:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10656:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10659:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10649:6:25"},"nodeType":"YulFunctionCall","src":"10649:15:25"},"nodeType":"YulExpressionStatement","src":"10649:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10680:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10683:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10673:6:25"},"nodeType":"YulFunctionCall","src":"10673:15:25"},"nodeType":"YulExpressionStatement","src":"10673:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10514:180:25"},{"body":{"nodeType":"YulBlock","src":"10751:269:25","statements":[{"nodeType":"YulAssignment","src":"10761:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10775:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"10781:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10771:3:25"},"nodeType":"YulFunctionCall","src":"10771:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10761:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"10792:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10822:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"10828:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10818:3:25"},"nodeType":"YulFunctionCall","src":"10818:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10796:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"10869:51:25","statements":[{"nodeType":"YulAssignment","src":"10883:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10897:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10905:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10893:3:25"},"nodeType":"YulFunctionCall","src":"10893:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10883:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10849:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10842:6:25"},"nodeType":"YulFunctionCall","src":"10842:26:25"},"nodeType":"YulIf","src":"10839:81:25"},{"body":{"nodeType":"YulBlock","src":"10972:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10986:16:25"},"nodeType":"YulFunctionCall","src":"10986:18:25"},"nodeType":"YulExpressionStatement","src":"10986:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10936:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10959:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10967:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10956:2:25"},"nodeType":"YulFunctionCall","src":"10956:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10933:2:25"},"nodeType":"YulFunctionCall","src":"10933:38:25"},"nodeType":"YulIf","src":"10930:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10735:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10744:6:25","type":""}],"src":"10700:320:25"},{"body":{"nodeType":"YulBlock","src":"11132:114:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11154:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"11162:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11150:3:25"},"nodeType":"YulFunctionCall","src":"11150:14:25"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"11166:34:25","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11143:6:25"},"nodeType":"YulFunctionCall","src":"11143:58:25"},"nodeType":"YulExpressionStatement","src":"11143:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11222:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"11230:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11218:3:25"},"nodeType":"YulFunctionCall","src":"11218:15:25"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"11235:3:25","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11211:6:25"},"nodeType":"YulFunctionCall","src":"11211:28:25"},"nodeType":"YulExpressionStatement","src":"11211:28:25"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11124:6:25","type":""}],"src":"11026:220:25"},{"body":{"nodeType":"YulBlock","src":"11398:220:25","statements":[{"nodeType":"YulAssignment","src":"11408:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11474:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"11479:2:25","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11415:58:25"},"nodeType":"YulFunctionCall","src":"11415:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11408:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11580:3:25"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"11491:88:25"},"nodeType":"YulFunctionCall","src":"11491:93:25"},"nodeType":"YulExpressionStatement","src":"11491:93:25"},{"nodeType":"YulAssignment","src":"11593:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11604:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"11609:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11600:3:25"},"nodeType":"YulFunctionCall","src":"11600:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11593:3:25"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11386:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11394:3:25","type":""}],"src":"11252:366:25"},{"body":{"nodeType":"YulBlock","src":"11795:248:25","statements":[{"nodeType":"YulAssignment","src":"11805:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11817:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11828:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11813:3:25"},"nodeType":"YulFunctionCall","src":"11813:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11805:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11852:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11863:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11848:3:25"},"nodeType":"YulFunctionCall","src":"11848:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11871:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"11877:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11867:3:25"},"nodeType":"YulFunctionCall","src":"11867:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11841:6:25"},"nodeType":"YulFunctionCall","src":"11841:47:25"},"nodeType":"YulExpressionStatement","src":"11841:47:25"},{"nodeType":"YulAssignment","src":"11897:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12031:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11905:124:25"},"nodeType":"YulFunctionCall","src":"11905:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11897:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11775:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11790:4:25","type":""}],"src":"11624:419:25"},{"body":{"nodeType":"YulBlock","src":"12155:142:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12177:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12185:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12173:3:25"},"nodeType":"YulFunctionCall","src":"12173:14:25"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"12189:34:25","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12166:6:25"},"nodeType":"YulFunctionCall","src":"12166:58:25"},"nodeType":"YulExpressionStatement","src":"12166:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12245:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12253:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12241:3:25"},"nodeType":"YulFunctionCall","src":"12241:15:25"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"12258:31:25","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12234:6:25"},"nodeType":"YulFunctionCall","src":"12234:56:25"},"nodeType":"YulExpressionStatement","src":"12234:56:25"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12147:6:25","type":""}],"src":"12049:248:25"},{"body":{"nodeType":"YulBlock","src":"12449:220:25","statements":[{"nodeType":"YulAssignment","src":"12459:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12525:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12530:2:25","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12466:58:25"},"nodeType":"YulFunctionCall","src":"12466:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12459:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12631:3:25"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"12542:88:25"},"nodeType":"YulFunctionCall","src":"12542:93:25"},"nodeType":"YulExpressionStatement","src":"12542:93:25"},{"nodeType":"YulAssignment","src":"12644:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12655:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12660:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12651:3:25"},"nodeType":"YulFunctionCall","src":"12651:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12644:3:25"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12437:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12445:3:25","type":""}],"src":"12303:366:25"},{"body":{"nodeType":"YulBlock","src":"12846:248:25","statements":[{"nodeType":"YulAssignment","src":"12856:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12868:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12879:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12864:3:25"},"nodeType":"YulFunctionCall","src":"12864:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12856:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12903:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12914:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12899:3:25"},"nodeType":"YulFunctionCall","src":"12899:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12922:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"12928:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12918:3:25"},"nodeType":"YulFunctionCall","src":"12918:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12892:6:25"},"nodeType":"YulFunctionCall","src":"12892:47:25"},"nodeType":"YulExpressionStatement","src":"12892:47:25"},{"nodeType":"YulAssignment","src":"12948:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13082:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12956:124:25"},"nodeType":"YulFunctionCall","src":"12956:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12948:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12826:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12841:4:25","type":""}],"src":"12675:419:25"},{"body":{"nodeType":"YulBlock","src":"13206:126:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13228:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13236:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13224:3:25"},"nodeType":"YulFunctionCall","src":"13224:14:25"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"13240:34:25","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13217:6:25"},"nodeType":"YulFunctionCall","src":"13217:58:25"},"nodeType":"YulExpressionStatement","src":"13217:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13296:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13304:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13292:3:25"},"nodeType":"YulFunctionCall","src":"13292:15:25"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"13309:15:25","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13285:6:25"},"nodeType":"YulFunctionCall","src":"13285:40:25"},"nodeType":"YulExpressionStatement","src":"13285:40:25"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13198:6:25","type":""}],"src":"13100:232:25"},{"body":{"nodeType":"YulBlock","src":"13484:220:25","statements":[{"nodeType":"YulAssignment","src":"13494:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13560:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"13565:2:25","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13501:58:25"},"nodeType":"YulFunctionCall","src":"13501:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13494:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13666:3:25"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"13577:88:25"},"nodeType":"YulFunctionCall","src":"13577:93:25"},"nodeType":"YulExpressionStatement","src":"13577:93:25"},{"nodeType":"YulAssignment","src":"13679:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13690:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"13695:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13686:3:25"},"nodeType":"YulFunctionCall","src":"13686:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13679:3:25"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13472:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13480:3:25","type":""}],"src":"13338:366:25"},{"body":{"nodeType":"YulBlock","src":"13881:248:25","statements":[{"nodeType":"YulAssignment","src":"13891:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13903:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13914:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13899:3:25"},"nodeType":"YulFunctionCall","src":"13899:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13891:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13938:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13949:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13934:3:25"},"nodeType":"YulFunctionCall","src":"13934:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13957:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"13963:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13953:3:25"},"nodeType":"YulFunctionCall","src":"13953:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13927:6:25"},"nodeType":"YulFunctionCall","src":"13927:47:25"},"nodeType":"YulExpressionStatement","src":"13927:47:25"},{"nodeType":"YulAssignment","src":"13983:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14117:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13991:124:25"},"nodeType":"YulFunctionCall","src":"13991:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13983:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13861:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13876:4:25","type":""}],"src":"13710:419:25"},{"body":{"nodeType":"YulBlock","src":"14241:68:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14263:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"14271:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14259:3:25"},"nodeType":"YulFunctionCall","src":"14259:14:25"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"14275:26:25","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14252:6:25"},"nodeType":"YulFunctionCall","src":"14252:50:25"},"nodeType":"YulExpressionStatement","src":"14252:50:25"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14233:6:25","type":""}],"src":"14135:174:25"},{"body":{"nodeType":"YulBlock","src":"14461:220:25","statements":[{"nodeType":"YulAssignment","src":"14471:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14537:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"14542:2:25","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14478:58:25"},"nodeType":"YulFunctionCall","src":"14478:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14471:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14643:3:25"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"14554:88:25"},"nodeType":"YulFunctionCall","src":"14554:93:25"},"nodeType":"YulExpressionStatement","src":"14554:93:25"},{"nodeType":"YulAssignment","src":"14656:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14667:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"14672:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14663:3:25"},"nodeType":"YulFunctionCall","src":"14663:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14656:3:25"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14449:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14457:3:25","type":""}],"src":"14315:366:25"},{"body":{"nodeType":"YulBlock","src":"14858:248:25","statements":[{"nodeType":"YulAssignment","src":"14868:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14880:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14891:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14876:3:25"},"nodeType":"YulFunctionCall","src":"14876:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14868:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14915:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14926:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14911:3:25"},"nodeType":"YulFunctionCall","src":"14911:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14934:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"14940:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14930:3:25"},"nodeType":"YulFunctionCall","src":"14930:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14904:6:25"},"nodeType":"YulFunctionCall","src":"14904:47:25"},"nodeType":"YulExpressionStatement","src":"14904:47:25"},{"nodeType":"YulAssignment","src":"14960:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15094:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14968:124:25"},"nodeType":"YulFunctionCall","src":"14968:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14960:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14838:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14853:4:25","type":""}],"src":"14687:419:25"},{"body":{"nodeType":"YulBlock","src":"15218:122:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15240:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"15248:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15236:3:25"},"nodeType":"YulFunctionCall","src":"15236:14:25"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"15252:34:25","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15229:6:25"},"nodeType":"YulFunctionCall","src":"15229:58:25"},"nodeType":"YulExpressionStatement","src":"15229:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15308:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"15316:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15304:3:25"},"nodeType":"YulFunctionCall","src":"15304:15:25"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"15321:11:25","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15297:6:25"},"nodeType":"YulFunctionCall","src":"15297:36:25"},"nodeType":"YulExpressionStatement","src":"15297:36:25"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15210:6:25","type":""}],"src":"15112:228:25"},{"body":{"nodeType":"YulBlock","src":"15492:220:25","statements":[{"nodeType":"YulAssignment","src":"15502:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15568:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15573:2:25","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15509:58:25"},"nodeType":"YulFunctionCall","src":"15509:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15502:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15674:3:25"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"15585:88:25"},"nodeType":"YulFunctionCall","src":"15585:93:25"},"nodeType":"YulExpressionStatement","src":"15585:93:25"},{"nodeType":"YulAssignment","src":"15687:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15698:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15703:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15694:3:25"},"nodeType":"YulFunctionCall","src":"15694:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15687:3:25"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15480:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15488:3:25","type":""}],"src":"15346:366:25"},{"body":{"nodeType":"YulBlock","src":"15889:248:25","statements":[{"nodeType":"YulAssignment","src":"15899:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15911:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15922:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15907:3:25"},"nodeType":"YulFunctionCall","src":"15907:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15899:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15946:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15957:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15942:3:25"},"nodeType":"YulFunctionCall","src":"15942:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15965:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"15971:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15961:3:25"},"nodeType":"YulFunctionCall","src":"15961:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15935:6:25"},"nodeType":"YulFunctionCall","src":"15935:47:25"},"nodeType":"YulExpressionStatement","src":"15935:47:25"},{"nodeType":"YulAssignment","src":"15991:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16125:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15999:124:25"},"nodeType":"YulFunctionCall","src":"15999:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15991:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15869:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15884:4:25","type":""}],"src":"15718:419:25"},{"body":{"nodeType":"YulBlock","src":"16257:34:25","statements":[{"nodeType":"YulAssignment","src":"16267:18:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"16282:3:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16267:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16229:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"16234:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16245:11:25","type":""}],"src":"16143:148:25"},{"body":{"nodeType":"YulBlock","src":"16407:267:25","statements":[{"nodeType":"YulVariableDeclaration","src":"16417:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16464:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16431:32:25"},"nodeType":"YulFunctionCall","src":"16431:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16421:6:25","type":""}]},{"nodeType":"YulAssignment","src":"16479:96:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16563:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"16568:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16486:76:25"},"nodeType":"YulFunctionCall","src":"16486:89:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16479:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16610:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"16617:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16606:3:25"},"nodeType":"YulFunctionCall","src":"16606:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"16624:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"16629:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"16584:21:25"},"nodeType":"YulFunctionCall","src":"16584:52:25"},"nodeType":"YulExpressionStatement","src":"16584:52:25"},{"nodeType":"YulAssignment","src":"16645:23:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16656:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"16661:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16652:3:25"},"nodeType":"YulFunctionCall","src":"16652:16:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16645:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16388:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16395:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16403:3:25","type":""}],"src":"16297:377:25"},{"body":{"nodeType":"YulBlock","src":"16864:251:25","statements":[{"nodeType":"YulAssignment","src":"16875:102:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16964:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"16973:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16882:81:25"},"nodeType":"YulFunctionCall","src":"16882:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16875:3:25"}]},{"nodeType":"YulAssignment","src":"16987:102:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17076:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"17085:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16994:81:25"},"nodeType":"YulFunctionCall","src":"16994:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16987:3:25"}]},{"nodeType":"YulAssignment","src":"17099:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"17106:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17099:3:25"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16835:3:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16841:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16849:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16860:3:25","type":""}],"src":"16680:435:25"},{"body":{"nodeType":"YulBlock","src":"17227:118:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17249:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"17257:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17245:3:25"},"nodeType":"YulFunctionCall","src":"17245:14:25"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"17261:34:25","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17238:6:25"},"nodeType":"YulFunctionCall","src":"17238:58:25"},"nodeType":"YulExpressionStatement","src":"17238:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17317:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"17325:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17313:3:25"},"nodeType":"YulFunctionCall","src":"17313:15:25"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"17330:7:25","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17306:6:25"},"nodeType":"YulFunctionCall","src":"17306:32:25"},"nodeType":"YulExpressionStatement","src":"17306:32:25"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17219:6:25","type":""}],"src":"17121:224:25"},{"body":{"nodeType":"YulBlock","src":"17497:220:25","statements":[{"nodeType":"YulAssignment","src":"17507:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17573:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"17578:2:25","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17514:58:25"},"nodeType":"YulFunctionCall","src":"17514:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17507:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17679:3:25"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"17590:88:25"},"nodeType":"YulFunctionCall","src":"17590:93:25"},"nodeType":"YulExpressionStatement","src":"17590:93:25"},{"nodeType":"YulAssignment","src":"17692:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17703:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"17708:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17699:3:25"},"nodeType":"YulFunctionCall","src":"17699:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17692:3:25"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17485:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17493:3:25","type":""}],"src":"17351:366:25"},{"body":{"nodeType":"YulBlock","src":"17894:248:25","statements":[{"nodeType":"YulAssignment","src":"17904:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17916:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"17927:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17912:3:25"},"nodeType":"YulFunctionCall","src":"17912:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17904:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17951:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"17962:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17947:3:25"},"nodeType":"YulFunctionCall","src":"17947:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17970:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"17976:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17966:3:25"},"nodeType":"YulFunctionCall","src":"17966:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17940:6:25"},"nodeType":"YulFunctionCall","src":"17940:47:25"},"nodeType":"YulExpressionStatement","src":"17940:47:25"},{"nodeType":"YulAssignment","src":"17996:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18130:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18004:124:25"},"nodeType":"YulFunctionCall","src":"18004:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17996:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17874:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17889:4:25","type":""}],"src":"17723:419:25"},{"body":{"nodeType":"YulBlock","src":"18254:117:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18276:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"18284:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18272:3:25"},"nodeType":"YulFunctionCall","src":"18272:14:25"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"18288:34:25","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18265:6:25"},"nodeType":"YulFunctionCall","src":"18265:58:25"},"nodeType":"YulExpressionStatement","src":"18265:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18344:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"18352:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18340:3:25"},"nodeType":"YulFunctionCall","src":"18340:15:25"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"18357:6:25","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18333:6:25"},"nodeType":"YulFunctionCall","src":"18333:31:25"},"nodeType":"YulExpressionStatement","src":"18333:31:25"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18246:6:25","type":""}],"src":"18148:223:25"},{"body":{"nodeType":"YulBlock","src":"18523:220:25","statements":[{"nodeType":"YulAssignment","src":"18533:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18599:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"18604:2:25","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18540:58:25"},"nodeType":"YulFunctionCall","src":"18540:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18533:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18705:3:25"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"18616:88:25"},"nodeType":"YulFunctionCall","src":"18616:93:25"},"nodeType":"YulExpressionStatement","src":"18616:93:25"},{"nodeType":"YulAssignment","src":"18718:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18729:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"18734:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18725:3:25"},"nodeType":"YulFunctionCall","src":"18725:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18718:3:25"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18511:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18519:3:25","type":""}],"src":"18377:366:25"},{"body":{"nodeType":"YulBlock","src":"18920:248:25","statements":[{"nodeType":"YulAssignment","src":"18930:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18942:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"18953:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18938:3:25"},"nodeType":"YulFunctionCall","src":"18938:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18930:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18977:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"18988:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18973:3:25"},"nodeType":"YulFunctionCall","src":"18973:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18996:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"19002:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18992:3:25"},"nodeType":"YulFunctionCall","src":"18992:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18966:6:25"},"nodeType":"YulFunctionCall","src":"18966:47:25"},"nodeType":"YulExpressionStatement","src":"18966:47:25"},{"nodeType":"YulAssignment","src":"19022:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19156:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19030:124:25"},"nodeType":"YulFunctionCall","src":"19030:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19022:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18900:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18915:4:25","type":""}],"src":"18749:419:25"},{"body":{"nodeType":"YulBlock","src":"19280:69:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19302:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"19310:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19298:3:25"},"nodeType":"YulFunctionCall","src":"19298:14:25"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"19314:27:25","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19291:6:25"},"nodeType":"YulFunctionCall","src":"19291:51:25"},"nodeType":"YulExpressionStatement","src":"19291:51:25"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19272:6:25","type":""}],"src":"19174:175:25"},{"body":{"nodeType":"YulBlock","src":"19501:220:25","statements":[{"nodeType":"YulAssignment","src":"19511:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19577:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"19582:2:25","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19518:58:25"},"nodeType":"YulFunctionCall","src":"19518:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19511:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19683:3:25"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"19594:88:25"},"nodeType":"YulFunctionCall","src":"19594:93:25"},"nodeType":"YulExpressionStatement","src":"19594:93:25"},{"nodeType":"YulAssignment","src":"19696:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19707:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"19712:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19703:3:25"},"nodeType":"YulFunctionCall","src":"19703:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19696:3:25"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19489:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19497:3:25","type":""}],"src":"19355:366:25"},{"body":{"nodeType":"YulBlock","src":"19898:248:25","statements":[{"nodeType":"YulAssignment","src":"19908:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19920:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19931:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19916:3:25"},"nodeType":"YulFunctionCall","src":"19916:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19908:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19955:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19966:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19951:3:25"},"nodeType":"YulFunctionCall","src":"19951:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19974:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"19980:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19970:3:25"},"nodeType":"YulFunctionCall","src":"19970:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19944:6:25"},"nodeType":"YulFunctionCall","src":"19944:47:25"},"nodeType":"YulExpressionStatement","src":"19944:47:25"},{"nodeType":"YulAssignment","src":"20000:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20134:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20008:124:25"},"nodeType":"YulFunctionCall","src":"20008:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20000:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19878:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19893:4:25","type":""}],"src":"19727:419:25"},{"body":{"nodeType":"YulBlock","src":"20258:131:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20280:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"20288:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20276:3:25"},"nodeType":"YulFunctionCall","src":"20276:14:25"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"20292:34:25","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20269:6:25"},"nodeType":"YulFunctionCall","src":"20269:58:25"},"nodeType":"YulExpressionStatement","src":"20269:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20348:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"20356:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20344:3:25"},"nodeType":"YulFunctionCall","src":"20344:15:25"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"20361:20:25","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20337:6:25"},"nodeType":"YulFunctionCall","src":"20337:45:25"},"nodeType":"YulExpressionStatement","src":"20337:45:25"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20250:6:25","type":""}],"src":"20152:237:25"},{"body":{"nodeType":"YulBlock","src":"20541:220:25","statements":[{"nodeType":"YulAssignment","src":"20551:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20617:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"20622:2:25","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20558:58:25"},"nodeType":"YulFunctionCall","src":"20558:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20551:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20723:3:25"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"20634:88:25"},"nodeType":"YulFunctionCall","src":"20634:93:25"},"nodeType":"YulExpressionStatement","src":"20634:93:25"},{"nodeType":"YulAssignment","src":"20736:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20747:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"20752:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20743:3:25"},"nodeType":"YulFunctionCall","src":"20743:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20736:3:25"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20529:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20537:3:25","type":""}],"src":"20395:366:25"},{"body":{"nodeType":"YulBlock","src":"20938:248:25","statements":[{"nodeType":"YulAssignment","src":"20948:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20960:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20971:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20956:3:25"},"nodeType":"YulFunctionCall","src":"20956:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20948:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20995:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21006:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20991:3:25"},"nodeType":"YulFunctionCall","src":"20991:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21014:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"21020:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21010:3:25"},"nodeType":"YulFunctionCall","src":"21010:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20984:6:25"},"nodeType":"YulFunctionCall","src":"20984:47:25"},"nodeType":"YulExpressionStatement","src":"20984:47:25"},{"nodeType":"YulAssignment","src":"21040:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21174:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21048:124:25"},"nodeType":"YulFunctionCall","src":"21048:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21040:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20918:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20933:4:25","type":""}],"src":"20767:419:25"},{"body":{"nodeType":"YulBlock","src":"21220:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21237:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21240:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21230:6:25"},"nodeType":"YulFunctionCall","src":"21230:88:25"},"nodeType":"YulExpressionStatement","src":"21230:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21334:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21337:4:25","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21327:6:25"},"nodeType":"YulFunctionCall","src":"21327:15:25"},"nodeType":"YulExpressionStatement","src":"21327:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21358:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21361:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21351:6:25"},"nodeType":"YulFunctionCall","src":"21351:15:25"},"nodeType":"YulExpressionStatement","src":"21351:15:25"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"21192:180:25"},{"body":{"nodeType":"YulBlock","src":"21406:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21423:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21426:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21416:6:25"},"nodeType":"YulFunctionCall","src":"21416:88:25"},"nodeType":"YulExpressionStatement","src":"21416:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21520:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21523:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21513:6:25"},"nodeType":"YulFunctionCall","src":"21513:15:25"},"nodeType":"YulExpressionStatement","src":"21513:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21544:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21547:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21537:6:25"},"nodeType":"YulFunctionCall","src":"21537:15:25"},"nodeType":"YulExpressionStatement","src":"21537:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"21378:180:25"},{"body":{"nodeType":"YulBlock","src":"21609:146:25","statements":[{"nodeType":"YulAssignment","src":"21619:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21642:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21624:17:25"},"nodeType":"YulFunctionCall","src":"21624:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21619:1:25"}]},{"nodeType":"YulAssignment","src":"21653:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21676:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21658:17:25"},"nodeType":"YulFunctionCall","src":"21658:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21653:1:25"}]},{"body":{"nodeType":"YulBlock","src":"21700:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21702:16:25"},"nodeType":"YulFunctionCall","src":"21702:18:25"},"nodeType":"YulExpressionStatement","src":"21702:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21694:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"21697:1:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21691:2:25"},"nodeType":"YulFunctionCall","src":"21691:8:25"},"nodeType":"YulIf","src":"21688:34:25"},{"nodeType":"YulAssignment","src":"21732:17:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21744:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"21747:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21740:3:25"},"nodeType":"YulFunctionCall","src":"21740:9:25"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"21732:4:25"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21595:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"21598:1:25","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"21604:4:25","type":""}],"src":"21564:191:25"},{"body":{"nodeType":"YulBlock","src":"21805:261:25","statements":[{"nodeType":"YulAssignment","src":"21815:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21838:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21820:17:25"},"nodeType":"YulFunctionCall","src":"21820:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21815:1:25"}]},{"nodeType":"YulAssignment","src":"21849:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21872:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21854:17:25"},"nodeType":"YulFunctionCall","src":"21854:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21849:1:25"}]},{"body":{"nodeType":"YulBlock","src":"22012:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22014:16:25"},"nodeType":"YulFunctionCall","src":"22014:18:25"},"nodeType":"YulExpressionStatement","src":"22014:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21933:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21940:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"22008:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21936:3:25"},"nodeType":"YulFunctionCall","src":"21936:74:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21930:2:25"},"nodeType":"YulFunctionCall","src":"21930:81:25"},"nodeType":"YulIf","src":"21927:107:25"},{"nodeType":"YulAssignment","src":"22044:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22055:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"22058:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22051:3:25"},"nodeType":"YulFunctionCall","src":"22051:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"22044:3:25"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21792:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"21795:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"21801:3:25","type":""}],"src":"21761:305:25"},{"body":{"nodeType":"YulBlock","src":"22130:40:25","statements":[{"nodeType":"YulAssignment","src":"22141:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22157:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22151:5:25"},"nodeType":"YulFunctionCall","src":"22151:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22141:6:25"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22113:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22123:6:25","type":""}],"src":"22072:98:25"},{"body":{"nodeType":"YulBlock","src":"22271:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22288:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"22293:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22281:6:25"},"nodeType":"YulFunctionCall","src":"22281:19:25"},"nodeType":"YulExpressionStatement","src":"22281:19:25"},{"nodeType":"YulAssignment","src":"22309:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22328:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"22333:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22324:3:25"},"nodeType":"YulFunctionCall","src":"22324:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"22309:11:25"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22243:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"22248:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"22259:11:25","type":""}],"src":"22176:168:25"},{"body":{"nodeType":"YulBlock","src":"22440:270:25","statements":[{"nodeType":"YulVariableDeclaration","src":"22450:52:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22496:5:25"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"22464:31:25"},"nodeType":"YulFunctionCall","src":"22464:38:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22454:6:25","type":""}]},{"nodeType":"YulAssignment","src":"22511:77:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22576:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"22581:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22518:57:25"},"nodeType":"YulFunctionCall","src":"22518:70:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22511:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22623:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"22630:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22619:3:25"},"nodeType":"YulFunctionCall","src":"22619:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"22637:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"22642:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"22597:21:25"},"nodeType":"YulFunctionCall","src":"22597:52:25"},"nodeType":"YulExpressionStatement","src":"22597:52:25"},{"nodeType":"YulAssignment","src":"22658:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22669:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22696:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"22674:21:25"},"nodeType":"YulFunctionCall","src":"22674:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22665:3:25"},"nodeType":"YulFunctionCall","src":"22665:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22658:3:25"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22421:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22428:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22436:3:25","type":""}],"src":"22350:360:25"},{"body":{"nodeType":"YulBlock","src":"22916:440:25","statements":[{"nodeType":"YulAssignment","src":"22926:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22938:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22949:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22934:3:25"},"nodeType":"YulFunctionCall","src":"22934:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22926:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23007:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23020:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"23031:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23016:3:25"},"nodeType":"YulFunctionCall","src":"23016:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22963:43:25"},"nodeType":"YulFunctionCall","src":"22963:71:25"},"nodeType":"YulExpressionStatement","src":"22963:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23088:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23101:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"23112:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23097:3:25"},"nodeType":"YulFunctionCall","src":"23097:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23044:43:25"},"nodeType":"YulFunctionCall","src":"23044:72:25"},"nodeType":"YulExpressionStatement","src":"23044:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23170:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23183:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"23194:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23179:3:25"},"nodeType":"YulFunctionCall","src":"23179:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23126:43:25"},"nodeType":"YulFunctionCall","src":"23126:72:25"},"nodeType":"YulExpressionStatement","src":"23126:72:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23219:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"23230:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23215:3:25"},"nodeType":"YulFunctionCall","src":"23215:18:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23239:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"23245:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23235:3:25"},"nodeType":"YulFunctionCall","src":"23235:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23208:6:25"},"nodeType":"YulFunctionCall","src":"23208:48:25"},"nodeType":"YulExpressionStatement","src":"23208:48:25"},{"nodeType":"YulAssignment","src":"23265:84:25","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23335:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"23344:4:25"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23273:61:25"},"nodeType":"YulFunctionCall","src":"23273:76:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23265:4:25"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22864:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22876:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22884:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22892:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22900:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22911:4:25","type":""}],"src":"22716:640:25"},{"body":{"nodeType":"YulBlock","src":"23424:79:25","statements":[{"nodeType":"YulAssignment","src":"23434:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23449:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23443:5:25"},"nodeType":"YulFunctionCall","src":"23443:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23434:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23491:5:25"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"23465:25:25"},"nodeType":"YulFunctionCall","src":"23465:32:25"},"nodeType":"YulExpressionStatement","src":"23465:32:25"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"23402:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"23410:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"23418:5:25","type":""}],"src":"23362:141:25"},{"body":{"nodeType":"YulBlock","src":"23585:273:25","statements":[{"body":{"nodeType":"YulBlock","src":"23631:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"23633:77:25"},"nodeType":"YulFunctionCall","src":"23633:79:25"},"nodeType":"YulExpressionStatement","src":"23633:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23606:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"23615:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23602:3:25"},"nodeType":"YulFunctionCall","src":"23602:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"23627:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23598:3:25"},"nodeType":"YulFunctionCall","src":"23598:32:25"},"nodeType":"YulIf","src":"23595:119:25"},{"nodeType":"YulBlock","src":"23724:127:25","statements":[{"nodeType":"YulVariableDeclaration","src":"23739:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"23753:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23743:6:25","type":""}]},{"nodeType":"YulAssignment","src":"23768:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23813:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"23824:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23809:3:25"},"nodeType":"YulFunctionCall","src":"23809:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23833:7:25"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"23778:30:25"},"nodeType":"YulFunctionCall","src":"23778:63:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23768:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23555:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23566:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23578:6:25","type":""}],"src":"23509:349:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611633565b6102bc565b6040516100fb919061167b565b60405180910390f35b61010c61039e565b604051610119919061172f565b60405180910390f35b61013c60048036038101906101379190611787565b610430565b60405161014991906117f5565b60405180910390f35b61016c6004803603810190610167919061183c565b610476565b005b6101886004803603810190610183919061187c565b61058e565b005b6101a4600480360381019061019f919061187c565b6105ee565b005b6101c060048036038101906101bb9190611787565b61060e565b6040516101cd91906117f5565b60405180910390f35b6101f060048036038101906101eb91906118cf565b610695565b6040516101fd919061190b565b60405180910390f35b61020e61074d565b60405161021b919061172f565b60405180910390f35b61023e60048036038101906102399190611952565b6107df565b005b61025a60048036038101906102559190611ac7565b6107f5565b005b61027660048036038101906102719190611787565b610857565b604051610283919061172f565b60405180910390f35b6102a660048036038101906102a19190611b4a565b6108bf565b6040516102b3919061167b565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611bb9565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611bb9565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611c5d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611cef565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611d81565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611ded565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611e7f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611bb9565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611bb9565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611d81565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a7929190611edb565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611ded565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611f71565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90612003565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611f71565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e5383838360016112b4565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb9061206f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff5919061167b565b60405180910390a3505050565b61100d848484610b5e565b611019848484846112ba565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90612101565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611451565b01905060008167ffffffffffffffff8111156110a3576110a261199c565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b612121565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60018111156112ae57600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146112225780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461121a919061217f565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112ad5780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112a591906121b3565b925050819055505b5b50505050565b50505050565b60006112db8473ffffffffffffffffffffffffffffffffffffffff166115a4565b15611444578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611304610a08565b8786866040518563ffffffff1660e01b8152600401611326949392919061225e565b602060405180830381600087803b15801561134057600080fd5b505af192505050801561137157506040513d601f19601f8201168201806040525081019061136e91906122bf565b60015b6113f4573d80600081146113a1576040519150601f19603f3d011682016040523d82523d6000602084013e6113a6565b606091505b506000815114156113ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e390612101565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611449565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106114af577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816114a5576114a4612121565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106114ec576d04ee2d6d415b85acef810000000083816114e2576114e1612121565b5b0492506020810190505b662386f26fc10000831061151b57662386f26fc10000838161151157611510612121565b5b0492506010810190505b6305f5e1008310611544576305f5e100838161153a57611539612121565b5b0492506008810190505b612710831061156957612710838161155f5761155e612121565b5b0492506004810190505b6064831061158c576064838161158257611581612121565b5b0492506002810190505b600a831061159b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611610816115db565b811461161b57600080fd5b50565b60008135905061162d81611607565b92915050565b600060208284031215611649576116486115d1565b5b60006116578482850161161e565b91505092915050565b60008115159050919050565b61167581611660565b82525050565b6000602082019050611690600083018461166c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116d05780820151818401526020810190506116b5565b838111156116df576000848401525b50505050565b6000601f19601f8301169050919050565b600061170182611696565b61170b81856116a1565b935061171b8185602086016116b2565b611724816116e5565b840191505092915050565b6000602082019050818103600083015261174981846116f6565b905092915050565b6000819050919050565b61176481611751565b811461176f57600080fd5b50565b6000813590506117818161175b565b92915050565b60006020828403121561179d5761179c6115d1565b5b60006117ab84828501611772565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117df826117b4565b9050919050565b6117ef816117d4565b82525050565b600060208201905061180a60008301846117e6565b92915050565b611819816117d4565b811461182457600080fd5b50565b60008135905061183681611810565b92915050565b60008060408385031215611853576118526115d1565b5b600061186185828601611827565b925050602061187285828601611772565b9150509250929050565b600080600060608486031215611895576118946115d1565b5b60006118a386828701611827565b93505060206118b486828701611827565b92505060406118c586828701611772565b9150509250925092565b6000602082840312156118e5576118e46115d1565b5b60006118f384828501611827565b91505092915050565b61190581611751565b82525050565b600060208201905061192060008301846118fc565b92915050565b61192f81611660565b811461193a57600080fd5b50565b60008135905061194c81611926565b92915050565b60008060408385031215611969576119686115d1565b5b600061197785828601611827565b92505060206119888582860161193d565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119d4826116e5565b810181811067ffffffffffffffff821117156119f3576119f261199c565b5b80604052505050565b6000611a066115c7565b9050611a1282826119cb565b919050565b600067ffffffffffffffff821115611a3257611a3161199c565b5b611a3b826116e5565b9050602081019050919050565b82818337600083830152505050565b6000611a6a611a6584611a17565b6119fc565b905082815260208101848484011115611a8657611a85611997565b5b611a91848285611a48565b509392505050565b600082601f830112611aae57611aad611992565b5b8135611abe848260208601611a57565b91505092915050565b60008060008060808587031215611ae157611ae06115d1565b5b6000611aef87828801611827565b9450506020611b0087828801611827565b9350506040611b1187828801611772565b925050606085013567ffffffffffffffff811115611b3257611b316115d6565b5b611b3e87828801611a99565b91505092959194509250565b60008060408385031215611b6157611b606115d1565b5b6000611b6f85828601611827565b9250506020611b8085828601611827565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611bd157607f821691505b60208210811415611be557611be4611b8a565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611c476021836116a1565b9150611c5282611beb565b604082019050919050565b60006020820190508181036000830152611c7681611c3a565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611cd9603d836116a1565b9150611ce482611c7d565b604082019050919050565b60006020820190508181036000830152611d0881611ccc565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611d6b602d836116a1565b9150611d7682611d0f565b604082019050919050565b60006020820190508181036000830152611d9a81611d5e565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611dd76018836116a1565b9150611de282611da1565b602082019050919050565b60006020820190508181036000830152611e0681611dca565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611e696029836116a1565b9150611e7482611e0d565b604082019050919050565b60006020820190508181036000830152611e9881611e5c565b9050919050565b600081905092915050565b6000611eb582611696565b611ebf8185611e9f565b9350611ecf8185602086016116b2565b80840191505092915050565b6000611ee78285611eaa565b9150611ef38284611eaa565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611f5b6025836116a1565b9150611f6682611eff565b604082019050919050565b60006020820190508181036000830152611f8a81611f4e565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611fed6024836116a1565b9150611ff882611f91565b604082019050919050565b6000602082019050818103600083015261201c81611fe0565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006120596019836116a1565b915061206482612023565b602082019050919050565b600060208201905081810360008301526120888161204c565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006120eb6032836116a1565b91506120f68261208f565b604082019050919050565b6000602082019050818103600083015261211a816120de565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061218a82611751565b915061219583611751565b9250828210156121a8576121a7612150565b5b828203905092915050565b60006121be82611751565b91506121c983611751565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156121fe576121fd612150565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b600061223082612209565b61223a8185612214565b935061224a8185602086016116b2565b612253816116e5565b840191505092915050565b600060808201905061227360008301876117e6565b61228060208301866117e6565b61228d60408301856118fc565b818103606083015261229f8184612225565b905095945050505050565b6000815190506122b981611607565b92915050565b6000602082840312156122d5576122d46115d1565b5b60006122e3848285016122aa565b9150509291505056fea2646970667358221220a50925419473cc2c56322ce0cfa3d3ec5c3641371e437c4800e68b3475fd92c064736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x183C JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x187C JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x187C JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x190B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1CEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1E7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x2003 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x206F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1451 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x199C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1222 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x217F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AD JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12A5 SWAP2 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A4 JUMP JUMPDEST ISZERO PUSH2 0x1444 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1304 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1326 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x225E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1371 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136E SWAP2 SWAP1 PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13F4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13A1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x13EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E3 SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x14AF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x14EC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x14E2 JUMPI PUSH2 0x14E1 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x151B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1544 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x153A JUMPI PUSH2 0x1539 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1569 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x155F JUMPI PUSH2 0x155E PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x158C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x159B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1610 DUP2 PUSH2 0x15DB JUMP JUMPDEST DUP2 EQ PUSH2 0x161B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x162D DUP2 PUSH2 0x1607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1649 JUMPI PUSH2 0x1648 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1657 DUP5 DUP3 DUP6 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1675 DUP2 PUSH2 0x1660 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1690 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x166C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16B5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16DF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1701 DUP3 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x170B DUP2 DUP6 PUSH2 0x16A1 JUMP JUMPDEST SWAP4 POP PUSH2 0x171B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x1724 DUP2 PUSH2 0x16E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1749 DUP2 DUP5 PUSH2 0x16F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1764 DUP2 PUSH2 0x1751 JUMP JUMPDEST DUP2 EQ PUSH2 0x176F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1781 DUP2 PUSH2 0x175B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AB DUP5 DUP3 DUP6 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DF DUP3 PUSH2 0x17B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17EF DUP2 PUSH2 0x17D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x180A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1819 DUP2 PUSH2 0x17D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1836 DUP2 PUSH2 0x1810 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1853 JUMPI PUSH2 0x1852 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1861 DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1872 DUP6 DUP3 DUP7 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1895 JUMPI PUSH2 0x1894 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18A3 DUP7 DUP3 DUP8 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18B4 DUP7 DUP3 DUP8 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18C5 DUP7 DUP3 DUP8 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E5 JUMPI PUSH2 0x18E4 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18F3 DUP5 DUP3 DUP6 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1905 DUP2 PUSH2 0x1751 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1920 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x192F DUP2 PUSH2 0x1660 JUMP JUMPDEST DUP2 EQ PUSH2 0x193A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x194C DUP2 PUSH2 0x1926 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1969 JUMPI PUSH2 0x1968 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1977 DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1988 DUP6 DUP3 DUP7 ADD PUSH2 0x193D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x19D4 DUP3 PUSH2 0x16E5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x19F3 JUMPI PUSH2 0x19F2 PUSH2 0x199C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A06 PUSH2 0x15C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A12 DUP3 DUP3 PUSH2 0x19CB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A32 JUMPI PUSH2 0x1A31 PUSH2 0x199C JUMP JUMPDEST JUMPDEST PUSH2 0x1A3B DUP3 PUSH2 0x16E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6A PUSH2 0x1A65 DUP5 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0x19FC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A86 JUMPI PUSH2 0x1A85 PUSH2 0x1997 JUMP JUMPDEST JUMPDEST PUSH2 0x1A91 DUP5 DUP3 DUP6 PUSH2 0x1A48 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AAE JUMPI PUSH2 0x1AAD PUSH2 0x1992 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1ABE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1AE1 JUMPI PUSH2 0x1AE0 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AEF DUP8 DUP3 DUP9 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1B00 DUP8 DUP3 DUP9 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1B11 DUP8 DUP3 DUP9 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B32 JUMPI PUSH2 0x1B31 PUSH2 0x15D6 JUMP JUMPDEST JUMPDEST PUSH2 0x1B3E DUP8 DUP3 DUP9 ADD PUSH2 0x1A99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B61 JUMPI PUSH2 0x1B60 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B6F DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B80 DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BD1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1BE5 JUMPI PUSH2 0x1BE4 PUSH2 0x1B8A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C47 PUSH1 0x21 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C52 DUP3 PUSH2 0x1BEB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C76 DUP2 PUSH2 0x1C3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD9 PUSH1 0x3D DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE4 DUP3 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D08 DUP2 PUSH2 0x1CCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6B PUSH1 0x2D DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D76 DUP3 PUSH2 0x1D0F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D9A DUP2 PUSH2 0x1D5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD7 PUSH1 0x18 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE2 DUP3 PUSH2 0x1DA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E06 DUP2 PUSH2 0x1DCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E69 PUSH1 0x29 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E74 DUP3 PUSH2 0x1E0D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E98 DUP2 PUSH2 0x1E5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB5 DUP3 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x1EBF DUP2 DUP6 PUSH2 0x1E9F JUMP JUMPDEST SWAP4 POP PUSH2 0x1ECF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16B2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE7 DUP3 DUP6 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF3 DUP3 DUP5 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F5B PUSH1 0x25 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F66 DUP3 PUSH2 0x1EFF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F8A DUP2 PUSH2 0x1F4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FED PUSH1 0x24 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF8 DUP3 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x201C DUP2 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2059 PUSH1 0x19 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2064 DUP3 PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2088 DUP2 PUSH2 0x204C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EB PUSH1 0x32 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F6 DUP3 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x211A DUP2 PUSH2 0x20DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x218A DUP3 PUSH2 0x1751 JUMP JUMPDEST SWAP2 POP PUSH2 0x2195 DUP4 PUSH2 0x1751 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x21A8 JUMPI PUSH2 0x21A7 PUSH2 0x2150 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BE DUP3 PUSH2 0x1751 JUMP JUMPDEST SWAP2 POP PUSH2 0x21C9 DUP4 PUSH2 0x1751 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x21FE JUMPI PUSH2 0x21FD PUSH2 0x2150 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2230 DUP3 PUSH2 0x2209 JUMP JUMPDEST PUSH2 0x223A DUP2 DUP6 PUSH2 0x2214 JUMP JUMPDEST SWAP4 POP PUSH2 0x224A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x2253 DUP2 PUSH2 0x16E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2273 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x2280 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x228D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18FC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x229F DUP2 DUP5 PUSH2 0x2225 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22B9 DUP2 PUSH2 0x1607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22D5 JUMPI PUSH2 0x22D4 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22E3 DUP5 DUP3 DUP6 ADD PUSH2 0x22AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 MULMOD 0x25 COINBASE SWAP5 PUSH20 0xCC2C56322CE0CFA3D3EC5C3641371E437C4800E6 DUP12 CALLVALUE PUSH22 0xFD92C064736F6C634300080900330000000000000000 ","sourceMap":"628:16327:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5004:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2801:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:17:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:9:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:15:-;693:7;719:10;712:17;;640:96;:::o;12768:171:9:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;415:696:16:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;1032:21;;;1048:5;;1032:21;788:280;;;1088:6;1081:13;;;;;415:696;;;:::o;7256:126:9:-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;15698:396::-;15882:1;15870:9;:13;15866:222;;;15919:1;15903:18;;:4;:18;;;15899:85;;15960:9;15941;:15;15951:4;15941:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;15899:85;16015:1;16001:16;;:2;:16;;;15997:81;;16054:9;16037;:13;16047:2;16037:13;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;15997:81;15866:222;15698:396;;;;:::o;16800:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;9889:890:19:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;1175:320:14:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:25:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:619::-;5015:6;5023;5031;5080:2;5068:9;5059:7;5055:23;5051:32;5048:119;;;5086:79;;:::i;:::-;5048:119;5206:1;5231:53;5276:7;5267:6;5256:9;5252:22;5231:53;:::i;:::-;5221:63;;5177:117;5333:2;5359:53;5404:7;5395:6;5384:9;5380:22;5359:53;:::i;:::-;5349:63;;5304:118;5461:2;5487:53;5532:7;5523:6;5512:9;5508:22;5487:53;:::i;:::-;5477:63;;5432:118;4938:619;;;;;:::o;5563:329::-;5622:6;5671:2;5659:9;5650:7;5646:23;5642:32;5639:119;;;5677:79;;:::i;:::-;5639:119;5797:1;5822:53;5867:7;5858:6;5847:9;5843:22;5822:53;:::i;:::-;5812:63;;5768:117;5563:329;;;;:::o;5898:118::-;5985:24;6003:5;5985:24;:::i;:::-;5980:3;5973:37;5898:118;;:::o;6022:222::-;6115:4;6153:2;6142:9;6138:18;6130:26;;6166:71;6234:1;6223:9;6219:17;6210:6;6166:71;:::i;:::-;6022:222;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:220::-;11166:34;11162:1;11154:6;11150:14;11143:58;11235:3;11230:2;11222:6;11218:15;11211:28;11026:220;:::o;11252:366::-;11394:3;11415:67;11479:2;11474:3;11415:67;:::i;:::-;11408:74;;11491:93;11580:3;11491:93;:::i;:::-;11609:2;11604:3;11600:12;11593:19;;11252:366;;;:::o;11624:419::-;11790:4;11828:2;11817:9;11813:18;11805:26;;11877:9;11871:4;11867:20;11863:1;11852:9;11848:17;11841:47;11905:131;12031:4;11905:131;:::i;:::-;11897:139;;11624:419;;;:::o;12049:248::-;12189:34;12185:1;12177:6;12173:14;12166:58;12258:31;12253:2;12245:6;12241:15;12234:56;12049:248;:::o;12303:366::-;12445:3;12466:67;12530:2;12525:3;12466:67;:::i;:::-;12459:74;;12542:93;12631:3;12542:93;:::i;:::-;12660:2;12655:3;12651:12;12644:19;;12303:366;;;:::o;12675:419::-;12841:4;12879:2;12868:9;12864:18;12856:26;;12928:9;12922:4;12918:20;12914:1;12903:9;12899:17;12892:47;12956:131;13082:4;12956:131;:::i;:::-;12948:139;;12675:419;;;:::o;13100:232::-;13240:34;13236:1;13228:6;13224:14;13217:58;13309:15;13304:2;13296:6;13292:15;13285:40;13100:232;:::o;13338:366::-;13480:3;13501:67;13565:2;13560:3;13501:67;:::i;:::-;13494:74;;13577:93;13666:3;13577:93;:::i;:::-;13695:2;13690:3;13686:12;13679:19;;13338:366;;;:::o;13710:419::-;13876:4;13914:2;13903:9;13899:18;13891:26;;13963:9;13957:4;13953:20;13949:1;13938:9;13934:17;13927:47;13991:131;14117:4;13991:131;:::i;:::-;13983:139;;13710:419;;;:::o;14135:174::-;14275:26;14271:1;14263:6;14259:14;14252:50;14135:174;:::o;14315:366::-;14457:3;14478:67;14542:2;14537:3;14478:67;:::i;:::-;14471:74;;14554:93;14643:3;14554:93;:::i;:::-;14672:2;14667:3;14663:12;14656:19;;14315:366;;;:::o;14687:419::-;14853:4;14891:2;14880:9;14876:18;14868:26;;14940:9;14934:4;14930:20;14926:1;14915:9;14911:17;14904:47;14968:131;15094:4;14968:131;:::i;:::-;14960:139;;14687:419;;;:::o;15112:228::-;15252:34;15248:1;15240:6;15236:14;15229:58;15321:11;15316:2;15308:6;15304:15;15297:36;15112:228;:::o;15346:366::-;15488:3;15509:67;15573:2;15568:3;15509:67;:::i;:::-;15502:74;;15585:93;15674:3;15585:93;:::i;:::-;15703:2;15698:3;15694:12;15687:19;;15346:366;;;:::o;15718:419::-;15884:4;15922:2;15911:9;15907:18;15899:26;;15971:9;15965:4;15961:20;15957:1;15946:9;15942:17;15935:47;15999:131;16125:4;15999:131;:::i;:::-;15991:139;;15718:419;;;:::o;16143:148::-;16245:11;16282:3;16267:18;;16143:148;;;;:::o;16297:377::-;16403:3;16431:39;16464:5;16431:39;:::i;:::-;16486:89;16568:6;16563:3;16486:89;:::i;:::-;16479:96;;16584:52;16629:6;16624:3;16617:4;16610:5;16606:16;16584:52;:::i;:::-;16661:6;16656:3;16652:16;16645:23;;16407:267;16297:377;;;;:::o;16680:435::-;16860:3;16882:95;16973:3;16964:6;16882:95;:::i;:::-;16875:102;;16994:95;17085:3;17076:6;16994:95;:::i;:::-;16987:102;;17106:3;17099:10;;16680:435;;;;;:::o;17121:224::-;17261:34;17257:1;17249:6;17245:14;17238:58;17330:7;17325:2;17317:6;17313:15;17306:32;17121:224;:::o;17351:366::-;17493:3;17514:67;17578:2;17573:3;17514:67;:::i;:::-;17507:74;;17590:93;17679:3;17590:93;:::i;:::-;17708:2;17703:3;17699:12;17692:19;;17351:366;;;:::o;17723:419::-;17889:4;17927:2;17916:9;17912:18;17904:26;;17976:9;17970:4;17966:20;17962:1;17951:9;17947:17;17940:47;18004:131;18130:4;18004:131;:::i;:::-;17996:139;;17723:419;;;:::o;18148:223::-;18288:34;18284:1;18276:6;18272:14;18265:58;18357:6;18352:2;18344:6;18340:15;18333:31;18148:223;:::o;18377:366::-;18519:3;18540:67;18604:2;18599:3;18540:67;:::i;:::-;18533:74;;18616:93;18705:3;18616:93;:::i;:::-;18734:2;18729:3;18725:12;18718:19;;18377:366;;;:::o;18749:419::-;18915:4;18953:2;18942:9;18938:18;18930:26;;19002:9;18996:4;18992:20;18988:1;18977:9;18973:17;18966:47;19030:131;19156:4;19030:131;:::i;:::-;19022:139;;18749:419;;;:::o;19174:175::-;19314:27;19310:1;19302:6;19298:14;19291:51;19174:175;:::o;19355:366::-;19497:3;19518:67;19582:2;19577:3;19518:67;:::i;:::-;19511:74;;19594:93;19683:3;19594:93;:::i;:::-;19712:2;19707:3;19703:12;19696:19;;19355:366;;;:::o;19727:419::-;19893:4;19931:2;19920:9;19916:18;19908:26;;19980:9;19974:4;19970:20;19966:1;19955:9;19951:17;19944:47;20008:131;20134:4;20008:131;:::i;:::-;20000:139;;19727:419;;;:::o;20152:237::-;20292:34;20288:1;20280:6;20276:14;20269:58;20361:20;20356:2;20348:6;20344:15;20337:45;20152:237;:::o;20395:366::-;20537:3;20558:67;20622:2;20617:3;20558:67;:::i;:::-;20551:74;;20634:93;20723:3;20634:93;:::i;:::-;20752:2;20747:3;20743:12;20736:19;;20395:366;;;:::o;20767:419::-;20933:4;20971:2;20960:9;20956:18;20948:26;;21020:9;21014:4;21010:20;21006:1;20995:9;20991:17;20984:47;21048:131;21174:4;21048:131;:::i;:::-;21040:139;;20767:419;;;:::o;21192:180::-;21240:77;21237:1;21230:88;21337:4;21334:1;21327:15;21361:4;21358:1;21351:15;21378:180;21426:77;21423:1;21416:88;21523:4;21520:1;21513:15;21547:4;21544:1;21537:15;21564:191;21604:4;21624:20;21642:1;21624:20;:::i;:::-;21619:25;;21658:20;21676:1;21658:20;:::i;:::-;21653:25;;21697:1;21694;21691:8;21688:34;;;21702:18;;:::i;:::-;21688:34;21747:1;21744;21740:9;21732:17;;21564:191;;;;:::o;21761:305::-;21801:3;21820:20;21838:1;21820:20;:::i;:::-;21815:25;;21854:20;21872:1;21854:20;:::i;:::-;21849:25;;22008:1;21940:66;21936:74;21933:1;21930:81;21927:107;;;22014:18;;:::i;:::-;21927:107;22058:1;22055;22051:9;22044:16;;21761:305;;;;:::o;22072:98::-;22123:6;22157:5;22151:12;22141:22;;22072:98;;;:::o;22176:168::-;22259:11;22293:6;22288:3;22281:19;22333:4;22328:3;22324:14;22309:29;;22176:168;;;;:::o;22350:360::-;22436:3;22464:38;22496:5;22464:38;:::i;:::-;22518:70;22581:6;22576:3;22518:70;:::i;:::-;22511:77;;22597:52;22642:6;22637:3;22630:4;22623:5;22619:16;22597:52;:::i;:::-;22674:29;22696:6;22674:29;:::i;:::-;22669:3;22665:39;22658:46;;22440:270;22350:360;;;;:::o;22716:640::-;22911:4;22949:3;22938:9;22934:19;22926:27;;22963:71;23031:1;23020:9;23016:17;23007:6;22963:71;:::i;:::-;23044:72;23112:2;23101:9;23097:18;23088:6;23044:72;:::i;:::-;23126;23194:2;23183:9;23179:18;23170:6;23126:72;:::i;:::-;23245:9;23239:4;23235:20;23230:2;23219:9;23215:18;23208:48;23273:76;23344:4;23335:6;23273:76;:::i;:::-;23265:84;;22716:640;;;;;;;:::o;23362:141::-;23418:5;23449:6;23443:13;23434:22;;23465:32;23491:5;23465:32;:::i;:::-;23362:141;;;;:::o;23509:349::-;23578:6;23627:2;23615:9;23606:7;23602:23;23598:32;23595:119;;;23633:79;;:::i;:::-;23595:119;23753:1;23778:63;23833:7;23824:6;23813:9;23809:22;23778:63;:::i;:::-;23768:73;;23724:127;23509:349;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1798800","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2924","getApproved(uint256)":"5277","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"3025","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"774","symbol()":"infinite","tokenURI(uint256)":"3467","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256,uint256)":"17","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256,uint256)":"infinite","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"2312","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_ownerOf(uint256)":"2248","_requireMinted(uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256, /* firstTokenId */\\n        uint256 batchSize\\n    ) internal virtual {\\n        if (batchSize > 1) {\\n            if (from != address(0)) {\\n                _balances[from] -= batchSize;\\n            }\\n            if (to != address(0)) {\\n                _balances[to] += batchSize;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1203,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1205,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1209,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1213,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1217,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1223,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC721 token with storage based token URI management.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256, /* firstTokenId */\\n        uint256 batchSize\\n    ) internal virtual {\\n        if (batchSize > 1) {\\n            if (from != address(0)) {\\n                _balances[from] -= batchSize;\\n            }\\n            if (to != address(0)) {\\n                _balances[to] += batchSize;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1203,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1205,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1209,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1213,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1217,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1223,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2269,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cf6c811b73f45a5c9bd3d3e7d7fac4cc7e3bd32a2bff7c419b6826bb1cb7ac0664736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF PUSH13 0x811B73F45A5C9BD3D3E7D7FAC4 0xCC PUSH31 0x3BD32A2BFF7C419B6826BB1CB7AC0664736F6C634300080900330000000000 ","sourceMap":"194:8964:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cf6c811b73f45a5c9bd3d3e7d7fac4cc7e3bd32a2bff7c419b6826bb1cb7ac0664736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF PUSH13 0x811B73F45A5C9BD3D3E7D7FAC4 0xCC PUSH31 0x3BD32A2BFF7C419B6826BB1CB7AC0664736F6C634300080900330000000000 ","sourceMap":"194:8964:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203b14711f206dda738c9e246f609c80e65f0b925a9242f486d9e518b550a0a0bc64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE EQ PUSH18 0x1F206DDA738C9E246F609C80E65F0B925A92 TIMESTAMP DELEGATECALL DUP7 0xD9 0xE5 XOR 0xB5 POP LOG0 LOG0 0xBC PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"188:2065:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203b14711f206dda738c9e246f609c80e65f0b925a9242f486d9e518b550a0a0bc64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE EQ PUSH18 0x1F206DDA738C9E246F609C80E65F0B925A92 TIMESTAMP DELEGATECALL DUP7 0xD9 0xE5 XOR 0xB5 POP LOG0 LOG0 0xBC PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"188:2065:16:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122023347be43f6463e0864ecd7d79cb1cde57cdd06d100a0c39284809729bec5a7c64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 CALLVALUE PUSH28 0xE43F6463E0864ECD7D79CB1CDE57CDD06D100A0C39284809729BEC5A PUSH29 0x64736F6C63430008090033000000000000000000000000000000000000 ","sourceMap":"202:12302:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122023347be43f6463e0864ecd7d79cb1cde57cdd06d100a0c39284809729bec5a7c64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 CALLVALUE PUSH28 0xE43F6463E0864ECD7D79CB1CDE57CDD06D100A0C39284809729BEC5A PUSH29 0x64736F6C63430008090033000000000000000000000000000000000000 ","sourceMap":"202:12302:19:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"base64-sol/base64.sol":{"Base64":{"abi":[],"devdoc":{"author":"Brecht Devos - <brecht@loopring.org>","kind":"dev","methods":{},"title":"Base64","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab15e15a23b19d18f453b6ee92ed5018d4400bcb6538faa6efa7530c9b63f51764736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB ISZERO 0xE1 GAS 0x23 0xB1 SWAP14 XOR DELEGATECALL MSTORE8 0xB6 0xEE SWAP3 0xED POP XOR 0xD4 BLOCKHASH SIGNEXTEND 0xCB PUSH6 0x38FAA6EFA753 0xC SWAP12 PUSH4 0xF5176473 PUSH16 0x6C634300080900330000000000000000 ","sourceMap":"186:4638:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab15e15a23b19d18f453b6ee92ed5018d4400bcb6538faa6efa7530c9b63f51764736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB ISZERO 0xE1 GAS 0x23 0xB1 SWAP14 XOR DELEGATECALL MSTORE8 0xB6 0xEE SWAP3 0xED POP XOR 0xD4 BLOCKHASH SIGNEXTEND 0xCB PUSH6 0x38FAA6EFA753 0xC SWAP12 PUSH4 0xF5176473 PUSH16 0x6C634300080900330000000000000000 ","sourceMap":"186:4638:20:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"decode(string memory)":"infinite","encode(bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Brecht Devos - <brecht@loopring.org>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Base64\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides functions for encoding/decoding base64\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"base64-sol/base64.sol\":\"Base64\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"base64-sol/base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0;\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides functions for encoding/decoding base64\\nlibrary Base64 {\\n    string internal constant TABLE_ENCODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\\n    bytes  internal constant TABLE_DECODE = hex\\\"0000000000000000000000000000000000000000000000000000000000000000\\\"\\n                                            hex\\\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\\\"\\n                                            hex\\\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\\\"\\n                                            hex\\\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\\\";\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return '';\\n\\n        // load the table into memory\\n        string memory table = TABLE_ENCODE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n            // set the actual output length\\n            mstore(result, encodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n                // read 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // write 4 characters\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n            }\\n\\n            // padding with '='\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n\\n        return result;\\n    }\\n\\n    function decode(string memory _data) internal pure returns (bytes memory) {\\n        bytes memory data = bytes(_data);\\n\\n        if (data.length == 0) return new bytes(0);\\n        require(data.length % 4 == 0, \\\"invalid base64 decoder input\\\");\\n\\n        // load the table into memory\\n        bytes memory table = TABLE_DECODE;\\n\\n        // every 4 characters represent 3 bytes\\n        uint256 decodedLen = (data.length / 4) * 3;\\n\\n        // add some extra buffer at the end required for the writing\\n        bytes memory result = new bytes(decodedLen + 32);\\n\\n        assembly {\\n            // padding with '='\\n            let lastBytes := mload(add(data, mload(data)))\\n            if eq(and(lastBytes, 0xFF), 0x3d) {\\n                decodedLen := sub(decodedLen, 1)\\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\\n                    decodedLen := sub(decodedLen, 1)\\n                }\\n            }\\n\\n            // set the actual output length\\n            mstore(result, decodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 4 characters at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n               // read 4 characters\\n               dataPtr := add(dataPtr, 4)\\n               let input := mload(dataPtr)\\n\\n               // write 3 bytes\\n               let output := add(\\n                   add(\\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\\n                   add(\\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\\n                    )\\n                )\\n                mstore(resultPtr, shl(232, output))\\n                resultPtr := add(resultPtr, 3)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Provides functions for encoding/decoding base64","version":1}}},"contracts/BasicNft.sol":{"BasicNft":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"TOKEN_URI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintNft","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1240":{"entryPoint":null,"id":1240,"parameterSlots":2,"returnSlots":0},"@_3973":{"entryPoint":null,"id":3973,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":415,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x22":{"entryPoint":368,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:516:25","statements":[{"body":{"nodeType":"YulBlock","src":"35:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"55:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45:6:25"},"nodeType":"YulFunctionCall","src":"45:88:25"},"nodeType":"YulExpressionStatement","src":"45:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"149:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"152:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"142:6:25"},"nodeType":"YulFunctionCall","src":"142:15:25"},"nodeType":"YulExpressionStatement","src":"142:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"173:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"176:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"166:6:25"},"nodeType":"YulFunctionCall","src":"166:15:25"},"nodeType":"YulExpressionStatement","src":"166:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7:180:25"},{"body":{"nodeType":"YulBlock","src":"244:269:25","statements":[{"nodeType":"YulAssignment","src":"254:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"268:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"274:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"264:3:25"},"nodeType":"YulFunctionCall","src":"264:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"254:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"285:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"315:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"321:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"311:3:25"},"nodeType":"YulFunctionCall","src":"311:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"289:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"362:51:25","statements":[{"nodeType":"YulAssignment","src":"376:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"390:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"398:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"386:3:25"},"nodeType":"YulFunctionCall","src":"386:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"376:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"342:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"335:6:25"},"nodeType":"YulFunctionCall","src":"335:26:25"},"nodeType":"YulIf","src":"332:81:25"},{"body":{"nodeType":"YulBlock","src":"465:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"479:16:25"},"nodeType":"YulFunctionCall","src":"479:18:25"},"nodeType":"YulExpressionStatement","src":"479:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"429:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"452:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"460:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"449:2:25"},"nodeType":"YulFunctionCall","src":"449:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"426:2:25"},"nodeType":"YulFunctionCall","src":"426:38:25"},"nodeType":"YulIf","src":"423:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"228:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"237:6:25","type":""}],"src":"193:320:25"}]},"contents":"{\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040518060400160405280600581526020017f446f6769650000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f444f470000000000000000000000000000000000000000000000000000000000815250816000908051906020019062000096929190620000c0565b508060019080519060200190620000af929190620000c0565b5050506000600681905550620001d5565b828054620000ce906200019f565b90600052602060002090601f016020900481019282620000f257600085556200013e565b82601f106200010d57805160ff19168380011785556200013e565b828001600101855582156200013e579182015b828111156200013d57825182559160200191906001019062000120565b5b5090506200014d919062000151565b5090565b5b808211156200016c57600081600090555060010162000152565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620001b857607f821691505b60208210811415620001cf57620001ce62000170565b5b50919050565b6124f980620001e56000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde146102ad578063c2229fea146102c9578063c87b56dd146102e7578063e985e9c51461031757610100565b806370a082311461022557806378ce90351461025557806395d89b4114610273578063a22cb4651461029157610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb5780636352211e146101d75780636e02007d1461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a9190611721565b610347565b60405161012c9190611769565b60405180910390f35b61013d610429565b60405161014a919061181d565b60405180910390f35b61016d60048036038101906101689190611875565b6104bb565b60405161017a91906118e3565b60405180910390f35b61019d6004803603810190610198919061192a565b610501565b005b6101b960048036038101906101b4919061196a565b610619565b005b6101d560048036038101906101d0919061196a565b610679565b005b6101f160048036038101906101ec9190611875565b610699565b6040516101fe91906118e3565b60405180910390f35b61020f610720565b60405161021c91906119cc565b60405180910390f35b61023f600480360381019061023a91906119e7565b61072a565b60405161024c91906119cc565b60405180910390f35b61025d6107e2565b60405161026a919061181d565b60405180910390f35b61027b6107fe565b604051610288919061181d565b60405180910390f35b6102ab60048036038101906102a69190611a40565b610890565b005b6102c760048036038101906102c29190611bb5565b6108a6565b005b6102d1610908565b6040516102de91906119cc565b60405180910390f35b61030160048036038101906102fc9190611875565b610936565b60405161030e919061181d565b60405180910390f35b610331600480360381019061032c9190611c38565b610958565b60405161033e9190611769565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061041257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104225750610421826109ec565b5b9050919050565b60606000805461043890611ca7565b80601f016020809104026020016040519081016040528092919081815260200182805461046490611ca7565b80156104b15780601f10610486576101008083540402835291602001916104b1565b820191906000526020600020905b81548152906001019060200180831161049457829003601f168201915b5050505050905090565b60006104c682610a56565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061050c82610699565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057490611d4b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661059c610aa1565b73ffffffffffffffffffffffffffffffffffffffff1614806105cb57506105ca816105c5610aa1565b610958565b5b61060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060190611ddd565b60405180910390fd5b6106148383610aa9565b505050565b61062a610624610aa1565b82610b62565b610669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066090611e6f565b60405180910390fd5b610674838383610bf7565b505050565b610694838383604051806020016040528060008152506108a6565b505050565b6000806106a583610ef1565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070e90611edb565b60405180910390fd5b80915050919050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561079b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079290611f6d565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60405180608001604052806057815260200161246d6057913981565b60606001805461080d90611ca7565b80601f016020809104026020016040519081016040528092919081815260200182805461083990611ca7565b80156108865780601f1061085b57610100808354040283529160200191610886565b820191906000526020600020905b81548152906001019060200180831161086957829003601f168201915b5050505050905090565b6108a261089b610aa1565b8383610f2e565b5050565b6108b76108b1610aa1565b83610b62565b6108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed90611e6f565b60405180910390fd5b6109028484848461109b565b50505050565b6000610916336006546110f7565b6006600081548092919061092990611fbc565b9190505550600654905090565b606060405180608001604052806057815260200161246d605791399050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a5f81611115565b610a9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9590611edb565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610b1c83610699565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b6e83610699565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610bb05750610baf8185610958565b5b80610bee57508373ffffffffffffffffffffffffffffffffffffffff16610bd6846104bb565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610c1782610699565b73ffffffffffffffffffffffffffffffffffffffff1614610c6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6490612077565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd490612109565b60405180910390fd5b610cea8383836001611156565b8273ffffffffffffffffffffffffffffffffffffffff16610d0a82610699565b73ffffffffffffffffffffffffffffffffffffffff1614610d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5790612077565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610eec838383600161127c565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9490612175565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161108e9190611769565b60405180910390a3505050565b6110a6848484610bf7565b6110b284848484611282565b6110f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e890612207565b60405180910390fd5b50505050565b611111828260405180602001604052806000815250611419565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff1661113783610ef1565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600181111561127657600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146111ea5780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111e29190612227565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112755780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461126d919061225b565b925050819055505b5b50505050565b50505050565b60006112a38473ffffffffffffffffffffffffffffffffffffffff16611474565b1561140c578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026112cc610aa1565b8786866040518563ffffffff1660e01b81526004016112ee9493929190612306565b602060405180830381600087803b15801561130857600080fd5b505af192505050801561133957506040513d601f19601f820116820180604052508101906113369190612367565b60015b6113bc573d8060008114611369576040519150601f19603f3d011682016040523d82523d6000602084013e61136e565b606091505b506000815114156113b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ab90612207565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611411565b600190505b949350505050565b6114238383611497565b6114306000848484611282565b61146f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146690612207565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611507576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fe906123e0565b60405180910390fd5b61151081611115565b15611550576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115479061244c565b60405180910390fd5b61155e600083836001611156565b61156781611115565b156115a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159e9061244c565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46116b160008383600161127c565b5050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116fe816116c9565b811461170957600080fd5b50565b60008135905061171b816116f5565b92915050565b600060208284031215611737576117366116bf565b5b60006117458482850161170c565b91505092915050565b60008115159050919050565b6117638161174e565b82525050565b600060208201905061177e600083018461175a565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156117be5780820151818401526020810190506117a3565b838111156117cd576000848401525b50505050565b6000601f19601f8301169050919050565b60006117ef82611784565b6117f9818561178f565b93506118098185602086016117a0565b611812816117d3565b840191505092915050565b6000602082019050818103600083015261183781846117e4565b905092915050565b6000819050919050565b6118528161183f565b811461185d57600080fd5b50565b60008135905061186f81611849565b92915050565b60006020828403121561188b5761188a6116bf565b5b600061189984828501611860565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118cd826118a2565b9050919050565b6118dd816118c2565b82525050565b60006020820190506118f860008301846118d4565b92915050565b611907816118c2565b811461191257600080fd5b50565b600081359050611924816118fe565b92915050565b60008060408385031215611941576119406116bf565b5b600061194f85828601611915565b925050602061196085828601611860565b9150509250929050565b600080600060608486031215611983576119826116bf565b5b600061199186828701611915565b93505060206119a286828701611915565b92505060406119b386828701611860565b9150509250925092565b6119c68161183f565b82525050565b60006020820190506119e160008301846119bd565b92915050565b6000602082840312156119fd576119fc6116bf565b5b6000611a0b84828501611915565b91505092915050565b611a1d8161174e565b8114611a2857600080fd5b50565b600081359050611a3a81611a14565b92915050565b60008060408385031215611a5757611a566116bf565b5b6000611a6585828601611915565b9250506020611a7685828601611a2b565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611ac2826117d3565b810181811067ffffffffffffffff82111715611ae157611ae0611a8a565b5b80604052505050565b6000611af46116b5565b9050611b008282611ab9565b919050565b600067ffffffffffffffff821115611b2057611b1f611a8a565b5b611b29826117d3565b9050602081019050919050565b82818337600083830152505050565b6000611b58611b5384611b05565b611aea565b905082815260208101848484011115611b7457611b73611a85565b5b611b7f848285611b36565b509392505050565b600082601f830112611b9c57611b9b611a80565b5b8135611bac848260208601611b45565b91505092915050565b60008060008060808587031215611bcf57611bce6116bf565b5b6000611bdd87828801611915565b9450506020611bee87828801611915565b9350506040611bff87828801611860565b925050606085013567ffffffffffffffff811115611c2057611c1f6116c4565b5b611c2c87828801611b87565b91505092959194509250565b60008060408385031215611c4f57611c4e6116bf565b5b6000611c5d85828601611915565b9250506020611c6e85828601611915565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cbf57607f821691505b60208210811415611cd357611cd2611c78565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611d3560218361178f565b9150611d4082611cd9565b604082019050919050565b60006020820190508181036000830152611d6481611d28565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611dc7603d8361178f565b9150611dd282611d6b565b604082019050919050565b60006020820190508181036000830152611df681611dba565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611e59602d8361178f565b9150611e6482611dfd565b604082019050919050565b60006020820190508181036000830152611e8881611e4c565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611ec560188361178f565b9150611ed082611e8f565b602082019050919050565b60006020820190508181036000830152611ef481611eb8565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611f5760298361178f565b9150611f6282611efb565b604082019050919050565b60006020820190508181036000830152611f8681611f4a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611fc78261183f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ffa57611ff9611f8d565b5b600182019050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b600061206160258361178f565b915061206c82612005565b604082019050919050565b6000602082019050818103600083015261209081612054565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006120f360248361178f565b91506120fe82612097565b604082019050919050565b60006020820190508181036000830152612122816120e6565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b600061215f60198361178f565b915061216a82612129565b602082019050919050565b6000602082019050818103600083015261218e81612152565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006121f160328361178f565b91506121fc82612195565b604082019050919050565b60006020820190508181036000830152612220816121e4565b9050919050565b60006122328261183f565b915061223d8361183f565b9250828210156122505761224f611f8d565b5b828203905092915050565b60006122668261183f565b91506122718361183f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156122a6576122a5611f8d565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b60006122d8826122b1565b6122e281856122bc565b93506122f28185602086016117a0565b6122fb816117d3565b840191505092915050565b600060808201905061231b60008301876118d4565b61232860208301866118d4565b61233560408301856119bd565b818103606083015261234781846122cd565b905095945050505050565b600081519050612361816116f5565b92915050565b60006020828403121561237d5761237c6116bf565b5b600061238b84828501612352565b91505092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b60006123ca60208361178f565b91506123d582612394565b602082019050919050565b600060208201905081810360008301526123f9816123bd565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612436601c8361178f565b915061244182612400565b602082019050919050565b6000602082019050818103600083015261246581612429565b905091905056fe697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6ea2646970667358221220272552aff76ffe14fc7bf6c6c3c70d963df31e4ae1bd9eb5c2ae0c6b2d42479464736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446F676965000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x444F470000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x96 SWAP3 SWAP2 SWAP1 PUSH3 0xC0 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAF SWAP3 SWAP2 SWAP1 PUSH3 0xC0 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x1D5 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xCE SWAP1 PUSH3 0x19F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xF2 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x13E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x10D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x13E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x13E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x13D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x120 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x14D SWAP2 SWAP1 PUSH3 0x151 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x16C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x152 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1B8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1CF JUMPI PUSH3 0x1CE PUSH3 0x170 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24F9 DUP1 PUSH3 0x1E5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xC2229FEA EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x317 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x78CE9035 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x291 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x207 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1769 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1875 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x192A JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x196A JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x196A JUMP JUMPDEST PUSH2 0x679 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1875 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x19CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x19CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1A40 JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D1 PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x19CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1875 JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH2 0x958 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1769 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x412 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x422 JUMPI POP PUSH2 0x421 DUP3 PUSH2 0x9EC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x438 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x464 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x486 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x494 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6 DUP3 PUSH2 0xA56 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50C DUP3 PUSH2 0x699 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x574 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x59C PUSH2 0xAA1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5CB JUMPI POP PUSH2 0x5CA DUP2 PUSH2 0x5C5 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x958 JUMP JUMPDEST JUMPDEST PUSH2 0x60A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x601 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x614 DUP4 DUP4 PUSH2 0xAA9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x62A PUSH2 0x624 PUSH2 0xAA1 JUMP JUMPDEST DUP3 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x669 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x660 SWAP1 PUSH2 0x1E6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x674 DUP4 DUP4 DUP4 PUSH2 0xBF7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x694 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8A6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6A5 DUP4 PUSH2 0xEF1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x717 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70E SWAP1 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x792 SWAP1 PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x246D PUSH1 0x57 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x80D SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x839 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x886 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x85B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x886 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x869 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8A2 PUSH2 0x89B PUSH2 0xAA1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF2E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8B7 PUSH2 0x8B1 PUSH2 0xAA1 JUMP JUMPDEST DUP4 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x8F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8ED SWAP1 PUSH2 0x1E6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x902 DUP5 DUP5 DUP5 DUP5 PUSH2 0x109B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x916 CALLER PUSH1 0x6 SLOAD PUSH2 0x10F7 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x929 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x246D PUSH1 0x57 SWAP2 CODECOPY SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA5F DUP2 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0xA9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA95 SWAP1 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1C DUP4 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB6E DUP4 PUSH2 0x699 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xBB0 JUMPI POP PUSH2 0xBAF DUP2 DUP6 PUSH2 0x958 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xBEE JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBD6 DUP5 PUSH2 0x4BB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC17 DUP3 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC64 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD4 SWAP1 PUSH2 0x2109 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCEA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1156 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD0A DUP3 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD57 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xEEC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x127C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF94 SWAP1 PUSH2 0x2175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x108E SWAP2 SWAP1 PUSH2 0x1769 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10A6 DUP5 DUP5 DUP5 PUSH2 0xBF7 JUMP JUMPDEST PUSH2 0x10B2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1282 JUMP JUMPDEST PUSH2 0x10F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E8 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1111 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1419 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1137 DUP4 PUSH2 0xEF1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1276 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11EA JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11E2 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1275 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x126D SWAP2 SWAP1 PUSH2 0x225B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1474 JUMP JUMPDEST ISZERO PUSH2 0x140C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x12CC PUSH2 0xAA1 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12EE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2306 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1339 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1336 SWAP2 SWAP1 PUSH2 0x2367 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13BC JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1369 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x136E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x13B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AB SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1423 DUP4 DUP4 PUSH2 0x1497 JUMP JUMPDEST PUSH2 0x1430 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1282 JUMP JUMPDEST PUSH2 0x146F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1466 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1507 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FE SWAP1 PUSH2 0x23E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1510 DUP2 PUSH2 0x1115 JUMP JUMPDEST ISZERO PUSH2 0x1550 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1547 SWAP1 PUSH2 0x244C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x155E PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1156 JUMP JUMPDEST PUSH2 0x1567 DUP2 PUSH2 0x1115 JUMP JUMPDEST ISZERO PUSH2 0x15A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159E SWAP1 PUSH2 0x244C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x16B1 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x127C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16FE DUP2 PUSH2 0x16C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x171B DUP2 PUSH2 0x16F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1737 JUMPI PUSH2 0x1736 PUSH2 0x16BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1745 DUP5 DUP3 DUP6 ADD PUSH2 0x170C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1763 DUP2 PUSH2 0x174E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x177E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x175A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17BE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17A3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x17CD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17EF DUP3 PUSH2 0x1784 JUMP JUMPDEST PUSH2 0x17F9 DUP2 DUP6 PUSH2 0x178F JUMP JUMPDEST SWAP4 POP PUSH2 0x1809 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17A0 JUMP JUMPDEST PUSH2 0x1812 DUP2 PUSH2 0x17D3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1837 DUP2 DUP5 PUSH2 0x17E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1852 DUP2 PUSH2 0x183F JUMP JUMPDEST DUP2 EQ PUSH2 0x185D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x186F DUP2 PUSH2 0x1849 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x188B JUMPI PUSH2 0x188A PUSH2 0x16BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1899 DUP5 DUP3 DUP6 ADD PUSH2 0x1860 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18CD DUP3 PUSH2 0x18A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18DD DUP2 PUSH2 0x18C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1907 DUP2 PUSH2 0x18C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1924 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1941 JUMPI PUSH2 0x1940 PUSH2 0x16BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x194F DUP6 DUP3 DUP7 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1960 DUP6 DUP3 DUP7 ADD PUSH2 0x1860 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1983 JUMPI PUSH2 0x1982 PUSH2 0x16BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1991 DUP7 DUP3 DUP8 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19A2 DUP7 DUP3 DUP8 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19B3 DUP7 DUP3 DUP8 ADD PUSH2 0x1860 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x19C6 DUP2 PUSH2 0x183F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19FD JUMPI PUSH2 0x19FC PUSH2 0x16BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A0B DUP5 DUP3 DUP6 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A1D DUP2 PUSH2 0x174E JUMP JUMPDEST DUP2 EQ PUSH2 0x1A28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A3A DUP2 PUSH2 0x1A14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A57 JUMPI PUSH2 0x1A56 PUSH2 0x16BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A65 DUP6 DUP3 DUP7 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A76 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1AC2 DUP3 PUSH2 0x17D3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1AE1 JUMPI PUSH2 0x1AE0 PUSH2 0x1A8A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B00 DUP3 DUP3 PUSH2 0x1AB9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B20 JUMPI PUSH2 0x1B1F PUSH2 0x1A8A JUMP JUMPDEST JUMPDEST PUSH2 0x1B29 DUP3 PUSH2 0x17D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B58 PUSH2 0x1B53 DUP5 PUSH2 0x1B05 JUMP JUMPDEST PUSH2 0x1AEA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B74 JUMPI PUSH2 0x1B73 PUSH2 0x1A85 JUMP JUMPDEST JUMPDEST PUSH2 0x1B7F DUP5 DUP3 DUP6 PUSH2 0x1B36 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B9C JUMPI PUSH2 0x1B9B PUSH2 0x1A80 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BAC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B45 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BCF JUMPI PUSH2 0x1BCE PUSH2 0x16BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BDD DUP8 DUP3 DUP9 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1BEE DUP8 DUP3 DUP9 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1BFF DUP8 DUP3 DUP9 ADD PUSH2 0x1860 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C20 JUMPI PUSH2 0x1C1F PUSH2 0x16C4 JUMP JUMPDEST JUMPDEST PUSH2 0x1C2C DUP8 DUP3 DUP9 ADD PUSH2 0x1B87 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C4F JUMPI PUSH2 0x1C4E PUSH2 0x16BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C5D DUP6 DUP3 DUP7 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C6E DUP6 DUP3 DUP7 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CBF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1CD3 JUMPI PUSH2 0x1CD2 PUSH2 0x1C78 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D35 PUSH1 0x21 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x1D40 DUP3 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D64 DUP2 PUSH2 0x1D28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC7 PUSH1 0x3D DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD2 DUP3 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF6 DUP2 PUSH2 0x1DBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E59 PUSH1 0x2D DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x1E64 DUP3 PUSH2 0x1DFD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E88 DUP2 PUSH2 0x1E4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC5 PUSH1 0x18 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED0 DUP3 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EF4 DUP2 PUSH2 0x1EB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F57 PUSH1 0x29 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x1F62 DUP3 PUSH2 0x1EFB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F86 DUP2 PUSH2 0x1F4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FC7 DUP3 PUSH2 0x183F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1FFA JUMPI PUSH2 0x1FF9 PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2061 PUSH1 0x25 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x206C DUP3 PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2090 DUP2 PUSH2 0x2054 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F3 PUSH1 0x24 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x20FE DUP3 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2122 DUP2 PUSH2 0x20E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215F PUSH1 0x19 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x216A DUP3 PUSH2 0x2129 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x218E DUP2 PUSH2 0x2152 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F1 PUSH1 0x32 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x21FC DUP3 PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2220 DUP2 PUSH2 0x21E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2232 DUP3 PUSH2 0x183F JUMP JUMPDEST SWAP2 POP PUSH2 0x223D DUP4 PUSH2 0x183F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2250 JUMPI PUSH2 0x224F PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2266 DUP3 PUSH2 0x183F JUMP JUMPDEST SWAP2 POP PUSH2 0x2271 DUP4 PUSH2 0x183F JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x22A6 JUMPI PUSH2 0x22A5 PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D8 DUP3 PUSH2 0x22B1 JUMP JUMPDEST PUSH2 0x22E2 DUP2 DUP6 PUSH2 0x22BC JUMP JUMPDEST SWAP4 POP PUSH2 0x22F2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17A0 JUMP JUMPDEST PUSH2 0x22FB DUP2 PUSH2 0x17D3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x231B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x18D4 JUMP JUMPDEST PUSH2 0x2328 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18D4 JUMP JUMPDEST PUSH2 0x2335 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19BD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2347 DUP2 DUP5 PUSH2 0x22CD JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2361 DUP2 PUSH2 0x16F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x237D JUMPI PUSH2 0x237C PUSH2 0x16BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x238B DUP5 DUP3 DUP6 ADD PUSH2 0x2352 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23CA PUSH1 0x20 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x23D5 DUP3 PUSH2 0x2394 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23F9 DUP2 PUSH2 0x23BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2436 PUSH1 0x1C DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x2441 DUP3 PUSH2 0x2400 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2465 DUP2 PUSH2 0x2429 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID PUSH10 0x7066733A2F2F62616679 PUSH3 0x656967 CALLER CALLDATACOPY PUSH10 0x6F6972373673376D6735 PUSH16 0x6F6265746E636F6A636D336333687861 PUSH20 0x79643472766964346A71687934676B6168656734 0x2F EXTCODEHASH PUSH7 0x696C656E616D65 RETURNDATASIZE ADDRESS 0x2D POP SSTORE SELFBALANCE 0x2E PUSH11 0x736F6EA264697066735822 SLT KECCAK256 0x27 0x25 MSTORE 0xAF 0xF7 PUSH16 0xFE14FC7BF6C6C3C70D963DF31E4AE1BD SWAP15 0xB5 0xC2 0xAE 0xC PUSH12 0x2D42479464736F6C63430008 MULMOD STOP CALLER ","sourceMap":"116:666:21:-:0;;;324:70;;;;;;;;;;1390:113:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;386:1:21::1;370:14;:17;;;;116:666:::0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:180:25:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:320;237:6;274:1;268:4;264:12;254:22;;321:1;315:4;311:12;342:18;332:81;;398:4;390:6;386:17;376:27;;332:81;460:2;452:6;449:14;429:18;426:38;423:84;;;479:18;;:::i;:::-;423:84;244:269;193:320;;;:::o;116:666:21:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@TOKEN_URI_3959":{"entryPoint":2018,"id":3959,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_2121":{"entryPoint":4732,"id":2121,"parameterSlots":4,"returnSlots":0},"@_approve_1954":{"entryPoint":2729,"id":1954,"parameterSlots":2,"returnSlots":0},"@_beforeTokenTransfer_2108":{"entryPoint":4438,"id":2108,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_2062":{"entryPoint":4738,"id":2062,"parameterSlots":4,"returnSlots":1},"@_exists_1623":{"entryPoint":4373,"id":1623,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1657":{"entryPoint":2914,"id":1657,"parameterSlots":2,"returnSlots":1},"@_mint_1778":{"entryPoint":5271,"id":1778,"parameterSlots":2,"returnSlots":0},"@_msgSender_2750":{"entryPoint":2721,"id":2750,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1605":{"entryPoint":3825,"id":1605,"parameterSlots":1,"returnSlots":1},"@_requireMinted_2000":{"entryPoint":2646,"id":2000,"parameterSlots":1,"returnSlots":0},"@_safeMint_1672":{"entryPoint":4343,"id":1672,"parameterSlots":2,"returnSlots":0},"@_safeMint_1701":{"entryPoint":5145,"id":1701,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_1592":{"entryPoint":4251,"id":1592,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1986":{"entryPoint":3886,"id":1986,"parameterSlots":3,"returnSlots":0},"@_transfer_1930":{"entryPoint":3063,"id":1930,"parameterSlots":3,"returnSlots":0},"@approve_1434":{"entryPoint":1281,"id":1434,"parameterSlots":2,"returnSlots":0},"@balanceOf_1295":{"entryPoint":1834,"id":1295,"parameterSlots":1,"returnSlots":1},"@getApproved_1452":{"entryPoint":1211,"id":1452,"parameterSlots":1,"returnSlots":1},"@getTokenCounter_4009":{"entryPoint":1824,"id":4009,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_1487":{"entryPoint":2392,"id":1487,"parameterSlots":2,"returnSlots":1},"@isContract_2426":{"entryPoint":5236,"id":2426,"parameterSlots":1,"returnSlots":1},"@mintNft_3990":{"entryPoint":2312,"id":3990,"parameterSlots":0,"returnSlots":1},"@name_1333":{"entryPoint":1065,"id":1333,"parameterSlots":0,"returnSlots":1},"@ownerOf_1323":{"entryPoint":1689,"id":1323,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_1533":{"entryPoint":1657,"id":1533,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1563":{"entryPoint":2214,"id":1563,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1469":{"entryPoint":2192,"id":1469,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1271":{"entryPoint":839,"id":1271,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2958":{"entryPoint":2540,"id":2958,"parameterSlots":1,"returnSlots":1},"@symbol_1343":{"entryPoint":2046,"id":1343,"parameterSlots":0,"returnSlots":1},"@tokenURI_4001":{"entryPoint":2358,"id":4001,"parameterSlots":1,"returnSlots":1},"@transferFrom_1514":{"entryPoint":1561,"id":1514,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6981,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6421,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":6699,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":9042,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":7047,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6240,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6631,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7224,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6506,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":7093,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6720,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6442,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5921,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":9063,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6261,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6356,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5978,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8909,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6116,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":7756,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":8676,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":8276,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":9257,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":8422,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":8530,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":8010,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":9149,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":7864,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":7464,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":7610,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6589,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6371,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8966,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5993,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6173,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7791,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8711,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8311,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9292,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8457,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8565,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8045,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9184,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7899,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7499,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7645,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6604,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6890,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5813,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6917,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8881,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6020,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8892,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6031,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8795,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8743,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6338,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5966,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5833,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6306,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6207,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":6966,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":6048,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7335,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6841,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":8124,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8077,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7288,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6794,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":6784,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":6789,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5828,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5823,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6099,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":7677,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8597,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":8197,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":9216,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":8343,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":8489,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":7931,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":9108,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":7823,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":7385,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":7531,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6398,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6676,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5877,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6217,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24902:25","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:25","statements":[{"nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:25"},"nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:25"},"nodeType":"YulFunctionCall","src":"187:12:25"},"nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:25"},"nodeType":"YulFunctionCall","src":"310:12:25"},"nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nodeType":"YulBlock","src":"378:105:25","statements":[{"nodeType":"YulAssignment","src":"388:89:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:25","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:25"},"nodeType":"YulFunctionCall","src":"399:78:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:25"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:25","type":""}],"src":"334:149:25"},{"body":{"nodeType":"YulBlock","src":"531:78:25","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:25"},"nodeType":"YulFunctionCall","src":"589:12:25"},"nodeType":"YulExpressionStatement","src":"589:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:25"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:25"},"nodeType":"YulFunctionCall","src":"561:23:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:25"},"nodeType":"YulFunctionCall","src":"551:34:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:25"},"nodeType":"YulFunctionCall","src":"544:42:25"},"nodeType":"YulIf","src":"541:62:25"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:25","type":""}],"src":"489:120:25"},{"body":{"nodeType":"YulBlock","src":"666:86:25","statements":[{"nodeType":"YulAssignment","src":"676:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:25"},"nodeType":"YulFunctionCall","src":"685:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:25"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:25"},"nodeType":"YulFunctionCall","src":"714:32:25"},"nodeType":"YulExpressionStatement","src":"714:32:25"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:25","type":""}],"src":"615:137:25"},{"body":{"nodeType":"YulBlock","src":"823:262:25","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:25"},"nodeType":"YulFunctionCall","src":"871:79:25"},"nodeType":"YulExpressionStatement","src":"871:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:25"},"nodeType":"YulFunctionCall","src":"840:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:25"},"nodeType":"YulFunctionCall","src":"836:32:25"},"nodeType":"YulIf","src":"833:119:25"},{"nodeType":"YulBlock","src":"962:116:25","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:25"},"nodeType":"YulFunctionCall","src":"1036:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:25"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:25"},"nodeType":"YulFunctionCall","src":"1016:52:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:25","type":""}],"src":"758:327:25"},{"body":{"nodeType":"YulBlock","src":"1133:48:25","statements":[{"nodeType":"YulAssignment","src":"1143:32:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:25"},"nodeType":"YulFunctionCall","src":"1161:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:25"},"nodeType":"YulFunctionCall","src":"1154:21:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:25"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:25","type":""}],"src":"1091:90:25"},{"body":{"nodeType":"YulBlock","src":"1246:50:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:25"},"nodeType":"YulFunctionCall","src":"1268:21:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:25"},"nodeType":"YulFunctionCall","src":"1256:34:25"},"nodeType":"YulExpressionStatement","src":"1256:34:25"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:25","type":""}],"src":"1187:109:25"},{"body":{"nodeType":"YulBlock","src":"1394:118:25","statements":[{"nodeType":"YulAssignment","src":"1404:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:25"},"nodeType":"YulFunctionCall","src":"1412:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:25"},"nodeType":"YulFunctionCall","src":"1487:17:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:25"},"nodeType":"YulFunctionCall","src":"1440:65:25"},"nodeType":"YulExpressionStatement","src":"1440:65:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:25","type":""}],"src":"1302:210:25"},{"body":{"nodeType":"YulBlock","src":"1577:40:25","statements":[{"nodeType":"YulAssignment","src":"1588:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:25"},"nodeType":"YulFunctionCall","src":"1598:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:25","type":""}],"src":"1518:99:25"},{"body":{"nodeType":"YulBlock","src":"1719:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:25"},"nodeType":"YulFunctionCall","src":"1729:19:25"},"nodeType":"YulExpressionStatement","src":"1729:19:25"},{"nodeType":"YulAssignment","src":"1757:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:25"},"nodeType":"YulFunctionCall","src":"1772:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:25","type":""}],"src":"1623:169:25"},{"body":{"nodeType":"YulBlock","src":"1847:258:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:25"},"nodeType":"YulFunctionCall","src":"1947:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:25"},"nodeType":"YulFunctionCall","src":"1966:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:25"},"nodeType":"YulFunctionCall","src":"1960:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:25"},"nodeType":"YulFunctionCall","src":"1940:39:25"},"nodeType":"YulExpressionStatement","src":"1940:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:25"},"nodeType":"YulFunctionCall","src":"1884:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:25","statements":[{"nodeType":"YulAssignment","src":"1900:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:25"},"nodeType":"YulFunctionCall","src":"1905:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:25","statements":[]},"src":"1876:113:25"},{"body":{"nodeType":"YulBlock","src":"2023:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:25"},"nodeType":"YulFunctionCall","src":"2069:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:25"},"nodeType":"YulFunctionCall","src":"2062:27:25"},"nodeType":"YulExpressionStatement","src":"2062:27:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:25"},"nodeType":"YulFunctionCall","src":"2001:13:25"},"nodeType":"YulIf","src":"1998:101:25"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:25","type":""}],"src":"1798:307:25"},{"body":{"nodeType":"YulBlock","src":"2159:54:25","statements":[{"nodeType":"YulAssignment","src":"2169:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:25"},"nodeType":"YulFunctionCall","src":"2183:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:25"},"nodeType":"YulFunctionCall","src":"2199:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:25"},"nodeType":"YulFunctionCall","src":"2179:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:25","type":""}],"src":"2111:102:25"},{"body":{"nodeType":"YulBlock","src":"2311:272:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:25"},"nodeType":"YulFunctionCall","src":"2335:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:25","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:25"},"nodeType":"YulFunctionCall","src":"2390:71:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:25"},"nodeType":"YulFunctionCall","src":"2492:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:25"},"nodeType":"YulFunctionCall","src":"2470:52:25"},"nodeType":"YulExpressionStatement","src":"2470:52:25"},{"nodeType":"YulAssignment","src":"2531:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:25"},"nodeType":"YulFunctionCall","src":"2547:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:25"},"nodeType":"YulFunctionCall","src":"2538:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:25","type":""}],"src":"2219:364:25"},{"body":{"nodeType":"YulBlock","src":"2707:195:25","statements":[{"nodeType":"YulAssignment","src":"2717:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:25"},"nodeType":"YulFunctionCall","src":"2725:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:25"},"nodeType":"YulFunctionCall","src":"2760:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:25"},"nodeType":"YulFunctionCall","src":"2779:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:25"},"nodeType":"YulFunctionCall","src":"2753:47:25"},"nodeType":"YulExpressionStatement","src":"2753:47:25"},{"nodeType":"YulAssignment","src":"2809:86:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:25"},"nodeType":"YulFunctionCall","src":"2817:78:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:25","type":""}],"src":"2589:313:25"},{"body":{"nodeType":"YulBlock","src":"2953:32:25","statements":[{"nodeType":"YulAssignment","src":"2963:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:25","type":""}],"src":"2908:77:25"},{"body":{"nodeType":"YulBlock","src":"3034:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:25"},"nodeType":"YulFunctionCall","src":"3093:12:25"},"nodeType":"YulExpressionStatement","src":"3093:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:25"},"nodeType":"YulFunctionCall","src":"3064:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:25"},"nodeType":"YulFunctionCall","src":"3054:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:25"},"nodeType":"YulFunctionCall","src":"3047:43:25"},"nodeType":"YulIf","src":"3044:63:25"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:25","type":""}],"src":"2991:122:25"},{"body":{"nodeType":"YulBlock","src":"3171:87:25","statements":[{"nodeType":"YulAssignment","src":"3181:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:25"},"nodeType":"YulFunctionCall","src":"3190:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:25"},"nodeType":"YulFunctionCall","src":"3219:33:25"},"nodeType":"YulExpressionStatement","src":"3219:33:25"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:25","type":""}],"src":"3119:139:25"},{"body":{"nodeType":"YulBlock","src":"3330:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:25"},"nodeType":"YulFunctionCall","src":"3378:79:25"},"nodeType":"YulExpressionStatement","src":"3378:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:25"},"nodeType":"YulFunctionCall","src":"3347:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:25"},"nodeType":"YulFunctionCall","src":"3343:32:25"},"nodeType":"YulIf","src":"3340:119:25"},{"nodeType":"YulBlock","src":"3469:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:25","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:25"},"nodeType":"YulFunctionCall","src":"3544:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:25"},"nodeType":"YulFunctionCall","src":"3523:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:25","type":""}],"src":"3264:329:25"},{"body":{"nodeType":"YulBlock","src":"3644:81:25","statements":[{"nodeType":"YulAssignment","src":"3654:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:25"},"nodeType":"YulFunctionCall","src":"3665:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:25","type":""}],"src":"3599:126:25"},{"body":{"nodeType":"YulBlock","src":"3776:51:25","statements":[{"nodeType":"YulAssignment","src":"3786:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:25"},"nodeType":"YulFunctionCall","src":"3797:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:25","type":""}],"src":"3731:96:25"},{"body":{"nodeType":"YulBlock","src":"3898:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:25"},"nodeType":"YulFunctionCall","src":"3920:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:25"},"nodeType":"YulFunctionCall","src":"3908:37:25"},"nodeType":"YulExpressionStatement","src":"3908:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:25","type":""}],"src":"3833:118:25"},{"body":{"nodeType":"YulBlock","src":"4055:124:25","statements":[{"nodeType":"YulAssignment","src":"4065:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:25"},"nodeType":"YulFunctionCall","src":"4073:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:25"},"nodeType":"YulFunctionCall","src":"4154:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:25"},"nodeType":"YulFunctionCall","src":"4101:71:25"},"nodeType":"YulExpressionStatement","src":"4101:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:25","type":""}],"src":"3957:222:25"},{"body":{"nodeType":"YulBlock","src":"4228:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:25"},"nodeType":"YulFunctionCall","src":"4287:12:25"},"nodeType":"YulExpressionStatement","src":"4287:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:25"},"nodeType":"YulFunctionCall","src":"4258:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:25"},"nodeType":"YulFunctionCall","src":"4248:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:25"},"nodeType":"YulFunctionCall","src":"4241:43:25"},"nodeType":"YulIf","src":"4238:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:25","type":""}],"src":"4185:122:25"},{"body":{"nodeType":"YulBlock","src":"4365:87:25","statements":[{"nodeType":"YulAssignment","src":"4375:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:25"},"nodeType":"YulFunctionCall","src":"4384:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:25"},"nodeType":"YulFunctionCall","src":"4413:33:25"},"nodeType":"YulExpressionStatement","src":"4413:33:25"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:25","type":""}],"src":"4313:139:25"},{"body":{"nodeType":"YulBlock","src":"4541:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:25"},"nodeType":"YulFunctionCall","src":"4589:79:25"},"nodeType":"YulExpressionStatement","src":"4589:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:25"},"nodeType":"YulFunctionCall","src":"4558:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:25"},"nodeType":"YulFunctionCall","src":"4554:32:25"},"nodeType":"YulIf","src":"4551:119:25"},{"nodeType":"YulBlock","src":"4680:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:25"},"nodeType":"YulFunctionCall","src":"4755:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:25"},"nodeType":"YulFunctionCall","src":"4734:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:25"}]}]},{"nodeType":"YulBlock","src":"4807:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:25"},"nodeType":"YulFunctionCall","src":"4883:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:25"},"nodeType":"YulFunctionCall","src":"4862:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:25","type":""}],"src":"4458:474:25"},{"body":{"nodeType":"YulBlock","src":"5038:519:25","statements":[{"body":{"nodeType":"YulBlock","src":"5084:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5086:77:25"},"nodeType":"YulFunctionCall","src":"5086:79:25"},"nodeType":"YulExpressionStatement","src":"5086:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5059:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5068:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5055:3:25"},"nodeType":"YulFunctionCall","src":"5055:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"5080:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5051:3:25"},"nodeType":"YulFunctionCall","src":"5051:32:25"},"nodeType":"YulIf","src":"5048:119:25"},{"nodeType":"YulBlock","src":"5177:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5192:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5206:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5196:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5221:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5256:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5267:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:25"},"nodeType":"YulFunctionCall","src":"5252:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5276:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5231:20:25"},"nodeType":"YulFunctionCall","src":"5231:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5221:6:25"}]}]},{"nodeType":"YulBlock","src":"5304:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5319:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5333:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5323:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5349:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5395:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:25"},"nodeType":"YulFunctionCall","src":"5380:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5404:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5359:20:25"},"nodeType":"YulFunctionCall","src":"5359:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5349:6:25"}]}]},{"nodeType":"YulBlock","src":"5432:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5447:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5461:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5451:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5477:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5512:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5523:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5508:3:25"},"nodeType":"YulFunctionCall","src":"5508:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5532:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5487:20:25"},"nodeType":"YulFunctionCall","src":"5487:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5477:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4992:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5003:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5015:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5023:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5031:6:25","type":""}],"src":"4938:619:25"},{"body":{"nodeType":"YulBlock","src":"5628:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5645:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5668:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5650:17:25"},"nodeType":"YulFunctionCall","src":"5650:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5638:6:25"},"nodeType":"YulFunctionCall","src":"5638:37:25"},"nodeType":"YulExpressionStatement","src":"5638:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5616:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5623:3:25","type":""}],"src":"5563:118:25"},{"body":{"nodeType":"YulBlock","src":"5785:124:25","statements":[{"nodeType":"YulAssignment","src":"5795:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5807:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5818:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5803:3:25"},"nodeType":"YulFunctionCall","src":"5803:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5795:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5875:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5888:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5899:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5884:3:25"},"nodeType":"YulFunctionCall","src":"5884:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5831:43:25"},"nodeType":"YulFunctionCall","src":"5831:71:25"},"nodeType":"YulExpressionStatement","src":"5831:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5757:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5769:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5780:4:25","type":""}],"src":"5687:222:25"},{"body":{"nodeType":"YulBlock","src":"5981:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"6027:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6029:77:25"},"nodeType":"YulFunctionCall","src":"6029:79:25"},"nodeType":"YulExpressionStatement","src":"6029:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6002:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"6011:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5998:3:25"},"nodeType":"YulFunctionCall","src":"5998:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"6023:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5994:3:25"},"nodeType":"YulFunctionCall","src":"5994:32:25"},"nodeType":"YulIf","src":"5991:119:25"},{"nodeType":"YulBlock","src":"6120:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6135:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6149:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6139:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6164:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6199:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6210:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6195:3:25"},"nodeType":"YulFunctionCall","src":"6195:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6219:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6174:20:25"},"nodeType":"YulFunctionCall","src":"6174:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6164:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5951:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5962:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5974:6:25","type":""}],"src":"5915:329:25"},{"body":{"nodeType":"YulBlock","src":"6290:76:25","statements":[{"body":{"nodeType":"YulBlock","src":"6344:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6353:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6356:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6346:6:25"},"nodeType":"YulFunctionCall","src":"6346:12:25"},"nodeType":"YulExpressionStatement","src":"6346:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6313:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6335:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6320:14:25"},"nodeType":"YulFunctionCall","src":"6320:21:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6310:2:25"},"nodeType":"YulFunctionCall","src":"6310:32:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6303:6:25"},"nodeType":"YulFunctionCall","src":"6303:40:25"},"nodeType":"YulIf","src":"6300:60:25"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6283:5:25","type":""}],"src":"6250:116:25"},{"body":{"nodeType":"YulBlock","src":"6421:84:25","statements":[{"nodeType":"YulAssignment","src":"6431:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6453:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6440:12:25"},"nodeType":"YulFunctionCall","src":"6440:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6431:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6493:5:25"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6469:23:25"},"nodeType":"YulFunctionCall","src":"6469:30:25"},"nodeType":"YulExpressionStatement","src":"6469:30:25"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6399:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"6407:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6415:5:25","type":""}],"src":"6372:133:25"},{"body":{"nodeType":"YulBlock","src":"6591:388:25","statements":[{"body":{"nodeType":"YulBlock","src":"6637:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6639:77:25"},"nodeType":"YulFunctionCall","src":"6639:79:25"},"nodeType":"YulExpressionStatement","src":"6639:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6612:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"6621:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6608:3:25"},"nodeType":"YulFunctionCall","src":"6608:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"6633:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6604:3:25"},"nodeType":"YulFunctionCall","src":"6604:32:25"},"nodeType":"YulIf","src":"6601:119:25"},{"nodeType":"YulBlock","src":"6730:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6745:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6759:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6749:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6774:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6809:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6820:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6805:3:25"},"nodeType":"YulFunctionCall","src":"6805:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6829:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6784:20:25"},"nodeType":"YulFunctionCall","src":"6784:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6774:6:25"}]}]},{"nodeType":"YulBlock","src":"6857:115:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6872:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6886:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6876:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6902:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6934:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6945:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6930:3:25"},"nodeType":"YulFunctionCall","src":"6930:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6954:7:25"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6912:17:25"},"nodeType":"YulFunctionCall","src":"6912:50:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6902:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6553:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6564:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6576:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6584:6:25","type":""}],"src":"6511:468:25"},{"body":{"nodeType":"YulBlock","src":"7074:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7091:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7094:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7084:6:25"},"nodeType":"YulFunctionCall","src":"7084:12:25"},"nodeType":"YulExpressionStatement","src":"7084:12:25"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6985:117:25"},{"body":{"nodeType":"YulBlock","src":"7197:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7214:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7217:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7207:6:25"},"nodeType":"YulFunctionCall","src":"7207:12:25"},"nodeType":"YulExpressionStatement","src":"7207:12:25"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7108:117:25"},{"body":{"nodeType":"YulBlock","src":"7259:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7276:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7279:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7269:6:25"},"nodeType":"YulFunctionCall","src":"7269:88:25"},"nodeType":"YulExpressionStatement","src":"7269:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7373:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7376:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7366:6:25"},"nodeType":"YulFunctionCall","src":"7366:15:25"},"nodeType":"YulExpressionStatement","src":"7366:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7397:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7400:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7390:6:25"},"nodeType":"YulFunctionCall","src":"7390:15:25"},"nodeType":"YulExpressionStatement","src":"7390:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7231:180:25"},{"body":{"nodeType":"YulBlock","src":"7460:238:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7470:58:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7492:6:25"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7522:4:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7500:21:25"},"nodeType":"YulFunctionCall","src":"7500:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7488:3:25"},"nodeType":"YulFunctionCall","src":"7488:40:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7474:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"7639:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7641:16:25"},"nodeType":"YulFunctionCall","src":"7641:18:25"},"nodeType":"YulExpressionStatement","src":"7641:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7582:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"7594:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7579:2:25"},"nodeType":"YulFunctionCall","src":"7579:34:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7618:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7630:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7615:2:25"},"nodeType":"YulFunctionCall","src":"7615:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7576:2:25"},"nodeType":"YulFunctionCall","src":"7576:62:25"},"nodeType":"YulIf","src":"7573:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7677:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7681:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7670:6:25"},"nodeType":"YulFunctionCall","src":"7670:22:25"},"nodeType":"YulExpressionStatement","src":"7670:22:25"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7446:6:25","type":""},{"name":"size","nodeType":"YulTypedName","src":"7454:4:25","type":""}],"src":"7417:281:25"},{"body":{"nodeType":"YulBlock","src":"7745:88:25","statements":[{"nodeType":"YulAssignment","src":"7755:30:25","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7765:18:25"},"nodeType":"YulFunctionCall","src":"7765:20:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7755:6:25"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7814:6:25"},{"name":"size","nodeType":"YulIdentifier","src":"7822:4:25"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7794:19:25"},"nodeType":"YulFunctionCall","src":"7794:33:25"},"nodeType":"YulExpressionStatement","src":"7794:33:25"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7729:4:25","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7738:6:25","type":""}],"src":"7704:129:25"},{"body":{"nodeType":"YulBlock","src":"7905:241:25","statements":[{"body":{"nodeType":"YulBlock","src":"8010:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8012:16:25"},"nodeType":"YulFunctionCall","src":"8012:18:25"},"nodeType":"YulExpressionStatement","src":"8012:18:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7982:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7990:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7979:2:25"},"nodeType":"YulFunctionCall","src":"7979:30:25"},"nodeType":"YulIf","src":"7976:56:25"},{"nodeType":"YulAssignment","src":"8042:37:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8072:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8050:21:25"},"nodeType":"YulFunctionCall","src":"8050:29:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8042:4:25"}]},{"nodeType":"YulAssignment","src":"8116:23:25","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8128:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"8134:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8124:3:25"},"nodeType":"YulFunctionCall","src":"8124:15:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8116:4:25"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7889:6:25","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7900:4:25","type":""}],"src":"7839:307:25"},{"body":{"nodeType":"YulBlock","src":"8203:103:25","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8226:3:25"},{"name":"src","nodeType":"YulIdentifier","src":"8231:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"8236:6:25"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8213:12:25"},"nodeType":"YulFunctionCall","src":"8213:30:25"},"nodeType":"YulExpressionStatement","src":"8213:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8284:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"8289:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8280:3:25"},"nodeType":"YulFunctionCall","src":"8280:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"8298:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8273:6:25"},"nodeType":"YulFunctionCall","src":"8273:27:25"},"nodeType":"YulExpressionStatement","src":"8273:27:25"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8185:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8190:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"8195:6:25","type":""}],"src":"8152:154:25"},{"body":{"nodeType":"YulBlock","src":"8395:327:25","statements":[{"nodeType":"YulAssignment","src":"8405:74:25","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8471:6:25"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8430:40:25"},"nodeType":"YulFunctionCall","src":"8430:48:25"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8414:15:25"},"nodeType":"YulFunctionCall","src":"8414:65:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8405:5:25"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8495:5:25"},{"name":"length","nodeType":"YulIdentifier","src":"8502:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8488:6:25"},"nodeType":"YulFunctionCall","src":"8488:21:25"},"nodeType":"YulExpressionStatement","src":"8488:21:25"},{"nodeType":"YulVariableDeclaration","src":"8518:27:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8533:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"8540:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8529:3:25"},"nodeType":"YulFunctionCall","src":"8529:16:25"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8522:3:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"8583:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8585:77:25"},"nodeType":"YulFunctionCall","src":"8585:79:25"},"nodeType":"YulExpressionStatement","src":"8585:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8564:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"8569:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8560:3:25"},"nodeType":"YulFunctionCall","src":"8560:16:25"},{"name":"end","nodeType":"YulIdentifier","src":"8578:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8557:2:25"},"nodeType":"YulFunctionCall","src":"8557:25:25"},"nodeType":"YulIf","src":"8554:112:25"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8699:3:25"},{"name":"dst","nodeType":"YulIdentifier","src":"8704:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"8709:6:25"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"8675:23:25"},"nodeType":"YulFunctionCall","src":"8675:41:25"},"nodeType":"YulExpressionStatement","src":"8675:41:25"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8368:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"8373:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"8381:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8389:5:25","type":""}],"src":"8312:410:25"},{"body":{"nodeType":"YulBlock","src":"8802:277:25","statements":[{"body":{"nodeType":"YulBlock","src":"8851:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8853:77:25"},"nodeType":"YulFunctionCall","src":"8853:79:25"},"nodeType":"YulExpressionStatement","src":"8853:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8830:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"8838:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8826:3:25"},"nodeType":"YulFunctionCall","src":"8826:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"8845:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8822:3:25"},"nodeType":"YulFunctionCall","src":"8822:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8815:6:25"},"nodeType":"YulFunctionCall","src":"8815:35:25"},"nodeType":"YulIf","src":"8812:122:25"},{"nodeType":"YulVariableDeclaration","src":"8943:34:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8970:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8957:12:25"},"nodeType":"YulFunctionCall","src":"8957:20:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8947:6:25","type":""}]},{"nodeType":"YulAssignment","src":"8986:87:25","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9046:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9054:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9042:3:25"},"nodeType":"YulFunctionCall","src":"9042:17:25"},{"name":"length","nodeType":"YulIdentifier","src":"9061:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"9069:3:25"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8995:46:25"},"nodeType":"YulFunctionCall","src":"8995:78:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8986:5:25"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8780:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"8788:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8796:5:25","type":""}],"src":"8741:338:25"},{"body":{"nodeType":"YulBlock","src":"9211:817:25","statements":[{"body":{"nodeType":"YulBlock","src":"9258:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9260:77:25"},"nodeType":"YulFunctionCall","src":"9260:79:25"},"nodeType":"YulExpressionStatement","src":"9260:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9232:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"9241:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9228:3:25"},"nodeType":"YulFunctionCall","src":"9228:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"9253:3:25","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9224:3:25"},"nodeType":"YulFunctionCall","src":"9224:33:25"},"nodeType":"YulIf","src":"9221:120:25"},{"nodeType":"YulBlock","src":"9351:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9366:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9380:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9370:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9395:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9430:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9441:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9426:3:25"},"nodeType":"YulFunctionCall","src":"9426:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9450:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9405:20:25"},"nodeType":"YulFunctionCall","src":"9405:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9395:6:25"}]}]},{"nodeType":"YulBlock","src":"9478:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9493:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9507:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9497:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9523:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9558:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9569:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9554:3:25"},"nodeType":"YulFunctionCall","src":"9554:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9578:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9533:20:25"},"nodeType":"YulFunctionCall","src":"9533:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9523:6:25"}]}]},{"nodeType":"YulBlock","src":"9606:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9621:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9635:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9625:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9651:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9686:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9697:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9682:3:25"},"nodeType":"YulFunctionCall","src":"9682:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9706:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9661:20:25"},"nodeType":"YulFunctionCall","src":"9661:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9651:6:25"}]}]},{"nodeType":"YulBlock","src":"9734:287:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9749:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9780:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9791:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9776:3:25"},"nodeType":"YulFunctionCall","src":"9776:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9763:12:25"},"nodeType":"YulFunctionCall","src":"9763:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9753:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"9842:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9844:77:25"},"nodeType":"YulFunctionCall","src":"9844:79:25"},"nodeType":"YulExpressionStatement","src":"9844:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9814:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9822:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9811:2:25"},"nodeType":"YulFunctionCall","src":"9811:30:25"},"nodeType":"YulIf","src":"9808:117:25"},{"nodeType":"YulAssignment","src":"9939:72:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9983:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9994:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9979:3:25"},"nodeType":"YulFunctionCall","src":"9979:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10003:7:25"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9949:29:25"},"nodeType":"YulFunctionCall","src":"9949:62:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9939:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9157:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9168:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9180:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9188:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9196:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9204:6:25","type":""}],"src":"9085:943:25"},{"body":{"nodeType":"YulBlock","src":"10117:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"10163:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10165:77:25"},"nodeType":"YulFunctionCall","src":"10165:79:25"},"nodeType":"YulExpressionStatement","src":"10165:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10138:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"10147:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10134:3:25"},"nodeType":"YulFunctionCall","src":"10134:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"10159:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10130:3:25"},"nodeType":"YulFunctionCall","src":"10130:32:25"},"nodeType":"YulIf","src":"10127:119:25"},{"nodeType":"YulBlock","src":"10256:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10271:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10285:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10275:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10300:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10335:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10346:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10331:3:25"},"nodeType":"YulFunctionCall","src":"10331:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10355:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10310:20:25"},"nodeType":"YulFunctionCall","src":"10310:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10300:6:25"}]}]},{"nodeType":"YulBlock","src":"10383:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10398:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10412:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10402:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10428:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10463:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10474:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10459:3:25"},"nodeType":"YulFunctionCall","src":"10459:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10483:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10438:20:25"},"nodeType":"YulFunctionCall","src":"10438:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10428:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10079:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10090:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10102:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10110:6:25","type":""}],"src":"10034:474:25"},{"body":{"nodeType":"YulBlock","src":"10542:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10559:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10562:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10552:6:25"},"nodeType":"YulFunctionCall","src":"10552:88:25"},"nodeType":"YulExpressionStatement","src":"10552:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10656:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10659:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10649:6:25"},"nodeType":"YulFunctionCall","src":"10649:15:25"},"nodeType":"YulExpressionStatement","src":"10649:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10680:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10683:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10673:6:25"},"nodeType":"YulFunctionCall","src":"10673:15:25"},"nodeType":"YulExpressionStatement","src":"10673:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10514:180:25"},{"body":{"nodeType":"YulBlock","src":"10751:269:25","statements":[{"nodeType":"YulAssignment","src":"10761:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10775:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"10781:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10771:3:25"},"nodeType":"YulFunctionCall","src":"10771:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10761:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"10792:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10822:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"10828:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10818:3:25"},"nodeType":"YulFunctionCall","src":"10818:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10796:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"10869:51:25","statements":[{"nodeType":"YulAssignment","src":"10883:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10897:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10905:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10893:3:25"},"nodeType":"YulFunctionCall","src":"10893:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10883:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10849:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10842:6:25"},"nodeType":"YulFunctionCall","src":"10842:26:25"},"nodeType":"YulIf","src":"10839:81:25"},{"body":{"nodeType":"YulBlock","src":"10972:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10986:16:25"},"nodeType":"YulFunctionCall","src":"10986:18:25"},"nodeType":"YulExpressionStatement","src":"10986:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10936:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10959:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10967:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10956:2:25"},"nodeType":"YulFunctionCall","src":"10956:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10933:2:25"},"nodeType":"YulFunctionCall","src":"10933:38:25"},"nodeType":"YulIf","src":"10930:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10735:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10744:6:25","type":""}],"src":"10700:320:25"},{"body":{"nodeType":"YulBlock","src":"11132:114:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11154:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"11162:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11150:3:25"},"nodeType":"YulFunctionCall","src":"11150:14:25"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"11166:34:25","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11143:6:25"},"nodeType":"YulFunctionCall","src":"11143:58:25"},"nodeType":"YulExpressionStatement","src":"11143:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11222:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"11230:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11218:3:25"},"nodeType":"YulFunctionCall","src":"11218:15:25"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"11235:3:25","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11211:6:25"},"nodeType":"YulFunctionCall","src":"11211:28:25"},"nodeType":"YulExpressionStatement","src":"11211:28:25"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11124:6:25","type":""}],"src":"11026:220:25"},{"body":{"nodeType":"YulBlock","src":"11398:220:25","statements":[{"nodeType":"YulAssignment","src":"11408:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11474:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"11479:2:25","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11415:58:25"},"nodeType":"YulFunctionCall","src":"11415:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11408:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11580:3:25"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"11491:88:25"},"nodeType":"YulFunctionCall","src":"11491:93:25"},"nodeType":"YulExpressionStatement","src":"11491:93:25"},{"nodeType":"YulAssignment","src":"11593:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11604:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"11609:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11600:3:25"},"nodeType":"YulFunctionCall","src":"11600:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11593:3:25"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11386:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11394:3:25","type":""}],"src":"11252:366:25"},{"body":{"nodeType":"YulBlock","src":"11795:248:25","statements":[{"nodeType":"YulAssignment","src":"11805:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11817:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11828:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11813:3:25"},"nodeType":"YulFunctionCall","src":"11813:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11805:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11852:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11863:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11848:3:25"},"nodeType":"YulFunctionCall","src":"11848:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11871:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"11877:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11867:3:25"},"nodeType":"YulFunctionCall","src":"11867:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11841:6:25"},"nodeType":"YulFunctionCall","src":"11841:47:25"},"nodeType":"YulExpressionStatement","src":"11841:47:25"},{"nodeType":"YulAssignment","src":"11897:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12031:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11905:124:25"},"nodeType":"YulFunctionCall","src":"11905:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11897:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11775:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11790:4:25","type":""}],"src":"11624:419:25"},{"body":{"nodeType":"YulBlock","src":"12155:142:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12177:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12185:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12173:3:25"},"nodeType":"YulFunctionCall","src":"12173:14:25"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"12189:34:25","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12166:6:25"},"nodeType":"YulFunctionCall","src":"12166:58:25"},"nodeType":"YulExpressionStatement","src":"12166:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12245:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12253:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12241:3:25"},"nodeType":"YulFunctionCall","src":"12241:15:25"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"12258:31:25","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12234:6:25"},"nodeType":"YulFunctionCall","src":"12234:56:25"},"nodeType":"YulExpressionStatement","src":"12234:56:25"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12147:6:25","type":""}],"src":"12049:248:25"},{"body":{"nodeType":"YulBlock","src":"12449:220:25","statements":[{"nodeType":"YulAssignment","src":"12459:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12525:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12530:2:25","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12466:58:25"},"nodeType":"YulFunctionCall","src":"12466:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12459:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12631:3:25"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"12542:88:25"},"nodeType":"YulFunctionCall","src":"12542:93:25"},"nodeType":"YulExpressionStatement","src":"12542:93:25"},{"nodeType":"YulAssignment","src":"12644:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12655:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12660:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12651:3:25"},"nodeType":"YulFunctionCall","src":"12651:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12644:3:25"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12437:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12445:3:25","type":""}],"src":"12303:366:25"},{"body":{"nodeType":"YulBlock","src":"12846:248:25","statements":[{"nodeType":"YulAssignment","src":"12856:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12868:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12879:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12864:3:25"},"nodeType":"YulFunctionCall","src":"12864:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12856:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12903:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12914:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12899:3:25"},"nodeType":"YulFunctionCall","src":"12899:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12922:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"12928:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12918:3:25"},"nodeType":"YulFunctionCall","src":"12918:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12892:6:25"},"nodeType":"YulFunctionCall","src":"12892:47:25"},"nodeType":"YulExpressionStatement","src":"12892:47:25"},{"nodeType":"YulAssignment","src":"12948:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13082:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12956:124:25"},"nodeType":"YulFunctionCall","src":"12956:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12948:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12826:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12841:4:25","type":""}],"src":"12675:419:25"},{"body":{"nodeType":"YulBlock","src":"13206:126:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13228:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13236:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13224:3:25"},"nodeType":"YulFunctionCall","src":"13224:14:25"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"13240:34:25","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13217:6:25"},"nodeType":"YulFunctionCall","src":"13217:58:25"},"nodeType":"YulExpressionStatement","src":"13217:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13296:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13304:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13292:3:25"},"nodeType":"YulFunctionCall","src":"13292:15:25"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"13309:15:25","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13285:6:25"},"nodeType":"YulFunctionCall","src":"13285:40:25"},"nodeType":"YulExpressionStatement","src":"13285:40:25"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13198:6:25","type":""}],"src":"13100:232:25"},{"body":{"nodeType":"YulBlock","src":"13484:220:25","statements":[{"nodeType":"YulAssignment","src":"13494:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13560:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"13565:2:25","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13501:58:25"},"nodeType":"YulFunctionCall","src":"13501:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13494:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13666:3:25"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"13577:88:25"},"nodeType":"YulFunctionCall","src":"13577:93:25"},"nodeType":"YulExpressionStatement","src":"13577:93:25"},{"nodeType":"YulAssignment","src":"13679:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13690:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"13695:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13686:3:25"},"nodeType":"YulFunctionCall","src":"13686:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13679:3:25"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13472:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13480:3:25","type":""}],"src":"13338:366:25"},{"body":{"nodeType":"YulBlock","src":"13881:248:25","statements":[{"nodeType":"YulAssignment","src":"13891:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13903:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13914:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13899:3:25"},"nodeType":"YulFunctionCall","src":"13899:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13891:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13938:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13949:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13934:3:25"},"nodeType":"YulFunctionCall","src":"13934:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13957:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"13963:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13953:3:25"},"nodeType":"YulFunctionCall","src":"13953:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13927:6:25"},"nodeType":"YulFunctionCall","src":"13927:47:25"},"nodeType":"YulExpressionStatement","src":"13927:47:25"},{"nodeType":"YulAssignment","src":"13983:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14117:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13991:124:25"},"nodeType":"YulFunctionCall","src":"13991:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13983:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13861:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13876:4:25","type":""}],"src":"13710:419:25"},{"body":{"nodeType":"YulBlock","src":"14241:68:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14263:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"14271:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14259:3:25"},"nodeType":"YulFunctionCall","src":"14259:14:25"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"14275:26:25","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14252:6:25"},"nodeType":"YulFunctionCall","src":"14252:50:25"},"nodeType":"YulExpressionStatement","src":"14252:50:25"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14233:6:25","type":""}],"src":"14135:174:25"},{"body":{"nodeType":"YulBlock","src":"14461:220:25","statements":[{"nodeType":"YulAssignment","src":"14471:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14537:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"14542:2:25","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14478:58:25"},"nodeType":"YulFunctionCall","src":"14478:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14471:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14643:3:25"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"14554:88:25"},"nodeType":"YulFunctionCall","src":"14554:93:25"},"nodeType":"YulExpressionStatement","src":"14554:93:25"},{"nodeType":"YulAssignment","src":"14656:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14667:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"14672:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14663:3:25"},"nodeType":"YulFunctionCall","src":"14663:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14656:3:25"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14449:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14457:3:25","type":""}],"src":"14315:366:25"},{"body":{"nodeType":"YulBlock","src":"14858:248:25","statements":[{"nodeType":"YulAssignment","src":"14868:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14880:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14891:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14876:3:25"},"nodeType":"YulFunctionCall","src":"14876:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14868:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14915:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14926:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14911:3:25"},"nodeType":"YulFunctionCall","src":"14911:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14934:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"14940:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14930:3:25"},"nodeType":"YulFunctionCall","src":"14930:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14904:6:25"},"nodeType":"YulFunctionCall","src":"14904:47:25"},"nodeType":"YulExpressionStatement","src":"14904:47:25"},{"nodeType":"YulAssignment","src":"14960:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15094:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14968:124:25"},"nodeType":"YulFunctionCall","src":"14968:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14960:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14838:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14853:4:25","type":""}],"src":"14687:419:25"},{"body":{"nodeType":"YulBlock","src":"15218:122:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15240:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"15248:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15236:3:25"},"nodeType":"YulFunctionCall","src":"15236:14:25"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"15252:34:25","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15229:6:25"},"nodeType":"YulFunctionCall","src":"15229:58:25"},"nodeType":"YulExpressionStatement","src":"15229:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15308:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"15316:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15304:3:25"},"nodeType":"YulFunctionCall","src":"15304:15:25"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"15321:11:25","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15297:6:25"},"nodeType":"YulFunctionCall","src":"15297:36:25"},"nodeType":"YulExpressionStatement","src":"15297:36:25"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15210:6:25","type":""}],"src":"15112:228:25"},{"body":{"nodeType":"YulBlock","src":"15492:220:25","statements":[{"nodeType":"YulAssignment","src":"15502:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15568:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15573:2:25","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15509:58:25"},"nodeType":"YulFunctionCall","src":"15509:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15502:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15674:3:25"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"15585:88:25"},"nodeType":"YulFunctionCall","src":"15585:93:25"},"nodeType":"YulExpressionStatement","src":"15585:93:25"},{"nodeType":"YulAssignment","src":"15687:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15698:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15703:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15694:3:25"},"nodeType":"YulFunctionCall","src":"15694:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15687:3:25"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15480:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15488:3:25","type":""}],"src":"15346:366:25"},{"body":{"nodeType":"YulBlock","src":"15889:248:25","statements":[{"nodeType":"YulAssignment","src":"15899:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15911:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15922:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15907:3:25"},"nodeType":"YulFunctionCall","src":"15907:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15899:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15946:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15957:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15942:3:25"},"nodeType":"YulFunctionCall","src":"15942:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15965:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"15971:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15961:3:25"},"nodeType":"YulFunctionCall","src":"15961:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15935:6:25"},"nodeType":"YulFunctionCall","src":"15935:47:25"},"nodeType":"YulExpressionStatement","src":"15935:47:25"},{"nodeType":"YulAssignment","src":"15991:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16125:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15999:124:25"},"nodeType":"YulFunctionCall","src":"15999:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15991:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15869:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15884:4:25","type":""}],"src":"15718:419:25"},{"body":{"nodeType":"YulBlock","src":"16171:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16188:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16191:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16181:6:25"},"nodeType":"YulFunctionCall","src":"16181:88:25"},"nodeType":"YulExpressionStatement","src":"16181:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16285:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16288:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16278:6:25"},"nodeType":"YulFunctionCall","src":"16278:15:25"},"nodeType":"YulExpressionStatement","src":"16278:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16309:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16312:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16302:6:25"},"nodeType":"YulFunctionCall","src":"16302:15:25"},"nodeType":"YulExpressionStatement","src":"16302:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"16143:180:25"},{"body":{"nodeType":"YulBlock","src":"16372:190:25","statements":[{"nodeType":"YulAssignment","src":"16382:33:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16409:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16391:17:25"},"nodeType":"YulFunctionCall","src":"16391:24:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16382:5:25"}]},{"body":{"nodeType":"YulBlock","src":"16505:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16507:16:25"},"nodeType":"YulFunctionCall","src":"16507:18:25"},"nodeType":"YulExpressionStatement","src":"16507:18:25"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16430:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"16437:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16427:2:25"},"nodeType":"YulFunctionCall","src":"16427:77:25"},"nodeType":"YulIf","src":"16424:103:25"},{"nodeType":"YulAssignment","src":"16536:20:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16547:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"16554:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16543:3:25"},"nodeType":"YulFunctionCall","src":"16543:13:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"16536:3:25"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16358:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"16368:3:25","type":""}],"src":"16329:233:25"},{"body":{"nodeType":"YulBlock","src":"16674:118:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16696:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"16704:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16692:3:25"},"nodeType":"YulFunctionCall","src":"16692:14:25"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"16708:34:25","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16685:6:25"},"nodeType":"YulFunctionCall","src":"16685:58:25"},"nodeType":"YulExpressionStatement","src":"16685:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16764:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"16772:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16760:3:25"},"nodeType":"YulFunctionCall","src":"16760:15:25"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"16777:7:25","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16753:6:25"},"nodeType":"YulFunctionCall","src":"16753:32:25"},"nodeType":"YulExpressionStatement","src":"16753:32:25"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16666:6:25","type":""}],"src":"16568:224:25"},{"body":{"nodeType":"YulBlock","src":"16944:220:25","statements":[{"nodeType":"YulAssignment","src":"16954:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17020:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"17025:2:25","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16961:58:25"},"nodeType":"YulFunctionCall","src":"16961:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16954:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17126:3:25"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"17037:88:25"},"nodeType":"YulFunctionCall","src":"17037:93:25"},"nodeType":"YulExpressionStatement","src":"17037:93:25"},{"nodeType":"YulAssignment","src":"17139:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17150:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"17155:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17146:3:25"},"nodeType":"YulFunctionCall","src":"17146:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17139:3:25"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16932:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16940:3:25","type":""}],"src":"16798:366:25"},{"body":{"nodeType":"YulBlock","src":"17341:248:25","statements":[{"nodeType":"YulAssignment","src":"17351:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17363:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"17374:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17359:3:25"},"nodeType":"YulFunctionCall","src":"17359:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17351:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17398:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"17409:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17394:3:25"},"nodeType":"YulFunctionCall","src":"17394:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17417:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"17423:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17413:3:25"},"nodeType":"YulFunctionCall","src":"17413:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17387:6:25"},"nodeType":"YulFunctionCall","src":"17387:47:25"},"nodeType":"YulExpressionStatement","src":"17387:47:25"},{"nodeType":"YulAssignment","src":"17443:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17577:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17451:124:25"},"nodeType":"YulFunctionCall","src":"17451:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17443:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17321:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17336:4:25","type":""}],"src":"17170:419:25"},{"body":{"nodeType":"YulBlock","src":"17701:117:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17723:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"17731:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17719:3:25"},"nodeType":"YulFunctionCall","src":"17719:14:25"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"17735:34:25","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17712:6:25"},"nodeType":"YulFunctionCall","src":"17712:58:25"},"nodeType":"YulExpressionStatement","src":"17712:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17791:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"17799:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17787:3:25"},"nodeType":"YulFunctionCall","src":"17787:15:25"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"17804:6:25","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17780:6:25"},"nodeType":"YulFunctionCall","src":"17780:31:25"},"nodeType":"YulExpressionStatement","src":"17780:31:25"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17693:6:25","type":""}],"src":"17595:223:25"},{"body":{"nodeType":"YulBlock","src":"17970:220:25","statements":[{"nodeType":"YulAssignment","src":"17980:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18046:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"18051:2:25","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17987:58:25"},"nodeType":"YulFunctionCall","src":"17987:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17980:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18152:3:25"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"18063:88:25"},"nodeType":"YulFunctionCall","src":"18063:93:25"},"nodeType":"YulExpressionStatement","src":"18063:93:25"},{"nodeType":"YulAssignment","src":"18165:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18176:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"18181:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18172:3:25"},"nodeType":"YulFunctionCall","src":"18172:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18165:3:25"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17958:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17966:3:25","type":""}],"src":"17824:366:25"},{"body":{"nodeType":"YulBlock","src":"18367:248:25","statements":[{"nodeType":"YulAssignment","src":"18377:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18389:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"18400:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18385:3:25"},"nodeType":"YulFunctionCall","src":"18385:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18377:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18424:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"18435:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18420:3:25"},"nodeType":"YulFunctionCall","src":"18420:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18443:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"18449:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18439:3:25"},"nodeType":"YulFunctionCall","src":"18439:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18413:6:25"},"nodeType":"YulFunctionCall","src":"18413:47:25"},"nodeType":"YulExpressionStatement","src":"18413:47:25"},{"nodeType":"YulAssignment","src":"18469:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18603:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18477:124:25"},"nodeType":"YulFunctionCall","src":"18477:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18469:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18347:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18362:4:25","type":""}],"src":"18196:419:25"},{"body":{"nodeType":"YulBlock","src":"18727:69:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18749:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"18757:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18745:3:25"},"nodeType":"YulFunctionCall","src":"18745:14:25"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"18761:27:25","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18738:6:25"},"nodeType":"YulFunctionCall","src":"18738:51:25"},"nodeType":"YulExpressionStatement","src":"18738:51:25"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18719:6:25","type":""}],"src":"18621:175:25"},{"body":{"nodeType":"YulBlock","src":"18948:220:25","statements":[{"nodeType":"YulAssignment","src":"18958:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19024:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"19029:2:25","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18965:58:25"},"nodeType":"YulFunctionCall","src":"18965:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18958:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19130:3:25"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"19041:88:25"},"nodeType":"YulFunctionCall","src":"19041:93:25"},"nodeType":"YulExpressionStatement","src":"19041:93:25"},{"nodeType":"YulAssignment","src":"19143:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19154:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"19159:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19150:3:25"},"nodeType":"YulFunctionCall","src":"19150:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19143:3:25"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18936:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18944:3:25","type":""}],"src":"18802:366:25"},{"body":{"nodeType":"YulBlock","src":"19345:248:25","statements":[{"nodeType":"YulAssignment","src":"19355:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19367:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19378:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19363:3:25"},"nodeType":"YulFunctionCall","src":"19363:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19355:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19402:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19413:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19398:3:25"},"nodeType":"YulFunctionCall","src":"19398:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19421:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"19427:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19417:3:25"},"nodeType":"YulFunctionCall","src":"19417:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19391:6:25"},"nodeType":"YulFunctionCall","src":"19391:47:25"},"nodeType":"YulExpressionStatement","src":"19391:47:25"},{"nodeType":"YulAssignment","src":"19447:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19581:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19455:124:25"},"nodeType":"YulFunctionCall","src":"19455:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19447:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19325:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19340:4:25","type":""}],"src":"19174:419:25"},{"body":{"nodeType":"YulBlock","src":"19705:131:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19727:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"19735:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19723:3:25"},"nodeType":"YulFunctionCall","src":"19723:14:25"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"19739:34:25","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19716:6:25"},"nodeType":"YulFunctionCall","src":"19716:58:25"},"nodeType":"YulExpressionStatement","src":"19716:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19795:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"19803:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19791:3:25"},"nodeType":"YulFunctionCall","src":"19791:15:25"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"19808:20:25","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19784:6:25"},"nodeType":"YulFunctionCall","src":"19784:45:25"},"nodeType":"YulExpressionStatement","src":"19784:45:25"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19697:6:25","type":""}],"src":"19599:237:25"},{"body":{"nodeType":"YulBlock","src":"19988:220:25","statements":[{"nodeType":"YulAssignment","src":"19998:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20064:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"20069:2:25","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20005:58:25"},"nodeType":"YulFunctionCall","src":"20005:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19998:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20170:3:25"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"20081:88:25"},"nodeType":"YulFunctionCall","src":"20081:93:25"},"nodeType":"YulExpressionStatement","src":"20081:93:25"},{"nodeType":"YulAssignment","src":"20183:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20194:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"20199:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20190:3:25"},"nodeType":"YulFunctionCall","src":"20190:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20183:3:25"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19976:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19984:3:25","type":""}],"src":"19842:366:25"},{"body":{"nodeType":"YulBlock","src":"20385:248:25","statements":[{"nodeType":"YulAssignment","src":"20395:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20407:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20418:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20403:3:25"},"nodeType":"YulFunctionCall","src":"20403:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20395:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20442:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20453:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20438:3:25"},"nodeType":"YulFunctionCall","src":"20438:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20461:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"20467:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20457:3:25"},"nodeType":"YulFunctionCall","src":"20457:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20431:6:25"},"nodeType":"YulFunctionCall","src":"20431:47:25"},"nodeType":"YulExpressionStatement","src":"20431:47:25"},{"nodeType":"YulAssignment","src":"20487:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20621:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20495:124:25"},"nodeType":"YulFunctionCall","src":"20495:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20487:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20365:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20380:4:25","type":""}],"src":"20214:419:25"},{"body":{"nodeType":"YulBlock","src":"20684:146:25","statements":[{"nodeType":"YulAssignment","src":"20694:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20717:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20699:17:25"},"nodeType":"YulFunctionCall","src":"20699:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20694:1:25"}]},{"nodeType":"YulAssignment","src":"20728:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20751:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20733:17:25"},"nodeType":"YulFunctionCall","src":"20733:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20728:1:25"}]},{"body":{"nodeType":"YulBlock","src":"20775:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20777:16:25"},"nodeType":"YulFunctionCall","src":"20777:18:25"},"nodeType":"YulExpressionStatement","src":"20777:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20769:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"20772:1:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20766:2:25"},"nodeType":"YulFunctionCall","src":"20766:8:25"},"nodeType":"YulIf","src":"20763:34:25"},{"nodeType":"YulAssignment","src":"20807:17:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20819:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"20822:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20815:3:25"},"nodeType":"YulFunctionCall","src":"20815:9:25"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"20807:4:25"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20670:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"20673:1:25","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"20679:4:25","type":""}],"src":"20639:191:25"},{"body":{"nodeType":"YulBlock","src":"20880:261:25","statements":[{"nodeType":"YulAssignment","src":"20890:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20913:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20895:17:25"},"nodeType":"YulFunctionCall","src":"20895:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20890:1:25"}]},{"nodeType":"YulAssignment","src":"20924:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20947:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20929:17:25"},"nodeType":"YulFunctionCall","src":"20929:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20924:1:25"}]},{"body":{"nodeType":"YulBlock","src":"21087:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21089:16:25"},"nodeType":"YulFunctionCall","src":"21089:18:25"},"nodeType":"YulExpressionStatement","src":"21089:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21008:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21015:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"21083:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21011:3:25"},"nodeType":"YulFunctionCall","src":"21011:74:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21005:2:25"},"nodeType":"YulFunctionCall","src":"21005:81:25"},"nodeType":"YulIf","src":"21002:107:25"},{"nodeType":"YulAssignment","src":"21119:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21130:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"21133:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21126:3:25"},"nodeType":"YulFunctionCall","src":"21126:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"21119:3:25"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20867:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"20870:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"20876:3:25","type":""}],"src":"20836:305:25"},{"body":{"nodeType":"YulBlock","src":"21205:40:25","statements":[{"nodeType":"YulAssignment","src":"21216:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21232:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21226:5:25"},"nodeType":"YulFunctionCall","src":"21226:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21216:6:25"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21188:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"21198:6:25","type":""}],"src":"21147:98:25"},{"body":{"nodeType":"YulBlock","src":"21346:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21363:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"21368:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21356:6:25"},"nodeType":"YulFunctionCall","src":"21356:19:25"},"nodeType":"YulExpressionStatement","src":"21356:19:25"},{"nodeType":"YulAssignment","src":"21384:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21403:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"21408:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21399:3:25"},"nodeType":"YulFunctionCall","src":"21399:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21384:11:25"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21318:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"21323:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21334:11:25","type":""}],"src":"21251:168:25"},{"body":{"nodeType":"YulBlock","src":"21515:270:25","statements":[{"nodeType":"YulVariableDeclaration","src":"21525:52:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21571:5:25"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"21539:31:25"},"nodeType":"YulFunctionCall","src":"21539:38:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21529:6:25","type":""}]},{"nodeType":"YulAssignment","src":"21586:77:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21651:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"21656:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21593:57:25"},"nodeType":"YulFunctionCall","src":"21593:70:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21586:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21698:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"21705:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21694:3:25"},"nodeType":"YulFunctionCall","src":"21694:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"21712:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"21717:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"21672:21:25"},"nodeType":"YulFunctionCall","src":"21672:52:25"},"nodeType":"YulExpressionStatement","src":"21672:52:25"},{"nodeType":"YulAssignment","src":"21733:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21744:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21771:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"21749:21:25"},"nodeType":"YulFunctionCall","src":"21749:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21740:3:25"},"nodeType":"YulFunctionCall","src":"21740:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21733:3:25"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21496:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21503:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21511:3:25","type":""}],"src":"21425:360:25"},{"body":{"nodeType":"YulBlock","src":"21991:440:25","statements":[{"nodeType":"YulAssignment","src":"22001:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22013:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22024:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22009:3:25"},"nodeType":"YulFunctionCall","src":"22009:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22001:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22082:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22095:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22106:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22091:3:25"},"nodeType":"YulFunctionCall","src":"22091:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22038:43:25"},"nodeType":"YulFunctionCall","src":"22038:71:25"},"nodeType":"YulExpressionStatement","src":"22038:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22163:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22176:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22187:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22172:3:25"},"nodeType":"YulFunctionCall","src":"22172:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22119:43:25"},"nodeType":"YulFunctionCall","src":"22119:72:25"},"nodeType":"YulExpressionStatement","src":"22119:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22245:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22258:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22269:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22254:3:25"},"nodeType":"YulFunctionCall","src":"22254:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22201:43:25"},"nodeType":"YulFunctionCall","src":"22201:72:25"},"nodeType":"YulExpressionStatement","src":"22201:72:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22294:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22305:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22290:3:25"},"nodeType":"YulFunctionCall","src":"22290:18:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22314:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"22320:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22310:3:25"},"nodeType":"YulFunctionCall","src":"22310:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22283:6:25"},"nodeType":"YulFunctionCall","src":"22283:48:25"},"nodeType":"YulExpressionStatement","src":"22283:48:25"},{"nodeType":"YulAssignment","src":"22340:84:25","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22410:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"22419:4:25"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22348:61:25"},"nodeType":"YulFunctionCall","src":"22348:76:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22340:4:25"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21939:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21951:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21959:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21967:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21975:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21986:4:25","type":""}],"src":"21791:640:25"},{"body":{"nodeType":"YulBlock","src":"22499:79:25","statements":[{"nodeType":"YulAssignment","src":"22509:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22524:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22518:5:25"},"nodeType":"YulFunctionCall","src":"22518:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22509:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22566:5:25"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"22540:25:25"},"nodeType":"YulFunctionCall","src":"22540:32:25"},"nodeType":"YulExpressionStatement","src":"22540:32:25"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22477:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"22485:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22493:5:25","type":""}],"src":"22437:141:25"},{"body":{"nodeType":"YulBlock","src":"22660:273:25","statements":[{"body":{"nodeType":"YulBlock","src":"22706:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22708:77:25"},"nodeType":"YulFunctionCall","src":"22708:79:25"},"nodeType":"YulExpressionStatement","src":"22708:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22681:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"22690:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22677:3:25"},"nodeType":"YulFunctionCall","src":"22677:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"22702:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22673:3:25"},"nodeType":"YulFunctionCall","src":"22673:32:25"},"nodeType":"YulIf","src":"22670:119:25"},{"nodeType":"YulBlock","src":"22799:127:25","statements":[{"nodeType":"YulVariableDeclaration","src":"22814:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"22828:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22818:6:25","type":""}]},{"nodeType":"YulAssignment","src":"22843:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22888:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"22899:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22884:3:25"},"nodeType":"YulFunctionCall","src":"22884:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22908:7:25"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"22853:30:25"},"nodeType":"YulFunctionCall","src":"22853:63:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22843:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22630:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22641:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22653:6:25","type":""}],"src":"22584:349:25"},{"body":{"nodeType":"YulBlock","src":"23045:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23067:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"23075:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23063:3:25"},"nodeType":"YulFunctionCall","src":"23063:14:25"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"23079:34:25","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23056:6:25"},"nodeType":"YulFunctionCall","src":"23056:58:25"},"nodeType":"YulExpressionStatement","src":"23056:58:25"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23037:6:25","type":""}],"src":"22939:182:25"},{"body":{"nodeType":"YulBlock","src":"23273:220:25","statements":[{"nodeType":"YulAssignment","src":"23283:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23349:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"23354:2:25","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23290:58:25"},"nodeType":"YulFunctionCall","src":"23290:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23283:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23455:3:25"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"23366:88:25"},"nodeType":"YulFunctionCall","src":"23366:93:25"},"nodeType":"YulExpressionStatement","src":"23366:93:25"},{"nodeType":"YulAssignment","src":"23468:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23479:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"23484:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23475:3:25"},"nodeType":"YulFunctionCall","src":"23475:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23468:3:25"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23261:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23269:3:25","type":""}],"src":"23127:366:25"},{"body":{"nodeType":"YulBlock","src":"23670:248:25","statements":[{"nodeType":"YulAssignment","src":"23680:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23692:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"23703:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23688:3:25"},"nodeType":"YulFunctionCall","src":"23688:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23680:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23727:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"23738:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23723:3:25"},"nodeType":"YulFunctionCall","src":"23723:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23746:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"23752:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23742:3:25"},"nodeType":"YulFunctionCall","src":"23742:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23716:6:25"},"nodeType":"YulFunctionCall","src":"23716:47:25"},"nodeType":"YulExpressionStatement","src":"23716:47:25"},{"nodeType":"YulAssignment","src":"23772:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23906:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23780:124:25"},"nodeType":"YulFunctionCall","src":"23780:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23772:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23650:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23665:4:25","type":""}],"src":"23499:419:25"},{"body":{"nodeType":"YulBlock","src":"24030:72:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24052:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"24060:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24048:3:25"},"nodeType":"YulFunctionCall","src":"24048:14:25"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"24064:30:25","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24041:6:25"},"nodeType":"YulFunctionCall","src":"24041:54:25"},"nodeType":"YulExpressionStatement","src":"24041:54:25"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24022:6:25","type":""}],"src":"23924:178:25"},{"body":{"nodeType":"YulBlock","src":"24254:220:25","statements":[{"nodeType":"YulAssignment","src":"24264:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24330:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"24335:2:25","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24271:58:25"},"nodeType":"YulFunctionCall","src":"24271:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24264:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24436:3:25"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"24347:88:25"},"nodeType":"YulFunctionCall","src":"24347:93:25"},"nodeType":"YulExpressionStatement","src":"24347:93:25"},{"nodeType":"YulAssignment","src":"24449:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24460:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"24465:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24456:3:25"},"nodeType":"YulFunctionCall","src":"24456:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24449:3:25"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24242:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24250:3:25","type":""}],"src":"24108:366:25"},{"body":{"nodeType":"YulBlock","src":"24651:248:25","statements":[{"nodeType":"YulAssignment","src":"24661:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24673:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24684:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24669:3:25"},"nodeType":"YulFunctionCall","src":"24669:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24661:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24708:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24719:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24704:3:25"},"nodeType":"YulFunctionCall","src":"24704:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24727:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"24733:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24723:3:25"},"nodeType":"YulFunctionCall","src":"24723:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24697:6:25"},"nodeType":"YulFunctionCall","src":"24697:47:25"},"nodeType":"YulExpressionStatement","src":"24697:47:25"},{"nodeType":"YulAssignment","src":"24753:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24887:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24761:124:25"},"nodeType":"YulFunctionCall","src":"24761:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24753:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24631:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24646:4:25","type":""}],"src":"24480:419:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde146102ad578063c2229fea146102c9578063c87b56dd146102e7578063e985e9c51461031757610100565b806370a082311461022557806378ce90351461025557806395d89b4114610273578063a22cb4651461029157610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb5780636352211e146101d75780636e02007d1461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a9190611721565b610347565b60405161012c9190611769565b60405180910390f35b61013d610429565b60405161014a919061181d565b60405180910390f35b61016d60048036038101906101689190611875565b6104bb565b60405161017a91906118e3565b60405180910390f35b61019d6004803603810190610198919061192a565b610501565b005b6101b960048036038101906101b4919061196a565b610619565b005b6101d560048036038101906101d0919061196a565b610679565b005b6101f160048036038101906101ec9190611875565b610699565b6040516101fe91906118e3565b60405180910390f35b61020f610720565b60405161021c91906119cc565b60405180910390f35b61023f600480360381019061023a91906119e7565b61072a565b60405161024c91906119cc565b60405180910390f35b61025d6107e2565b60405161026a919061181d565b60405180910390f35b61027b6107fe565b604051610288919061181d565b60405180910390f35b6102ab60048036038101906102a69190611a40565b610890565b005b6102c760048036038101906102c29190611bb5565b6108a6565b005b6102d1610908565b6040516102de91906119cc565b60405180910390f35b61030160048036038101906102fc9190611875565b610936565b60405161030e919061181d565b60405180910390f35b610331600480360381019061032c9190611c38565b610958565b60405161033e9190611769565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061041257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104225750610421826109ec565b5b9050919050565b60606000805461043890611ca7565b80601f016020809104026020016040519081016040528092919081815260200182805461046490611ca7565b80156104b15780601f10610486576101008083540402835291602001916104b1565b820191906000526020600020905b81548152906001019060200180831161049457829003601f168201915b5050505050905090565b60006104c682610a56565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061050c82610699565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057490611d4b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661059c610aa1565b73ffffffffffffffffffffffffffffffffffffffff1614806105cb57506105ca816105c5610aa1565b610958565b5b61060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060190611ddd565b60405180910390fd5b6106148383610aa9565b505050565b61062a610624610aa1565b82610b62565b610669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066090611e6f565b60405180910390fd5b610674838383610bf7565b505050565b610694838383604051806020016040528060008152506108a6565b505050565b6000806106a583610ef1565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070e90611edb565b60405180910390fd5b80915050919050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561079b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079290611f6d565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60405180608001604052806057815260200161246d6057913981565b60606001805461080d90611ca7565b80601f016020809104026020016040519081016040528092919081815260200182805461083990611ca7565b80156108865780601f1061085b57610100808354040283529160200191610886565b820191906000526020600020905b81548152906001019060200180831161086957829003601f168201915b5050505050905090565b6108a261089b610aa1565b8383610f2e565b5050565b6108b76108b1610aa1565b83610b62565b6108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed90611e6f565b60405180910390fd5b6109028484848461109b565b50505050565b6000610916336006546110f7565b6006600081548092919061092990611fbc565b9190505550600654905090565b606060405180608001604052806057815260200161246d605791399050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a5f81611115565b610a9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9590611edb565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610b1c83610699565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b6e83610699565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610bb05750610baf8185610958565b5b80610bee57508373ffffffffffffffffffffffffffffffffffffffff16610bd6846104bb565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610c1782610699565b73ffffffffffffffffffffffffffffffffffffffff1614610c6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6490612077565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd490612109565b60405180910390fd5b610cea8383836001611156565b8273ffffffffffffffffffffffffffffffffffffffff16610d0a82610699565b73ffffffffffffffffffffffffffffffffffffffff1614610d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5790612077565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610eec838383600161127c565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9490612175565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161108e9190611769565b60405180910390a3505050565b6110a6848484610bf7565b6110b284848484611282565b6110f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e890612207565b60405180910390fd5b50505050565b611111828260405180602001604052806000815250611419565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff1661113783610ef1565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600181111561127657600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146111ea5780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111e29190612227565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112755780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461126d919061225b565b925050819055505b5b50505050565b50505050565b60006112a38473ffffffffffffffffffffffffffffffffffffffff16611474565b1561140c578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026112cc610aa1565b8786866040518563ffffffff1660e01b81526004016112ee9493929190612306565b602060405180830381600087803b15801561130857600080fd5b505af192505050801561133957506040513d601f19601f820116820180604052508101906113369190612367565b60015b6113bc573d8060008114611369576040519150601f19603f3d011682016040523d82523d6000602084013e61136e565b606091505b506000815114156113b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ab90612207565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611411565b600190505b949350505050565b6114238383611497565b6114306000848484611282565b61146f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146690612207565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611507576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fe906123e0565b60405180910390fd5b61151081611115565b15611550576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115479061244c565b60405180910390fd5b61155e600083836001611156565b61156781611115565b156115a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159e9061244c565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46116b160008383600161127c565b5050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116fe816116c9565b811461170957600080fd5b50565b60008135905061171b816116f5565b92915050565b600060208284031215611737576117366116bf565b5b60006117458482850161170c565b91505092915050565b60008115159050919050565b6117638161174e565b82525050565b600060208201905061177e600083018461175a565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156117be5780820151818401526020810190506117a3565b838111156117cd576000848401525b50505050565b6000601f19601f8301169050919050565b60006117ef82611784565b6117f9818561178f565b93506118098185602086016117a0565b611812816117d3565b840191505092915050565b6000602082019050818103600083015261183781846117e4565b905092915050565b6000819050919050565b6118528161183f565b811461185d57600080fd5b50565b60008135905061186f81611849565b92915050565b60006020828403121561188b5761188a6116bf565b5b600061189984828501611860565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118cd826118a2565b9050919050565b6118dd816118c2565b82525050565b60006020820190506118f860008301846118d4565b92915050565b611907816118c2565b811461191257600080fd5b50565b600081359050611924816118fe565b92915050565b60008060408385031215611941576119406116bf565b5b600061194f85828601611915565b925050602061196085828601611860565b9150509250929050565b600080600060608486031215611983576119826116bf565b5b600061199186828701611915565b93505060206119a286828701611915565b92505060406119b386828701611860565b9150509250925092565b6119c68161183f565b82525050565b60006020820190506119e160008301846119bd565b92915050565b6000602082840312156119fd576119fc6116bf565b5b6000611a0b84828501611915565b91505092915050565b611a1d8161174e565b8114611a2857600080fd5b50565b600081359050611a3a81611a14565b92915050565b60008060408385031215611a5757611a566116bf565b5b6000611a6585828601611915565b9250506020611a7685828601611a2b565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611ac2826117d3565b810181811067ffffffffffffffff82111715611ae157611ae0611a8a565b5b80604052505050565b6000611af46116b5565b9050611b008282611ab9565b919050565b600067ffffffffffffffff821115611b2057611b1f611a8a565b5b611b29826117d3565b9050602081019050919050565b82818337600083830152505050565b6000611b58611b5384611b05565b611aea565b905082815260208101848484011115611b7457611b73611a85565b5b611b7f848285611b36565b509392505050565b600082601f830112611b9c57611b9b611a80565b5b8135611bac848260208601611b45565b91505092915050565b60008060008060808587031215611bcf57611bce6116bf565b5b6000611bdd87828801611915565b9450506020611bee87828801611915565b9350506040611bff87828801611860565b925050606085013567ffffffffffffffff811115611c2057611c1f6116c4565b5b611c2c87828801611b87565b91505092959194509250565b60008060408385031215611c4f57611c4e6116bf565b5b6000611c5d85828601611915565b9250506020611c6e85828601611915565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cbf57607f821691505b60208210811415611cd357611cd2611c78565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611d3560218361178f565b9150611d4082611cd9565b604082019050919050565b60006020820190508181036000830152611d6481611d28565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611dc7603d8361178f565b9150611dd282611d6b565b604082019050919050565b60006020820190508181036000830152611df681611dba565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611e59602d8361178f565b9150611e6482611dfd565b604082019050919050565b60006020820190508181036000830152611e8881611e4c565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611ec560188361178f565b9150611ed082611e8f565b602082019050919050565b60006020820190508181036000830152611ef481611eb8565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611f5760298361178f565b9150611f6282611efb565b604082019050919050565b60006020820190508181036000830152611f8681611f4a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611fc78261183f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ffa57611ff9611f8d565b5b600182019050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b600061206160258361178f565b915061206c82612005565b604082019050919050565b6000602082019050818103600083015261209081612054565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006120f360248361178f565b91506120fe82612097565b604082019050919050565b60006020820190508181036000830152612122816120e6565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b600061215f60198361178f565b915061216a82612129565b602082019050919050565b6000602082019050818103600083015261218e81612152565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006121f160328361178f565b91506121fc82612195565b604082019050919050565b60006020820190508181036000830152612220816121e4565b9050919050565b60006122328261183f565b915061223d8361183f565b9250828210156122505761224f611f8d565b5b828203905092915050565b60006122668261183f565b91506122718361183f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156122a6576122a5611f8d565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b60006122d8826122b1565b6122e281856122bc565b93506122f28185602086016117a0565b6122fb816117d3565b840191505092915050565b600060808201905061231b60008301876118d4565b61232860208301866118d4565b61233560408301856119bd565b818103606083015261234781846122cd565b905095945050505050565b600081519050612361816116f5565b92915050565b60006020828403121561237d5761237c6116bf565b5b600061238b84828501612352565b91505092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b60006123ca60208361178f565b91506123d582612394565b602082019050919050565b600060208201905081810360008301526123f9816123bd565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612436601c8361178f565b915061244182612400565b602082019050919050565b6000602082019050818103600083015261246581612429565b905091905056fe697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6ea2646970667358221220272552aff76ffe14fc7bf6c6c3c70d963df31e4ae1bd9eb5c2ae0c6b2d42479464736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xC2229FEA EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x317 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x78CE9035 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x291 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x207 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1769 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1875 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x192A JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x196A JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x196A JUMP JUMPDEST PUSH2 0x679 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1875 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x19CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x19CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1A40 JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D1 PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x19CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1875 JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x181D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH2 0x958 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1769 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x412 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x422 JUMPI POP PUSH2 0x421 DUP3 PUSH2 0x9EC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x438 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x464 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x486 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x494 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6 DUP3 PUSH2 0xA56 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50C DUP3 PUSH2 0x699 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x574 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x59C PUSH2 0xAA1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5CB JUMPI POP PUSH2 0x5CA DUP2 PUSH2 0x5C5 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x958 JUMP JUMPDEST JUMPDEST PUSH2 0x60A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x601 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x614 DUP4 DUP4 PUSH2 0xAA9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x62A PUSH2 0x624 PUSH2 0xAA1 JUMP JUMPDEST DUP3 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x669 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x660 SWAP1 PUSH2 0x1E6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x674 DUP4 DUP4 DUP4 PUSH2 0xBF7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x694 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8A6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6A5 DUP4 PUSH2 0xEF1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x717 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70E SWAP1 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x792 SWAP1 PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x246D PUSH1 0x57 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x80D SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x839 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x886 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x85B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x886 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x869 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8A2 PUSH2 0x89B PUSH2 0xAA1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF2E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8B7 PUSH2 0x8B1 PUSH2 0xAA1 JUMP JUMPDEST DUP4 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x8F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8ED SWAP1 PUSH2 0x1E6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x902 DUP5 DUP5 DUP5 DUP5 PUSH2 0x109B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x916 CALLER PUSH1 0x6 SLOAD PUSH2 0x10F7 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x929 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x246D PUSH1 0x57 SWAP2 CODECOPY SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA5F DUP2 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0xA9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA95 SWAP1 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1C DUP4 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB6E DUP4 PUSH2 0x699 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xBB0 JUMPI POP PUSH2 0xBAF DUP2 DUP6 PUSH2 0x958 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xBEE JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBD6 DUP5 PUSH2 0x4BB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC17 DUP3 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC64 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD4 SWAP1 PUSH2 0x2109 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCEA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1156 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD0A DUP3 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD57 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xEEC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x127C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF94 SWAP1 PUSH2 0x2175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x108E SWAP2 SWAP1 PUSH2 0x1769 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10A6 DUP5 DUP5 DUP5 PUSH2 0xBF7 JUMP JUMPDEST PUSH2 0x10B2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1282 JUMP JUMPDEST PUSH2 0x10F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E8 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1111 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1419 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1137 DUP4 PUSH2 0xEF1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1276 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11EA JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11E2 SWAP2 SWAP1 PUSH2 0x2227 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1275 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x126D SWAP2 SWAP1 PUSH2 0x225B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1474 JUMP JUMPDEST ISZERO PUSH2 0x140C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x12CC PUSH2 0xAA1 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12EE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2306 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1339 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1336 SWAP2 SWAP1 PUSH2 0x2367 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13BC JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1369 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x136E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x13B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AB SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1423 DUP4 DUP4 PUSH2 0x1497 JUMP JUMPDEST PUSH2 0x1430 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1282 JUMP JUMPDEST PUSH2 0x146F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1466 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1507 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FE SWAP1 PUSH2 0x23E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1510 DUP2 PUSH2 0x1115 JUMP JUMPDEST ISZERO PUSH2 0x1550 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1547 SWAP1 PUSH2 0x244C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x155E PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1156 JUMP JUMPDEST PUSH2 0x1567 DUP2 PUSH2 0x1115 JUMP JUMPDEST ISZERO PUSH2 0x15A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159E SWAP1 PUSH2 0x244C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x16B1 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x127C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16FE DUP2 PUSH2 0x16C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x171B DUP2 PUSH2 0x16F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1737 JUMPI PUSH2 0x1736 PUSH2 0x16BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1745 DUP5 DUP3 DUP6 ADD PUSH2 0x170C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1763 DUP2 PUSH2 0x174E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x177E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x175A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17BE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17A3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x17CD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17EF DUP3 PUSH2 0x1784 JUMP JUMPDEST PUSH2 0x17F9 DUP2 DUP6 PUSH2 0x178F JUMP JUMPDEST SWAP4 POP PUSH2 0x1809 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17A0 JUMP JUMPDEST PUSH2 0x1812 DUP2 PUSH2 0x17D3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1837 DUP2 DUP5 PUSH2 0x17E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1852 DUP2 PUSH2 0x183F JUMP JUMPDEST DUP2 EQ PUSH2 0x185D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x186F DUP2 PUSH2 0x1849 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x188B JUMPI PUSH2 0x188A PUSH2 0x16BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1899 DUP5 DUP3 DUP6 ADD PUSH2 0x1860 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18CD DUP3 PUSH2 0x18A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18DD DUP2 PUSH2 0x18C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1907 DUP2 PUSH2 0x18C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1924 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1941 JUMPI PUSH2 0x1940 PUSH2 0x16BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x194F DUP6 DUP3 DUP7 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1960 DUP6 DUP3 DUP7 ADD PUSH2 0x1860 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1983 JUMPI PUSH2 0x1982 PUSH2 0x16BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1991 DUP7 DUP3 DUP8 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19A2 DUP7 DUP3 DUP8 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19B3 DUP7 DUP3 DUP8 ADD PUSH2 0x1860 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x19C6 DUP2 PUSH2 0x183F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19FD JUMPI PUSH2 0x19FC PUSH2 0x16BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A0B DUP5 DUP3 DUP6 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A1D DUP2 PUSH2 0x174E JUMP JUMPDEST DUP2 EQ PUSH2 0x1A28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A3A DUP2 PUSH2 0x1A14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A57 JUMPI PUSH2 0x1A56 PUSH2 0x16BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A65 DUP6 DUP3 DUP7 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A76 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1AC2 DUP3 PUSH2 0x17D3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1AE1 JUMPI PUSH2 0x1AE0 PUSH2 0x1A8A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B00 DUP3 DUP3 PUSH2 0x1AB9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B20 JUMPI PUSH2 0x1B1F PUSH2 0x1A8A JUMP JUMPDEST JUMPDEST PUSH2 0x1B29 DUP3 PUSH2 0x17D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B58 PUSH2 0x1B53 DUP5 PUSH2 0x1B05 JUMP JUMPDEST PUSH2 0x1AEA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B74 JUMPI PUSH2 0x1B73 PUSH2 0x1A85 JUMP JUMPDEST JUMPDEST PUSH2 0x1B7F DUP5 DUP3 DUP6 PUSH2 0x1B36 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B9C JUMPI PUSH2 0x1B9B PUSH2 0x1A80 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BAC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B45 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BCF JUMPI PUSH2 0x1BCE PUSH2 0x16BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BDD DUP8 DUP3 DUP9 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1BEE DUP8 DUP3 DUP9 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1BFF DUP8 DUP3 DUP9 ADD PUSH2 0x1860 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C20 JUMPI PUSH2 0x1C1F PUSH2 0x16C4 JUMP JUMPDEST JUMPDEST PUSH2 0x1C2C DUP8 DUP3 DUP9 ADD PUSH2 0x1B87 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C4F JUMPI PUSH2 0x1C4E PUSH2 0x16BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C5D DUP6 DUP3 DUP7 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C6E DUP6 DUP3 DUP7 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CBF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1CD3 JUMPI PUSH2 0x1CD2 PUSH2 0x1C78 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D35 PUSH1 0x21 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x1D40 DUP3 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D64 DUP2 PUSH2 0x1D28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC7 PUSH1 0x3D DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD2 DUP3 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF6 DUP2 PUSH2 0x1DBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E59 PUSH1 0x2D DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x1E64 DUP3 PUSH2 0x1DFD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E88 DUP2 PUSH2 0x1E4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC5 PUSH1 0x18 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED0 DUP3 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EF4 DUP2 PUSH2 0x1EB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F57 PUSH1 0x29 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x1F62 DUP3 PUSH2 0x1EFB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F86 DUP2 PUSH2 0x1F4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FC7 DUP3 PUSH2 0x183F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1FFA JUMPI PUSH2 0x1FF9 PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2061 PUSH1 0x25 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x206C DUP3 PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2090 DUP2 PUSH2 0x2054 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F3 PUSH1 0x24 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x20FE DUP3 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2122 DUP2 PUSH2 0x20E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215F PUSH1 0x19 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x216A DUP3 PUSH2 0x2129 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x218E DUP2 PUSH2 0x2152 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F1 PUSH1 0x32 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x21FC DUP3 PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2220 DUP2 PUSH2 0x21E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2232 DUP3 PUSH2 0x183F JUMP JUMPDEST SWAP2 POP PUSH2 0x223D DUP4 PUSH2 0x183F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2250 JUMPI PUSH2 0x224F PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2266 DUP3 PUSH2 0x183F JUMP JUMPDEST SWAP2 POP PUSH2 0x2271 DUP4 PUSH2 0x183F JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x22A6 JUMPI PUSH2 0x22A5 PUSH2 0x1F8D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D8 DUP3 PUSH2 0x22B1 JUMP JUMPDEST PUSH2 0x22E2 DUP2 DUP6 PUSH2 0x22BC JUMP JUMPDEST SWAP4 POP PUSH2 0x22F2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17A0 JUMP JUMPDEST PUSH2 0x22FB DUP2 PUSH2 0x17D3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x231B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x18D4 JUMP JUMPDEST PUSH2 0x2328 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18D4 JUMP JUMPDEST PUSH2 0x2335 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19BD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2347 DUP2 DUP5 PUSH2 0x22CD JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2361 DUP2 PUSH2 0x16F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x237D JUMPI PUSH2 0x237C PUSH2 0x16BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x238B DUP5 DUP3 DUP6 ADD PUSH2 0x2352 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23CA PUSH1 0x20 DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x23D5 DUP3 PUSH2 0x2394 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23F9 DUP2 PUSH2 0x23BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2436 PUSH1 0x1C DUP4 PUSH2 0x178F JUMP JUMPDEST SWAP2 POP PUSH2 0x2441 DUP3 PUSH2 0x2400 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2465 DUP2 PUSH2 0x2429 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID PUSH10 0x7066733A2F2F62616679 PUSH3 0x656967 CALLER CALLDATACOPY PUSH10 0x6F6972373673376D6735 PUSH16 0x6F6265746E636F6A636D336333687861 PUSH20 0x79643472766964346A71687934676B6168656734 0x2F EXTCODEHASH PUSH7 0x696C656E616D65 RETURNDATASIZE ADDRESS 0x2D POP SSTORE SELFBALANCE 0x2E PUSH11 0x736F6EA264697066735822 SLT KECCAK256 0x27 0x25 MSTORE 0xAF 0xF7 PUSH16 0xFE14FC7BF6C6C3C70D963DF31E4AE1BD SWAP15 0xB5 0xC2 0xAE 0xC PUSH12 0x2D42479464736F6C63430008 MULMOD STOP CALLER ","sourceMap":"116:666:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5004:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;684:95:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;150:132:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;400:153:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;559:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;684:95:21:-;732:7;758:14;;751:21;;684:95;:::o;1929:204:9:-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;150:132:21:-;;;;;;;;;;;;;;;;;;;:::o;2633:102:9:-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;400:153:21:-;435:7;453:36;463:10;474:14;;453:9;:36::i;:::-;499:14;;:16;;;;;;;;;:::i;:::-;;;;;;532:14;;525:21;;400:153;:::o;559:116::-;628:13;659:9;;;;;;;;;;;;;;;;;652:16;;559:116;;;:::o;4388:162:9:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:17:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:9:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:15:-;693:7;719:10;712:17;;640:96;:::o;12768:171:9:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;8131:108::-;8206:26;8216:2;8220:7;8206:26;;;;;;;;;;;;:9;:26::i;:::-;8131:108;;:::o;7256:126::-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;15698:396::-;15882:1;15870:9;:13;15866:222;;;15919:1;15903:18;;:4;:18;;;15899:85;;15960:9;15941;:15;15951:4;15941:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;15899:85;16015:1;16001:16;;:2;:16;;;15997:81;;16054:9;16037;:13;16047:2;16037:13;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;15997:81;15866:222;15698:396;;;;:::o;16800:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;8460:309::-;8584:18;8590:2;8594:7;8584:5;:18::i;:::-;8633:53;8664:1;8668:2;8672:7;8681:4;8633:22;:53::i;:::-;8612:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8460:309;;;:::o;1175:320:14:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;9091:920:9:-;9184:1;9170:16;;:2;:16;;;;9162:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9242:16;9250:7;9242;:16::i;:::-;9241:17;9233:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9302:48;9331:1;9335:2;9339:7;9348:1;9302:20;:48::i;:::-;9446:16;9454:7;9446;:16::i;:::-;9445:17;9437:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9854:1;9837:9;:13;9847:2;9837:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9895:2;9876:7;:16;9884:7;9876:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9938:7;9934:2;9913:33;;9930:1;9913:33;;;;;;;;;;;;9957:47;9985:1;9989:2;9993:7;10002:1;9957:19;:47::i;:::-;9091:920;;:::o;7:75:25:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:619::-;5015:6;5023;5031;5080:2;5068:9;5059:7;5055:23;5051:32;5048:119;;;5086:79;;:::i;:::-;5048:119;5206:1;5231:53;5276:7;5267:6;5256:9;5252:22;5231:53;:::i;:::-;5221:63;;5177:117;5333:2;5359:53;5404:7;5395:6;5384:9;5380:22;5359:53;:::i;:::-;5349:63;;5304:118;5461:2;5487:53;5532:7;5523:6;5512:9;5508:22;5487:53;:::i;:::-;5477:63;;5432:118;4938:619;;;;;:::o;5563:118::-;5650:24;5668:5;5650:24;:::i;:::-;5645:3;5638:37;5563:118;;:::o;5687:222::-;5780:4;5818:2;5807:9;5803:18;5795:26;;5831:71;5899:1;5888:9;5884:17;5875:6;5831:71;:::i;:::-;5687:222;;;;:::o;5915:329::-;5974:6;6023:2;6011:9;6002:7;5998:23;5994:32;5991:119;;;6029:79;;:::i;:::-;5991:119;6149:1;6174:53;6219:7;6210:6;6199:9;6195:22;6174:53;:::i;:::-;6164:63;;6120:117;5915:329;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:220::-;11166:34;11162:1;11154:6;11150:14;11143:58;11235:3;11230:2;11222:6;11218:15;11211:28;11026:220;:::o;11252:366::-;11394:3;11415:67;11479:2;11474:3;11415:67;:::i;:::-;11408:74;;11491:93;11580:3;11491:93;:::i;:::-;11609:2;11604:3;11600:12;11593:19;;11252:366;;;:::o;11624:419::-;11790:4;11828:2;11817:9;11813:18;11805:26;;11877:9;11871:4;11867:20;11863:1;11852:9;11848:17;11841:47;11905:131;12031:4;11905:131;:::i;:::-;11897:139;;11624:419;;;:::o;12049:248::-;12189:34;12185:1;12177:6;12173:14;12166:58;12258:31;12253:2;12245:6;12241:15;12234:56;12049:248;:::o;12303:366::-;12445:3;12466:67;12530:2;12525:3;12466:67;:::i;:::-;12459:74;;12542:93;12631:3;12542:93;:::i;:::-;12660:2;12655:3;12651:12;12644:19;;12303:366;;;:::o;12675:419::-;12841:4;12879:2;12868:9;12864:18;12856:26;;12928:9;12922:4;12918:20;12914:1;12903:9;12899:17;12892:47;12956:131;13082:4;12956:131;:::i;:::-;12948:139;;12675:419;;;:::o;13100:232::-;13240:34;13236:1;13228:6;13224:14;13217:58;13309:15;13304:2;13296:6;13292:15;13285:40;13100:232;:::o;13338:366::-;13480:3;13501:67;13565:2;13560:3;13501:67;:::i;:::-;13494:74;;13577:93;13666:3;13577:93;:::i;:::-;13695:2;13690:3;13686:12;13679:19;;13338:366;;;:::o;13710:419::-;13876:4;13914:2;13903:9;13899:18;13891:26;;13963:9;13957:4;13953:20;13949:1;13938:9;13934:17;13927:47;13991:131;14117:4;13991:131;:::i;:::-;13983:139;;13710:419;;;:::o;14135:174::-;14275:26;14271:1;14263:6;14259:14;14252:50;14135:174;:::o;14315:366::-;14457:3;14478:67;14542:2;14537:3;14478:67;:::i;:::-;14471:74;;14554:93;14643:3;14554:93;:::i;:::-;14672:2;14667:3;14663:12;14656:19;;14315:366;;;:::o;14687:419::-;14853:4;14891:2;14880:9;14876:18;14868:26;;14940:9;14934:4;14930:20;14926:1;14915:9;14911:17;14904:47;14968:131;15094:4;14968:131;:::i;:::-;14960:139;;14687:419;;;:::o;15112:228::-;15252:34;15248:1;15240:6;15236:14;15229:58;15321:11;15316:2;15308:6;15304:15;15297:36;15112:228;:::o;15346:366::-;15488:3;15509:67;15573:2;15568:3;15509:67;:::i;:::-;15502:74;;15585:93;15674:3;15585:93;:::i;:::-;15703:2;15698:3;15694:12;15687:19;;15346:366;;;:::o;15718:419::-;15884:4;15922:2;15911:9;15907:18;15899:26;;15971:9;15965:4;15961:20;15957:1;15946:9;15942:17;15935:47;15999:131;16125:4;15999:131;:::i;:::-;15991:139;;15718:419;;;:::o;16143:180::-;16191:77;16188:1;16181:88;16288:4;16285:1;16278:15;16312:4;16309:1;16302:15;16329:233;16368:3;16391:24;16409:5;16391:24;:::i;:::-;16382:33;;16437:66;16430:5;16427:77;16424:103;;;16507:18;;:::i;:::-;16424:103;16554:1;16547:5;16543:13;16536:20;;16329:233;;;:::o;16568:224::-;16708:34;16704:1;16696:6;16692:14;16685:58;16777:7;16772:2;16764:6;16760:15;16753:32;16568:224;:::o;16798:366::-;16940:3;16961:67;17025:2;17020:3;16961:67;:::i;:::-;16954:74;;17037:93;17126:3;17037:93;:::i;:::-;17155:2;17150:3;17146:12;17139:19;;16798:366;;;:::o;17170:419::-;17336:4;17374:2;17363:9;17359:18;17351:26;;17423:9;17417:4;17413:20;17409:1;17398:9;17394:17;17387:47;17451:131;17577:4;17451:131;:::i;:::-;17443:139;;17170:419;;;:::o;17595:223::-;17735:34;17731:1;17723:6;17719:14;17712:58;17804:6;17799:2;17791:6;17787:15;17780:31;17595:223;:::o;17824:366::-;17966:3;17987:67;18051:2;18046:3;17987:67;:::i;:::-;17980:74;;18063:93;18152:3;18063:93;:::i;:::-;18181:2;18176:3;18172:12;18165:19;;17824:366;;;:::o;18196:419::-;18362:4;18400:2;18389:9;18385:18;18377:26;;18449:9;18443:4;18439:20;18435:1;18424:9;18420:17;18413:47;18477:131;18603:4;18477:131;:::i;:::-;18469:139;;18196:419;;;:::o;18621:175::-;18761:27;18757:1;18749:6;18745:14;18738:51;18621:175;:::o;18802:366::-;18944:3;18965:67;19029:2;19024:3;18965:67;:::i;:::-;18958:74;;19041:93;19130:3;19041:93;:::i;:::-;19159:2;19154:3;19150:12;19143:19;;18802:366;;;:::o;19174:419::-;19340:4;19378:2;19367:9;19363:18;19355:26;;19427:9;19421:4;19417:20;19413:1;19402:9;19398:17;19391:47;19455:131;19581:4;19455:131;:::i;:::-;19447:139;;19174:419;;;:::o;19599:237::-;19739:34;19735:1;19727:6;19723:14;19716:58;19808:20;19803:2;19795:6;19791:15;19784:45;19599:237;:::o;19842:366::-;19984:3;20005:67;20069:2;20064:3;20005:67;:::i;:::-;19998:74;;20081:93;20170:3;20081:93;:::i;:::-;20199:2;20194:3;20190:12;20183:19;;19842:366;;;:::o;20214:419::-;20380:4;20418:2;20407:9;20403:18;20395:26;;20467:9;20461:4;20457:20;20453:1;20442:9;20438:17;20431:47;20495:131;20621:4;20495:131;:::i;:::-;20487:139;;20214:419;;;:::o;20639:191::-;20679:4;20699:20;20717:1;20699:20;:::i;:::-;20694:25;;20733:20;20751:1;20733:20;:::i;:::-;20728:25;;20772:1;20769;20766:8;20763:34;;;20777:18;;:::i;:::-;20763:34;20822:1;20819;20815:9;20807:17;;20639:191;;;;:::o;20836:305::-;20876:3;20895:20;20913:1;20895:20;:::i;:::-;20890:25;;20929:20;20947:1;20929:20;:::i;:::-;20924:25;;21083:1;21015:66;21011:74;21008:1;21005:81;21002:107;;;21089:18;;:::i;:::-;21002:107;21133:1;21130;21126:9;21119:16;;20836:305;;;;:::o;21147:98::-;21198:6;21232:5;21226:12;21216:22;;21147:98;;;:::o;21251:168::-;21334:11;21368:6;21363:3;21356:19;21408:4;21403:3;21399:14;21384:29;;21251:168;;;;:::o;21425:360::-;21511:3;21539:38;21571:5;21539:38;:::i;:::-;21593:70;21656:6;21651:3;21593:70;:::i;:::-;21586:77;;21672:52;21717:6;21712:3;21705:4;21698:5;21694:16;21672:52;:::i;:::-;21749:29;21771:6;21749:29;:::i;:::-;21744:3;21740:39;21733:46;;21515:270;21425:360;;;;:::o;21791:640::-;21986:4;22024:3;22013:9;22009:19;22001:27;;22038:71;22106:1;22095:9;22091:17;22082:6;22038:71;:::i;:::-;22119:72;22187:2;22176:9;22172:18;22163:6;22119:72;:::i;:::-;22201;22269:2;22258:9;22254:18;22245:6;22201:72;:::i;:::-;22320:9;22314:4;22310:20;22305:2;22294:9;22290:18;22283:48;22348:76;22419:4;22410:6;22348:76;:::i;:::-;22340:84;;21791:640;;;;;;;:::o;22437:141::-;22493:5;22524:6;22518:13;22509:22;;22540:32;22566:5;22540:32;:::i;:::-;22437:141;;;;:::o;22584:349::-;22653:6;22702:2;22690:9;22681:7;22677:23;22673:32;22670:119;;;22708:79;;:::i;:::-;22670:119;22828:1;22853:63;22908:7;22899:6;22888:9;22884:22;22853:63;:::i;:::-;22843:73;;22799:127;22584:349;;;;:::o;22939:182::-;23079:34;23075:1;23067:6;23063:14;23056:58;22939:182;:::o;23127:366::-;23269:3;23290:67;23354:2;23349:3;23290:67;:::i;:::-;23283:74;;23366:93;23455:3;23366:93;:::i;:::-;23484:2;23479:3;23475:12;23468:19;;23127:366;;;:::o;23499:419::-;23665:4;23703:2;23692:9;23688:18;23680:26;;23752:9;23746:4;23742:20;23738:1;23727:9;23723:17;23716:47;23780:131;23906:4;23780:131;:::i;:::-;23772:139;;23499:419;;;:::o;23924:178::-;24064:30;24060:1;24052:6;24048:14;24041:54;23924:178;:::o;24108:366::-;24250:3;24271:67;24335:2;24330:3;24271:67;:::i;:::-;24264:74;;24347:93;24436:3;24347:93;:::i;:::-;24465:2;24460:3;24456:12;24449:19;;24108:366;;;:::o;24480:419::-;24646:4;24684:2;24673:9;24669:18;24661:26;;24733:9;24727:4;24723:20;24719:1;24708:9;24704:17;24697:47;24761:131;24887:4;24761:131;:::i;:::-;24753:139;;24480:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1893000","executionCost":"infinite","totalCost":"infinite"},"external":{"TOKEN_URI()":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2902","getApproved(uint256)":"5300","getTokenCounter()":"2526","isApprovedForAll(address,address)":"infinite","mintNft()":"infinite","name()":"infinite","ownerOf(uint256)":"3069","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"TOKEN_URI()":"78ce9035","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getTokenCounter()":"6e02007d","isApprovedForAll(address,address)":"e985e9c5","mintNft()":"c2229fea","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOKEN_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintNft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BasicNft.sol\":\"BasicNft\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256, /* firstTokenId */\\n        uint256 batchSize\\n    ) internal virtual {\\n        if (batchSize > 1) {\\n            if (from != address(0)) {\\n                _balances[from] -= batchSize;\\n            }\\n            if (to != address(0)) {\\n                _balances[to] += batchSize;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/BasicNft.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\n\\npragma solidity ^0.8.7;\\n\\ncontract BasicNft is ERC721 {\\n    string public constant TOKEN_URI =\\n        \\\"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json\\\";\\n    uint256 private s_tokenCounter;\\n    constructor() ERC721(\\\"Dogie\\\",\\\"DOG\\\") {\\n        s_tokenCounter =0;\\n    }\\n\\n    function mintNft() public returns (uint256){\\n        _safeMint(msg.sender,s_tokenCounter);\\n        s_tokenCounter++;\\n        return s_tokenCounter;\\n    }\\n\\n    function tokenURI(uint256 /*tokenId*/) public pure override returns (string memory){\\n        return TOKEN_URI;\\n    }\\n\\n\\n\\n\\n    function getTokenCounter() public view returns (uint256) {\\n        return s_tokenCounter;\\n    }\\n\\n}\",\"keccak256\":\"0x8dee7c73f847b0bca6b784ee6c4a4ad996edba4bea72bbadd852ed9519ffd97f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1203,"contract":"contracts/BasicNft.sol:BasicNft","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1205,"contract":"contracts/BasicNft.sol:BasicNft","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1209,"contract":"contracts/BasicNft.sol:BasicNft","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1213,"contract":"contracts/BasicNft.sol:BasicNft","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1217,"contract":"contracts/BasicNft.sol:BasicNft","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1223,"contract":"contracts/BasicNft.sol:BasicNft","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3961,"contract":"contracts/BasicNft.sol:BasicNft","label":"s_tokenCounter","offset":0,"slot":"6","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/DynamicSvgNft.sol":{"DynamicSvgNft":{"abi":[{"inputs":[{"internalType":"address","name":"priceFeedAddress","type":"address"},{"internalType":"string","name":"lowSvg","type":"string"},{"internalType":"string","name":"highSvg","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"int256","name":"highValue","type":"int256"}],"name":"CreatedNFT","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getHighImageUri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLowImageUri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int256","name":"highValue","type":"int256"}],"name":"mintNft","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_tokenIdToHighValue","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"svg","type":"string"}],"name":"svgToImageURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1240":{"entryPoint":null,"id":1240,"parameterSlots":2,"returnSlots":0},"@_4075":{"entryPoint":null,"id":4075,"parameterSlots":3,"returnSlots":0},"@encode_3889":{"entryPoint":524,"id":3889,"parameterSlots":1,"returnSlots":1},"@svgToImageURI_4108":{"entryPoint":366,"id":4108,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1486,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1196,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1561,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":1612,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1788,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1843,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1868,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":1347,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1098,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1378,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1766,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1777,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1965,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":2105,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2161,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1150,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1118,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1908,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1432,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2305,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1293,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":1918,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":2058,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2258,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1246,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1219,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1224,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1113,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1108,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1229,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":1170,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7435:25","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:25","statements":[{"nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:25"},"nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:25"},"nodeType":"YulFunctionCall","src":"187:12:25"},"nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:25"},"nodeType":"YulFunctionCall","src":"310:12:25"},"nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nodeType":"YulBlock","src":"379:81:25","statements":[{"nodeType":"YulAssignment","src":"389:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:25"},"nodeType":"YulFunctionCall","src":"400:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:25","type":""}],"src":"334:126:25"},{"body":{"nodeType":"YulBlock","src":"511:51:25","statements":[{"nodeType":"YulAssignment","src":"521:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:25"},"nodeType":"YulFunctionCall","src":"532:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:25","type":""}],"src":"466:96:25"},{"body":{"nodeType":"YulBlock","src":"611:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:25"},"nodeType":"YulFunctionCall","src":"670:12:25"},"nodeType":"YulExpressionStatement","src":"670:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:25"},"nodeType":"YulFunctionCall","src":"641:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:25"},"nodeType":"YulFunctionCall","src":"631:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:25"},"nodeType":"YulFunctionCall","src":"624:43:25"},"nodeType":"YulIf","src":"621:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:25","type":""}],"src":"568:122:25"},{"body":{"nodeType":"YulBlock","src":"759:80:25","statements":[{"nodeType":"YulAssignment","src":"769:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:25"},"nodeType":"YulFunctionCall","src":"778:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:25"},"nodeType":"YulFunctionCall","src":"800:33:25"},"nodeType":"YulExpressionStatement","src":"800:33:25"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:25","type":""}],"src":"696:143:25"},{"body":{"nodeType":"YulBlock","src":"934:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"951:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"944:6:25"},"nodeType":"YulFunctionCall","src":"944:12:25"},"nodeType":"YulExpressionStatement","src":"944:12:25"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"845:117:25"},{"body":{"nodeType":"YulBlock","src":"1057:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1074:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1077:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1067:6:25"},"nodeType":"YulFunctionCall","src":"1067:12:25"},"nodeType":"YulExpressionStatement","src":"1067:12:25"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"968:117:25"},{"body":{"nodeType":"YulBlock","src":"1139:54:25","statements":[{"nodeType":"YulAssignment","src":"1149:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1167:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"1174:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1163:3:25"},"nodeType":"YulFunctionCall","src":"1163:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1179:3:25"},"nodeType":"YulFunctionCall","src":"1179:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1159:3:25"},"nodeType":"YulFunctionCall","src":"1159:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1149:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1122:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1132:6:25","type":""}],"src":"1091:102:25"},{"body":{"nodeType":"YulBlock","src":"1227:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1244:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1247:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1237:6:25"},"nodeType":"YulFunctionCall","src":"1237:88:25"},"nodeType":"YulExpressionStatement","src":"1237:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1341:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1344:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:25"},"nodeType":"YulFunctionCall","src":"1334:15:25"},"nodeType":"YulExpressionStatement","src":"1334:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1365:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1368:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1358:6:25"},"nodeType":"YulFunctionCall","src":"1358:15:25"},"nodeType":"YulExpressionStatement","src":"1358:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1199:180:25"},{"body":{"nodeType":"YulBlock","src":"1428:238:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1438:58:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1460:6:25"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1490:4:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1468:21:25"},"nodeType":"YulFunctionCall","src":"1468:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1456:3:25"},"nodeType":"YulFunctionCall","src":"1456:40:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1442:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1607:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1609:16:25"},"nodeType":"YulFunctionCall","src":"1609:18:25"},"nodeType":"YulExpressionStatement","src":"1609:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1550:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"1562:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1547:2:25"},"nodeType":"YulFunctionCall","src":"1547:34:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1586:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1598:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1583:2:25"},"nodeType":"YulFunctionCall","src":"1583:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1544:2:25"},"nodeType":"YulFunctionCall","src":"1544:62:25"},"nodeType":"YulIf","src":"1541:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1645:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1649:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1638:6:25"},"nodeType":"YulFunctionCall","src":"1638:22:25"},"nodeType":"YulExpressionStatement","src":"1638:22:25"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1414:6:25","type":""},{"name":"size","nodeType":"YulTypedName","src":"1422:4:25","type":""}],"src":"1385:281:25"},{"body":{"nodeType":"YulBlock","src":"1713:88:25","statements":[{"nodeType":"YulAssignment","src":"1723:30:25","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1733:18:25"},"nodeType":"YulFunctionCall","src":"1733:20:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1723:6:25"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1782:6:25"},{"name":"size","nodeType":"YulIdentifier","src":"1790:4:25"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1762:19:25"},"nodeType":"YulFunctionCall","src":"1762:33:25"},"nodeType":"YulExpressionStatement","src":"1762:33:25"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1697:4:25","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1706:6:25","type":""}],"src":"1672:129:25"},{"body":{"nodeType":"YulBlock","src":"1874:241:25","statements":[{"body":{"nodeType":"YulBlock","src":"1979:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1981:16:25"},"nodeType":"YulFunctionCall","src":"1981:18:25"},"nodeType":"YulExpressionStatement","src":"1981:18:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1951:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"1959:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1948:2:25"},"nodeType":"YulFunctionCall","src":"1948:30:25"},"nodeType":"YulIf","src":"1945:56:25"},{"nodeType":"YulAssignment","src":"2011:37:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2041:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2019:21:25"},"nodeType":"YulFunctionCall","src":"2019:29:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2011:4:25"}]},{"nodeType":"YulAssignment","src":"2085:23:25","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2097:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2093:3:25"},"nodeType":"YulFunctionCall","src":"2093:15:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2085:4:25"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1858:6:25","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1869:4:25","type":""}],"src":"1807:308:25"},{"body":{"nodeType":"YulBlock","src":"2170:258:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2180:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2189:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2184:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2249:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2274:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"2279:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2270:3:25"},"nodeType":"YulFunctionCall","src":"2270:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"2298:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:25"},"nodeType":"YulFunctionCall","src":"2289:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:25"},"nodeType":"YulFunctionCall","src":"2283:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2263:6:25"},"nodeType":"YulFunctionCall","src":"2263:39:25"},"nodeType":"YulExpressionStatement","src":"2263:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2210:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"2213:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2207:2:25"},"nodeType":"YulFunctionCall","src":"2207:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2221:19:25","statements":[{"nodeType":"YulAssignment","src":"2223:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2232:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"2235:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2228:3:25"},"nodeType":"YulFunctionCall","src":"2228:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2223:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"2203:3:25","statements":[]},"src":"2199:113:25"},{"body":{"nodeType":"YulBlock","src":"2346:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2396:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2401:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2392:3:25"},"nodeType":"YulFunctionCall","src":"2392:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"2410:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2385:6:25"},"nodeType":"YulFunctionCall","src":"2385:27:25"},"nodeType":"YulExpressionStatement","src":"2385:27:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2327:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"2330:6:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2324:2:25"},"nodeType":"YulFunctionCall","src":"2324:13:25"},"nodeType":"YulIf","src":"2321:101:25"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2152:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2157:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"2162:6:25","type":""}],"src":"2121:307:25"},{"body":{"nodeType":"YulBlock","src":"2529:326:25","statements":[{"nodeType":"YulAssignment","src":"2539:75:25","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2606:6:25"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2564:41:25"},"nodeType":"YulFunctionCall","src":"2564:49:25"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2548:15:25"},"nodeType":"YulFunctionCall","src":"2548:66:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2539:5:25"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2630:5:25"},{"name":"length","nodeType":"YulIdentifier","src":"2637:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2623:6:25"},"nodeType":"YulFunctionCall","src":"2623:21:25"},"nodeType":"YulExpressionStatement","src":"2623:21:25"},{"nodeType":"YulVariableDeclaration","src":"2653:27:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2668:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2675:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2664:3:25"},"nodeType":"YulFunctionCall","src":"2664:16:25"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2657:3:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2718:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2720:77:25"},"nodeType":"YulFunctionCall","src":"2720:79:25"},"nodeType":"YulExpressionStatement","src":"2720:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2699:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2704:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:25"},"nodeType":"YulFunctionCall","src":"2695:16:25"},{"name":"end","nodeType":"YulIdentifier","src":"2713:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2692:2:25"},"nodeType":"YulFunctionCall","src":"2692:25:25"},"nodeType":"YulIf","src":"2689:112:25"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2832:3:25"},{"name":"dst","nodeType":"YulIdentifier","src":"2837:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2842:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2810:21:25"},"nodeType":"YulFunctionCall","src":"2810:39:25"},"nodeType":"YulExpressionStatement","src":"2810:39:25"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2502:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"2507:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"2515:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2523:5:25","type":""}],"src":"2434:421:25"},{"body":{"nodeType":"YulBlock","src":"2948:282:25","statements":[{"body":{"nodeType":"YulBlock","src":"2997:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2999:77:25"},"nodeType":"YulFunctionCall","src":"2999:79:25"},"nodeType":"YulExpressionStatement","src":"2999:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2976:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2984:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2972:3:25"},"nodeType":"YulFunctionCall","src":"2972:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"2991:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2968:3:25"},"nodeType":"YulFunctionCall","src":"2968:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2961:6:25"},"nodeType":"YulFunctionCall","src":"2961:35:25"},"nodeType":"YulIf","src":"2958:122:25"},{"nodeType":"YulVariableDeclaration","src":"3089:27:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3109:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3103:5:25"},"nodeType":"YulFunctionCall","src":"3103:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3093:6:25","type":""}]},{"nodeType":"YulAssignment","src":"3125:99:25","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3197:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"3205:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3193:3:25"},"nodeType":"YulFunctionCall","src":"3193:17:25"},{"name":"length","nodeType":"YulIdentifier","src":"3212:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"3220:3:25"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3134:58:25"},"nodeType":"YulFunctionCall","src":"3134:90:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3125:5:25"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2926:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"2934:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2942:5:25","type":""}],"src":"2875:355:25"},{"body":{"nodeType":"YulBlock","src":"3367:878:25","statements":[{"body":{"nodeType":"YulBlock","src":"3413:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3415:77:25"},"nodeType":"YulFunctionCall","src":"3415:79:25"},"nodeType":"YulExpressionStatement","src":"3415:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3388:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3397:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3384:3:25"},"nodeType":"YulFunctionCall","src":"3384:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3409:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3380:3:25"},"nodeType":"YulFunctionCall","src":"3380:32:25"},"nodeType":"YulIf","src":"3377:119:25"},{"nodeType":"YulBlock","src":"3506:128:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3521:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3535:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3525:6:25","type":""}]},{"nodeType":"YulAssignment","src":"3550:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3596:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3607:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3592:3:25"},"nodeType":"YulFunctionCall","src":"3592:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3616:7:25"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3560:31:25"},"nodeType":"YulFunctionCall","src":"3560:64:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3550:6:25"}]}]},{"nodeType":"YulBlock","src":"3644:292:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3659:39:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3683:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3694:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3679:3:25"},"nodeType":"YulFunctionCall","src":"3679:18:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3673:5:25"},"nodeType":"YulFunctionCall","src":"3673:25:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3663:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3745:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3747:77:25"},"nodeType":"YulFunctionCall","src":"3747:79:25"},"nodeType":"YulExpressionStatement","src":"3747:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3717:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"3725:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3714:2:25"},"nodeType":"YulFunctionCall","src":"3714:30:25"},"nodeType":"YulIf","src":"3711:117:25"},{"nodeType":"YulAssignment","src":"3842:84:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3898:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3909:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3894:3:25"},"nodeType":"YulFunctionCall","src":"3894:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3918:7:25"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3852:41:25"},"nodeType":"YulFunctionCall","src":"3852:74:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3842:6:25"}]}]},{"nodeType":"YulBlock","src":"3946:292:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3961:39:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3985:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3996:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3981:3:25"},"nodeType":"YulFunctionCall","src":"3981:18:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3975:5:25"},"nodeType":"YulFunctionCall","src":"3975:25:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3965:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"4047:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4049:77:25"},"nodeType":"YulFunctionCall","src":"4049:79:25"},"nodeType":"YulExpressionStatement","src":"4049:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4019:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4027:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4016:2:25"},"nodeType":"YulFunctionCall","src":"4016:30:25"},"nodeType":"YulIf","src":"4013:117:25"},{"nodeType":"YulAssignment","src":"4144:84:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4200:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4211:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4196:3:25"},"nodeType":"YulFunctionCall","src":"4196:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4220:7:25"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4154:41:25"},"nodeType":"YulFunctionCall","src":"4154:74:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4144:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3321:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3332:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3344:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3352:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3360:6:25","type":""}],"src":"3236:1009:25"},{"body":{"nodeType":"YulBlock","src":"4310:40:25","statements":[{"nodeType":"YulAssignment","src":"4321:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4337:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4331:5:25"},"nodeType":"YulFunctionCall","src":"4331:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4321:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4293:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4303:6:25","type":""}],"src":"4251:99:25"},{"body":{"nodeType":"YulBlock","src":"4470:34:25","statements":[{"nodeType":"YulAssignment","src":"4480:18:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"4495:3:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4480:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4442:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"4447:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4458:11:25","type":""}],"src":"4356:148:25"},{"body":{"nodeType":"YulBlock","src":"4620:267:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4630:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4677:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4644:32:25"},"nodeType":"YulFunctionCall","src":"4644:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4634:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4692:96:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4776:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"4781:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4699:76:25"},"nodeType":"YulFunctionCall","src":"4699:89:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4692:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4823:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"4830:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4819:3:25"},"nodeType":"YulFunctionCall","src":"4819:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"4837:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"4842:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4797:21:25"},"nodeType":"YulFunctionCall","src":"4797:52:25"},"nodeType":"YulExpressionStatement","src":"4797:52:25"},{"nodeType":"YulAssignment","src":"4858:23:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4869:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"4874:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4865:3:25"},"nodeType":"YulFunctionCall","src":"4865:16:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4858:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4601:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4608:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4616:3:25","type":""}],"src":"4510:377:25"},{"body":{"nodeType":"YulBlock","src":"5029:139:25","statements":[{"nodeType":"YulAssignment","src":"5040:102:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5129:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"5138:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5047:81:25"},"nodeType":"YulFunctionCall","src":"5047:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5040:3:25"}]},{"nodeType":"YulAssignment","src":"5152:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"5159:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5152:3:25"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5008:3:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5014:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5025:3:25","type":""}],"src":"4893:275:25"},{"body":{"nodeType":"YulBlock","src":"5358:251:25","statements":[{"nodeType":"YulAssignment","src":"5369:102:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5458:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"5467:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5376:81:25"},"nodeType":"YulFunctionCall","src":"5376:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5369:3:25"}]},{"nodeType":"YulAssignment","src":"5481:102:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5570:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"5579:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5488:81:25"},"nodeType":"YulFunctionCall","src":"5488:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5481:3:25"}]},{"nodeType":"YulAssignment","src":"5593:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"5600:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5593:3:25"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5329:3:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5335:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5343:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5354:3:25","type":""}],"src":"5174:435:25"},{"body":{"nodeType":"YulBlock","src":"5660:32:25","statements":[{"nodeType":"YulAssignment","src":"5670:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"5681:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5670:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5642:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5652:7:25","type":""}],"src":"5615:77:25"},{"body":{"nodeType":"YulBlock","src":"5726:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5743:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5746:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5736:6:25"},"nodeType":"YulFunctionCall","src":"5736:88:25"},"nodeType":"YulExpressionStatement","src":"5736:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5840:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5843:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5833:6:25"},"nodeType":"YulFunctionCall","src":"5833:15:25"},"nodeType":"YulExpressionStatement","src":"5833:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5864:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5867:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5857:6:25"},"nodeType":"YulFunctionCall","src":"5857:15:25"},"nodeType":"YulExpressionStatement","src":"5857:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5698:180:25"},{"body":{"nodeType":"YulBlock","src":"5928:261:25","statements":[{"nodeType":"YulAssignment","src":"5938:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5961:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5943:17:25"},"nodeType":"YulFunctionCall","src":"5943:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5938:1:25"}]},{"nodeType":"YulAssignment","src":"5972:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5995:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5977:17:25"},"nodeType":"YulFunctionCall","src":"5977:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5972:1:25"}]},{"body":{"nodeType":"YulBlock","src":"6135:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6137:16:25"},"nodeType":"YulFunctionCall","src":"6137:18:25"},"nodeType":"YulExpressionStatement","src":"6137:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6056:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6063:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"6131:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6059:3:25"},"nodeType":"YulFunctionCall","src":"6059:74:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6053:2:25"},"nodeType":"YulFunctionCall","src":"6053:81:25"},"nodeType":"YulIf","src":"6050:107:25"},{"nodeType":"YulAssignment","src":"6167:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6178:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"6181:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6174:3:25"},"nodeType":"YulFunctionCall","src":"6174:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6167:3:25"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5915:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"5918:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5924:3:25","type":""}],"src":"5884:305:25"},{"body":{"nodeType":"YulBlock","src":"6223:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6240:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6243:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6233:6:25"},"nodeType":"YulFunctionCall","src":"6233:88:25"},"nodeType":"YulExpressionStatement","src":"6233:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6340:4:25","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6330:6:25"},"nodeType":"YulFunctionCall","src":"6330:15:25"},"nodeType":"YulExpressionStatement","src":"6330:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6361:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6364:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6354:6:25"},"nodeType":"YulFunctionCall","src":"6354:15:25"},"nodeType":"YulExpressionStatement","src":"6354:15:25"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"6195:180:25"},{"body":{"nodeType":"YulBlock","src":"6423:143:25","statements":[{"nodeType":"YulAssignment","src":"6433:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6456:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6438:17:25"},"nodeType":"YulFunctionCall","src":"6438:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6433:1:25"}]},{"nodeType":"YulAssignment","src":"6467:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6490:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6472:17:25"},"nodeType":"YulFunctionCall","src":"6472:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6467:1:25"}]},{"body":{"nodeType":"YulBlock","src":"6514:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"6516:16:25"},"nodeType":"YulFunctionCall","src":"6516:18:25"},"nodeType":"YulExpressionStatement","src":"6516:18:25"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6511:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6504:6:25"},"nodeType":"YulFunctionCall","src":"6504:9:25"},"nodeType":"YulIf","src":"6501:35:25"},{"nodeType":"YulAssignment","src":"6546:14:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6555:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"6558:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6551:3:25"},"nodeType":"YulFunctionCall","src":"6551:9:25"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6546:1:25"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6412:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"6415:1:25","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6421:1:25","type":""}],"src":"6381:185:25"},{"body":{"nodeType":"YulBlock","src":"6620:300:25","statements":[{"nodeType":"YulAssignment","src":"6630:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6653:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6635:17:25"},"nodeType":"YulFunctionCall","src":"6635:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6630:1:25"}]},{"nodeType":"YulAssignment","src":"6664:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6687:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6669:17:25"},"nodeType":"YulFunctionCall","src":"6669:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6664:1:25"}]},{"body":{"nodeType":"YulBlock","src":"6862:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6864:16:25"},"nodeType":"YulFunctionCall","src":"6864:18:25"},"nodeType":"YulExpressionStatement","src":"6864:18:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6774:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6767:6:25"},"nodeType":"YulFunctionCall","src":"6767:9:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6760:6:25"},"nodeType":"YulFunctionCall","src":"6760:17:25"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6782:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6789:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"6857:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6785:3:25"},"nodeType":"YulFunctionCall","src":"6785:74:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6779:2:25"},"nodeType":"YulFunctionCall","src":"6779:81:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6756:3:25"},"nodeType":"YulFunctionCall","src":"6756:105:25"},"nodeType":"YulIf","src":"6753:131:25"},{"nodeType":"YulAssignment","src":"6894:20:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6909:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"6912:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6905:3:25"},"nodeType":"YulFunctionCall","src":"6905:9:25"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6894:7:25"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6603:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"6606:1:25","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6612:7:25","type":""}],"src":"6572:348:25"},{"body":{"nodeType":"YulBlock","src":"6954:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6971:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6974:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6964:6:25"},"nodeType":"YulFunctionCall","src":"6964:88:25"},"nodeType":"YulExpressionStatement","src":"6964:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7068:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7071:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7061:6:25"},"nodeType":"YulFunctionCall","src":"7061:15:25"},"nodeType":"YulExpressionStatement","src":"7061:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7092:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7095:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7085:6:25"},"nodeType":"YulFunctionCall","src":"7085:15:25"},"nodeType":"YulExpressionStatement","src":"7085:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6926:180:25"},{"body":{"nodeType":"YulBlock","src":"7163:269:25","statements":[{"nodeType":"YulAssignment","src":"7173:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7187:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"7193:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7183:3:25"},"nodeType":"YulFunctionCall","src":"7183:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7173:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"7204:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7234:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"7240:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7230:3:25"},"nodeType":"YulFunctionCall","src":"7230:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7208:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"7281:51:25","statements":[{"nodeType":"YulAssignment","src":"7295:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7309:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7317:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7305:3:25"},"nodeType":"YulFunctionCall","src":"7305:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7295:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7261:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7254:6:25"},"nodeType":"YulFunctionCall","src":"7254:26:25"},"nodeType":"YulIf","src":"7251:81:25"},{"body":{"nodeType":"YulBlock","src":"7384:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"7398:16:25"},"nodeType":"YulFunctionCall","src":"7398:18:25"},"nodeType":"YulExpressionStatement","src":"7398:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7348:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7371:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7379:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7368:2:25"},"nodeType":"YulFunctionCall","src":"7368:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7345:2:25"},"nodeType":"YulFunctionCall","src":"7345:38:25"},"nodeType":"YulIf","src":"7342:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7147:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7156:6:25","type":""}],"src":"7112:320:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3AF5 CODESIZE SUB DUP1 PUSH3 0x3AF5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x64C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44796E616D696320535647204E46540000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44534E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xBB SWAP3 SWAP2 SWAP1 PUSH3 0x39A JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xD4 SWAP3 SWAP2 SWAP1 PUSH3 0x39A JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0xF0 DUP3 PUSH3 0x16E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x7 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x107 SWAP3 SWAP2 SWAP1 PUSH3 0x39A JUMP JUMPDEST POP PUSH3 0x119 DUP2 PUSH3 0x16E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x8 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x130 SWAP3 SWAP2 SWAP1 PUSH3 0x39A JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x937 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH3 0x1A9 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x189 SWAP2 SWAP1 PUSH3 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH3 0x20C PUSH1 0x20 SHL PUSH3 0xEEC OR PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1F5 SWAP3 SWAP2 SWAP1 PUSH3 0x74C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH3 0x231 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH3 0x395 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x3AB5 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH3 0x263 SWAP2 SWAP1 PUSH3 0x7AD JUMP JUMPDEST PUSH3 0x26F SWAP2 SWAP1 PUSH3 0x839 JUMP JUMPDEST PUSH1 0x4 PUSH3 0x27D SWAP2 SWAP1 PUSH3 0x871 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP3 PUSH3 0x290 SWAP2 SWAP1 PUSH3 0x7AD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2AC JUMPI PUSH3 0x2AB PUSH3 0x4DE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x2DF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH3 0x350 JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP DUP3 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP POP PUSH3 0x2F3 JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH3 0x36D JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x37E JUMPI PUSH3 0x389 JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x2 DUP4 SUB MSTORE PUSH3 0x389 JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x1 DUP4 SUB MSTORE JUMPDEST POP POP POP POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x3A8 SWAP1 PUSH3 0x901 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x3CC JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x418 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x3E7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x418 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x418 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x417 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3FA JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x427 SWAP2 SWAP1 PUSH3 0x42B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x446 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x42C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x48B DUP3 PUSH3 0x45E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x49D DUP2 PUSH3 0x47E JUMP JUMPDEST DUP2 EQ PUSH3 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x4BD DUP2 PUSH3 0x492 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x518 DUP3 PUSH3 0x4CD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x53A JUMPI PUSH3 0x539 PUSH3 0x4DE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x54F PUSH3 0x44A JUMP JUMPDEST SWAP1 POP PUSH3 0x55D DUP3 DUP3 PUSH3 0x50D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x580 JUMPI PUSH3 0x57F PUSH3 0x4DE JUMP JUMPDEST JUMPDEST PUSH3 0x58B DUP3 PUSH3 0x4CD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5B8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x59B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x5C8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5E5 PUSH3 0x5DF DUP5 PUSH3 0x562 JUMP JUMPDEST PUSH3 0x543 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x604 JUMPI PUSH3 0x603 PUSH3 0x4C8 JUMP JUMPDEST JUMPDEST PUSH3 0x611 DUP5 DUP3 DUP6 PUSH3 0x598 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x631 JUMPI PUSH3 0x630 PUSH3 0x4C3 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x643 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x5CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x668 JUMPI PUSH3 0x667 PUSH3 0x454 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x678 DUP7 DUP3 DUP8 ADD PUSH3 0x4AC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x69C JUMPI PUSH3 0x69B PUSH3 0x459 JUMP JUMPDEST JUMPDEST PUSH3 0x6AA DUP7 DUP3 DUP8 ADD PUSH3 0x619 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6CE JUMPI PUSH3 0x6CD PUSH3 0x459 JUMP JUMPDEST JUMPDEST PUSH3 0x6DC DUP7 DUP3 DUP8 ADD PUSH3 0x619 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x709 DUP3 PUSH3 0x6E6 JUMP JUMPDEST PUSH3 0x715 DUP2 DUP6 PUSH3 0x6F1 JUMP JUMPDEST SWAP4 POP PUSH3 0x727 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x598 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x741 DUP3 DUP5 PUSH3 0x6FC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x75A DUP3 DUP6 PUSH3 0x6FC JUMP JUMPDEST SWAP2 POP PUSH3 0x768 DUP3 DUP5 PUSH3 0x6FC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x7BA DUP3 PUSH3 0x774 JUMP JUMPDEST SWAP2 POP PUSH3 0x7C7 DUP4 PUSH3 0x774 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH3 0x7FF JUMPI PUSH3 0x7FE PUSH3 0x77E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x846 DUP3 PUSH3 0x774 JUMP JUMPDEST SWAP2 POP PUSH3 0x853 DUP4 PUSH3 0x774 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x866 JUMPI PUSH3 0x865 PUSH3 0x80A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x87E DUP3 PUSH3 0x774 JUMP JUMPDEST SWAP2 POP PUSH3 0x88B DUP4 PUSH3 0x774 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x8C7 JUMPI PUSH3 0x8C6 PUSH3 0x77E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x91A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x931 JUMPI PUSH3 0x930 PUSH3 0x8D2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x3162 PUSH3 0x953 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xC05 ADD MSTORE PUSH2 0x3162 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67E5366C GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xE425ADED EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3B4 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x67E5366C EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x8FB7E271 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FE JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x1E930812 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x1E930812 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x30D871C6 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x244 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1DD7 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1E1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1F99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x793 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x1F99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0x959 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x2263 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x227E JUMP JUMPDEST PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x2263 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x22D7 JUMP JUMPDEST PUSH2 0xB3F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x23B8 JUMP JUMPDEST PUSH2 0xB55 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0xE40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x244A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x2465 JUMP JUMPDEST PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x1E1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4AF JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4BF JUMPI POP PUSH2 0x4BE DUP3 PUSH2 0x1065 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4D5 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x501 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x54E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x523 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x531 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x563 DUP3 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A9 DUP3 PUSH2 0x840 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x611 SWAP1 PUSH2 0x2578 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x639 PUSH2 0x111A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x668 JUMPI POP PUSH2 0x667 DUP2 PUSH2 0x662 PUSH2 0x111A JUMP JUMPDEST PUSH2 0xE58 JUMP JUMPDEST JUMPDEST PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B1 DUP4 DUP4 PUSH2 0x1122 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x6DC CALLER PUSH1 0x6 SLOAD PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x2659 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH32 0x882D3B5A729A8BB95CF6C0083C99B42ECD9637123D4425BD7B768877FD8AF8B0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x244A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x744 PUSH2 0x73E PUSH2 0x111A JUMP JUMPDEST DUP3 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x783 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77A SWAP1 PUSH2 0x2721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78E DUP4 DUP4 DUP4 PUSH2 0x128E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x7BF DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0x277D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xEEC JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x809 SWAP3 SWAP2 SWAP1 PUSH2 0x2794 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x83B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB55 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x84C DUP4 PUSH2 0x1588 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B5 SWAP1 PUSH2 0x2804 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x8D6 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x902 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x94F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x924 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x94F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x932 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CB SWAP1 PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0xA2A SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA56 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA78 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA86 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xABC SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAE8 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB35 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB0A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB35 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB18 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB51 PUSH2 0xB4A PUSH2 0x111A JUMP JUMPDEST DUP4 DUP4 PUSH2 0x15C5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB66 PUSH2 0xB60 PUSH2 0x111A JUMP JUMPDEST DUP4 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0xBA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9C SWAP1 PUSH2 0x2721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1732 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBC2 DUP3 PUSH2 0x178E JUMP JUMPDEST PUSH2 0xC01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF8 SWAP1 PUSH2 0x2902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD PUSH2 0xCB6 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCE2 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD2F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD04 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD2F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD12 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 SLT PUSH2 0xDDE JUMPI PUSH1 0x8 DUP1 SLOAD PUSH2 0xD5D SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD89 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDD6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDAB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDD6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDB9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST PUSH2 0xDE6 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0xE17 PUSH2 0xDF1 PUSH2 0x4C6 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE03 SWAP3 SWAP2 SWAP1 PUSH2 0x2BD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE28 SWAP3 SWAP2 SWAP1 PUSH2 0x2794 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0xF0F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x30ED PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x2659 JUMP JUMPDEST PUSH2 0xF48 SWAP2 SWAP1 PUSH2 0x2C50 JUMP JUMPDEST PUSH1 0x4 PUSH2 0xF54 SWAP2 SWAP1 PUSH2 0x2C81 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP3 PUSH2 0xF65 SWAP2 SWAP1 PUSH2 0x2659 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF7E JUMPI PUSH2 0xF7D PUSH2 0x20E0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFB0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x101F JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP DUP3 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP POP PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x1039 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1049 JUMPI PUSH2 0x1054 JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x2 DUP4 SUB MSTORE PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x1 DUP4 SUB MSTORE JUMPDEST POP POP POP POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D8 DUP2 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x1117 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110E SWAP1 PUSH2 0x2804 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1195 DUP4 PUSH2 0x840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x11F5 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x180C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1205 DUP4 PUSH2 0x840 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1247 JUMPI POP PUSH2 0x1246 DUP2 DUP6 PUSH2 0xE58 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1285 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x126D DUP5 PUSH2 0x558 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12AE DUP3 PUSH2 0x840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1304 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FB SWAP1 PUSH2 0x2D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1374 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136B SWAP1 PUSH2 0x2DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1381 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1867 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13A1 DUP3 PUSH2 0x840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13EE SWAP1 PUSH2 0x2D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1583 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x198D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1634 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162B SWAP1 PUSH2 0x2E4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1725 SWAP2 SWAP1 PUSH2 0x1E1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x173D DUP5 DUP5 DUP5 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x1749 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1993 JUMP JUMPDEST PUSH2 0x1788 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177F SWAP1 PUSH2 0x2EDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17B0 DUP4 PUSH2 0x1588 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1816 DUP4 DUP4 PUSH2 0x1B2A JUMP JUMPDEST PUSH2 0x1823 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1993 JUMP JUMPDEST PUSH2 0x1862 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1859 SWAP1 PUSH2 0x2EDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1987 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18FB JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x18F3 SWAP2 SWAP1 PUSH2 0x2EFD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1986 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x197E SWAP2 SWAP1 PUSH2 0x2659 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D48 JUMP JUMPDEST ISZERO PUSH2 0x1B1D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x19DD PUSH2 0x111A JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19FF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F86 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1A4A JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A47 SWAP2 SWAP1 PUSH2 0x2FE7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1ACD JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A7A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A7F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1AC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ABC SWAP1 PUSH2 0x2EDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1B22 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B91 SWAP1 PUSH2 0x3060 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA3 DUP2 PUSH2 0x178E JUMP JUMPDEST ISZERO PUSH2 0x1BE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BDA SWAP1 PUSH2 0x30CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BF1 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1867 JUMP JUMPDEST PUSH2 0x1BFA DUP2 PUSH2 0x178E JUMP JUMPDEST ISZERO PUSH2 0x1C3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C31 SWAP1 PUSH2 0x30CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1D44 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x198D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB4 DUP2 PUSH2 0x1D7F JUMP JUMPDEST DUP2 EQ PUSH2 0x1DBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DD1 DUP2 PUSH2 0x1DAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DED JUMPI PUSH2 0x1DEC PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DFB DUP5 DUP3 DUP6 ADD PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E19 DUP2 PUSH2 0x1E04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E34 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E74 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E59 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E83 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA5 DUP3 PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x1EAF DUP2 DUP6 PUSH2 0x1E45 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EBF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E56 JUMP JUMPDEST PUSH2 0x1EC8 DUP2 PUSH2 0x1E89 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EED DUP2 DUP5 PUSH2 0x1E9A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F08 DUP2 PUSH2 0x1EF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F25 DUP2 PUSH2 0x1EFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F41 JUMPI PUSH2 0x1F40 PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F4F DUP5 DUP3 DUP6 ADD PUSH2 0x1F16 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F83 DUP3 PUSH2 0x1F58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F93 DUP2 PUSH2 0x1F78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FBD DUP2 PUSH2 0x1F78 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FDA DUP2 PUSH2 0x1FB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FF7 JUMPI PUSH2 0x1FF6 PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2005 DUP6 DUP3 DUP7 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2016 DUP6 DUP3 DUP7 ADD PUSH2 0x1F16 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2033 DUP2 PUSH2 0x2020 JUMP JUMPDEST DUP2 EQ PUSH2 0x203E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2050 DUP2 PUSH2 0x202A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x206C JUMPI PUSH2 0x206B PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x207A DUP5 DUP3 DUP6 ADD PUSH2 0x2041 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x209C JUMPI PUSH2 0x209B PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20AA DUP7 DUP3 DUP8 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x20BB DUP7 DUP3 DUP8 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20CC DUP7 DUP3 DUP8 ADD PUSH2 0x1F16 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2118 DUP3 PUSH2 0x1E89 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2137 JUMPI PUSH2 0x2136 PUSH2 0x20E0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214A PUSH2 0x1D6B JUMP JUMPDEST SWAP1 POP PUSH2 0x2156 DUP3 DUP3 PUSH2 0x210F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2176 JUMPI PUSH2 0x2175 PUSH2 0x20E0 JUMP JUMPDEST JUMPDEST PUSH2 0x217F DUP3 PUSH2 0x1E89 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21AE PUSH2 0x21A9 DUP5 PUSH2 0x215B JUMP JUMPDEST PUSH2 0x2140 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21CA JUMPI PUSH2 0x21C9 PUSH2 0x20DB JUMP JUMPDEST JUMPDEST PUSH2 0x21D5 DUP5 DUP3 DUP6 PUSH2 0x218C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21F2 JUMPI PUSH2 0x21F1 PUSH2 0x20D6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2202 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x219B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2221 JUMPI PUSH2 0x2220 PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x223F JUMPI PUSH2 0x223E PUSH2 0x1D7A JUMP JUMPDEST JUMPDEST PUSH2 0x224B DUP5 DUP3 DUP6 ADD PUSH2 0x21DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x225D DUP2 PUSH2 0x1EF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2278 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2254 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2294 JUMPI PUSH2 0x2293 PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22A2 DUP5 DUP3 DUP6 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22B4 DUP2 PUSH2 0x1E04 JUMP JUMPDEST DUP2 EQ PUSH2 0x22BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22D1 DUP2 PUSH2 0x22AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22EE JUMPI PUSH2 0x22ED PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22FC DUP6 DUP3 DUP7 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x230D DUP6 DUP3 DUP7 ADD PUSH2 0x22C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2332 JUMPI PUSH2 0x2331 PUSH2 0x20E0 JUMP JUMPDEST JUMPDEST PUSH2 0x233B DUP3 PUSH2 0x1E89 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235B PUSH2 0x2356 DUP5 PUSH2 0x2317 JUMP JUMPDEST PUSH2 0x2140 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2377 JUMPI PUSH2 0x2376 PUSH2 0x20DB JUMP JUMPDEST JUMPDEST PUSH2 0x2382 DUP5 DUP3 DUP6 PUSH2 0x218C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x239F JUMPI PUSH2 0x239E PUSH2 0x20D6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23AF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2348 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x23D2 JUMPI PUSH2 0x23D1 PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23E0 DUP8 DUP3 DUP9 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x23F1 DUP8 DUP3 DUP9 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2402 DUP8 DUP3 DUP9 ADD PUSH2 0x1F16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2423 JUMPI PUSH2 0x2422 PUSH2 0x1D7A JUMP JUMPDEST JUMPDEST PUSH2 0x242F DUP8 DUP3 DUP9 ADD PUSH2 0x238A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x2444 DUP2 PUSH2 0x2020 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x245F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x243B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x247C JUMPI PUSH2 0x247B PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x248A DUP6 DUP3 DUP7 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x249B DUP6 DUP3 DUP7 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24EC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2500 JUMPI PUSH2 0x24FF PUSH2 0x24A5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2562 PUSH1 0x21 DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x256D DUP3 PUSH2 0x2506 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2591 DUP2 PUSH2 0x2555 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25F4 PUSH1 0x3D DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x25FF DUP3 PUSH2 0x2598 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2623 DUP2 PUSH2 0x25E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2664 DUP3 PUSH2 0x1EF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x266F DUP4 PUSH2 0x1EF5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x26A4 JUMPI PUSH2 0x26A3 PUSH2 0x262A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x270B PUSH1 0x2D DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x2716 DUP3 PUSH2 0x26AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x273A DUP2 PUSH2 0x26FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2757 DUP3 PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x2761 DUP2 DUP6 PUSH2 0x2741 JUMP JUMPDEST SWAP4 POP PUSH2 0x2771 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E56 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2789 DUP3 DUP5 PUSH2 0x274C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27A0 DUP3 DUP6 PUSH2 0x274C JUMP JUMPDEST SWAP2 POP PUSH2 0x27AC DUP3 DUP5 PUSH2 0x274C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27EE PUSH1 0x18 DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x27F9 DUP3 PUSH2 0x27B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x281D DUP2 PUSH2 0x27E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2880 PUSH1 0x29 DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x288B DUP3 PUSH2 0x2824 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28AF DUP2 PUSH2 0x2873 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x55524920517565727920666F72206E6F6E6578697374656E7420746F6B656E00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28EC PUSH1 0x1F DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x28F7 DUP3 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x291B DUP2 PUSH2 0x28DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2941 DUP2 PUSH2 0x2922 JUMP JUMPDEST DUP2 EQ PUSH2 0x294C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x295E DUP2 PUSH2 0x2938 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2973 DUP2 PUSH2 0x202A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2988 DUP2 PUSH2 0x1EFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x29AA JUMPI PUSH2 0x29A9 PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29B8 DUP9 DUP3 DUP10 ADD PUSH2 0x294F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x29C9 DUP9 DUP3 DUP10 ADD PUSH2 0x2964 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x29DA DUP9 DUP3 DUP10 ADD PUSH2 0x2979 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x29EB DUP9 DUP3 DUP10 ADD PUSH2 0x2979 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x29FC DUP9 DUP3 DUP10 ADD PUSH2 0x294F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x7B226E616D65223A220000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3F PUSH1 0x9 DUP4 PUSH2 0x2741 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A4A DUP3 PUSH2 0x2A09 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x222C20226465736372697074696F6E223A22416E204E46542074686174206368 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E676573206261736564206F6E2074686520436861696E6C696E6B20466565 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x64222C2000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD7 PUSH1 0x44 DUP4 PUSH2 0x2741 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AE2 DUP3 PUSH2 0x2A55 JUMP JUMPDEST PUSH1 0x44 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A205B7B2274726169745F74797065223A202263 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6F6C6E657373222C202276616C7565223A203130307D5D2C2022696D616765 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x223A220000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6F PUSH1 0x43 DUP4 PUSH2 0x2741 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B7A DUP3 PUSH2 0x2AED JUMP JUMPDEST PUSH1 0x43 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x227D000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BBB PUSH1 0x2 DUP4 PUSH2 0x2741 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BC6 DUP3 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BDC DUP3 PUSH2 0x2A32 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BE8 DUP3 DUP6 PUSH2 0x274C JUMP JUMPDEST SWAP2 POP PUSH2 0x2BF3 DUP3 PUSH2 0x2ACA JUMP JUMPDEST SWAP2 POP PUSH2 0x2BFE DUP3 PUSH2 0x2B62 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C0A DUP3 DUP5 PUSH2 0x274C JUMP JUMPDEST SWAP2 POP PUSH2 0x2C15 DUP3 PUSH2 0x2BAE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C5B DUP3 PUSH2 0x1EF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C66 DUP4 PUSH2 0x1EF5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2C76 JUMPI PUSH2 0x2C75 PUSH2 0x2C21 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8C DUP3 PUSH2 0x1EF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C97 DUP4 PUSH2 0x1EF5 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2CD0 JUMPI PUSH2 0x2CCF PUSH2 0x262A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D37 PUSH1 0x25 DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D42 DUP3 PUSH2 0x2CDB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D66 DUP2 PUSH2 0x2D2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC9 PUSH1 0x24 DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DD4 DUP3 PUSH2 0x2D6D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DF8 DUP2 PUSH2 0x2DBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E35 PUSH1 0x19 DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E40 DUP3 PUSH2 0x2DFF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E64 DUP2 PUSH2 0x2E28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EC7 PUSH1 0x32 DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ED2 DUP3 PUSH2 0x2E6B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EF6 DUP2 PUSH2 0x2EBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F08 DUP3 PUSH2 0x1EF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F13 DUP4 PUSH2 0x1EF5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2F26 JUMPI PUSH2 0x2F25 PUSH2 0x262A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F58 DUP3 PUSH2 0x2F31 JUMP JUMPDEST PUSH2 0x2F62 DUP2 DUP6 PUSH2 0x2F3C JUMP JUMPDEST SWAP4 POP PUSH2 0x2F72 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E56 JUMP JUMPDEST PUSH2 0x2F7B DUP2 PUSH2 0x1E89 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2F9B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1F8A JUMP JUMPDEST PUSH2 0x2FA8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1F8A JUMP JUMPDEST PUSH2 0x2FB5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2254 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2FC7 DUP2 DUP5 PUSH2 0x2F4D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2FE1 DUP2 PUSH2 0x1DAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FFD JUMPI PUSH2 0x2FFC PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x300B DUP5 DUP3 DUP6 ADD PUSH2 0x2FD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x304A PUSH1 0x20 DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x3055 DUP3 PUSH2 0x3014 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3079 DUP2 PUSH2 0x303D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30B6 PUSH1 0x1C DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x30C1 DUP3 PUSH2 0x3080 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30E5 DUP2 PUSH2 0x30A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 DUP16 EXTCODECOPY SHL 0x5C SHR CALL DIV 0xE9 SGT LOG2 PUSH17 0xB74991D6F71018AC5F3B9DFA65229BCAEB CALLDATALOAD 0x5C 0xE5 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2F00000000000000 ","sourceMap":"227:3627:22:-:0;;;751:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;893:1:22::1;876:14;:18;;;;920:21;934:6;920:13;;;:21;;:::i;:::-;904:13;:37;;;;;;;;;;;;:::i;:::-;;968:22;982:7;968:13;;;:22;;:::i;:::-;951:14;:39;;;;;;;;;;;;:::i;:::-;;1036:16;1000:53;;;;;;;;::::0;::::1;751:309:::0;;;227:3627;;1066:261;1129:13;1153:30;1186:51;1230:3;1213:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;1186:13;;;;;:51;;:::i;:::-;1153:84;;1278:22;;;;;;;;;;;;;;;;;1301:16;1261:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1247:72;;;1066:261;;;:::o;777:1861:20:-;835:13;879:1;864:4;:11;:16;860:31;;;882:9;;;;;;;;;;;;;;;;860:31;940:19;962:12;;;;;;;;;;;;;;;;;940:34;;1023:18;1069:1;1064;1050:4;:11;:15;;;;:::i;:::-;1049:21;;;;:::i;:::-;1044:1;:27;;;;:::i;:::-;1023:48;;1151:20;1198:2;1185:10;:15;;;;:::i;:::-;1174:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1151:50;;1294:10;1286:6;1279:26;1386:1;1379:5;1375:13;1442:4;1492;1486:11;1477:7;1473:25;1585:2;1577:6;1573:15;1655:739;1674:6;1665:7;1662:19;1655:739;;;1771:1;1762:7;1758:15;1747:26;;1809:7;1803:14;1932:4;1924:5;1920:2;1916:14;1912:25;1902:8;1898:40;1892:47;1881:9;1873:67;1985:1;1974:9;1970:17;1957:30;;2063:4;2055:5;2051:2;2047:14;2043:25;2033:8;2029:40;2023:47;2012:9;2004:67;2116:1;2105:9;2101:17;2088:30;;2194:4;2186:5;2183:1;2178:14;2174:25;2164:8;2160:40;2154:47;2143:9;2135:67;2247:1;2236:9;2232:17;2219:30;;2325:4;2317:5;2305:25;2295:8;2291:40;2285:47;2274:9;2266:67;2378:1;2367:9;2363:17;2350:30;;1697:697;1655:739;;;2464:1;2457:4;2451:11;2447:19;2484:1;2479:54;;;;2551:1;2546:52;;;;2440:158;;2479:54;2523:6;2518:3;2514:16;2510:1;2499:9;2495:17;2488:43;2479:54;;2546:52;2590:4;2585:3;2581:14;2577:1;2566:9;2562:17;2555:41;2440:158;;1221:1387;;;;2625:6;2618:13;;;;;777:1861;;;;:::o;227:3627:22:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:25:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:308::-;1869:4;1959:18;1951:6;1948:30;1945:56;;;1981:18;;:::i;:::-;1945:56;2019:29;2041:6;2019:29;:::i;:::-;2011:37;;2103:4;2097;2093:15;2085:23;;1807:308;;;:::o;2121:307::-;2189:1;2199:113;2213:6;2210:1;2207:13;2199:113;;;2298:1;2293:3;2289:11;2283:18;2279:1;2274:3;2270:11;2263:39;2235:2;2232:1;2228:10;2223:15;;2199:113;;;2330:6;2327:1;2324:13;2321:101;;;2410:1;2401:6;2396:3;2392:16;2385:27;2321:101;2170:258;2121:307;;;:::o;2434:421::-;2523:5;2548:66;2564:49;2606:6;2564:49;:::i;:::-;2548:66;:::i;:::-;2539:75;;2637:6;2630:5;2623:21;2675:4;2668:5;2664:16;2713:3;2704:6;2699:3;2695:16;2692:25;2689:112;;;2720:79;;:::i;:::-;2689:112;2810:39;2842:6;2837:3;2832;2810:39;:::i;:::-;2529:326;2434:421;;;;;:::o;2875:355::-;2942:5;2991:3;2984:4;2976:6;2972:17;2968:27;2958:122;;2999:79;;:::i;:::-;2958:122;3109:6;3103:13;3134:90;3220:3;3212:6;3205:4;3197:6;3193:17;3134:90;:::i;:::-;3125:99;;2948:282;2875:355;;;;:::o;3236:1009::-;3344:6;3352;3360;3409:2;3397:9;3388:7;3384:23;3380:32;3377:119;;;3415:79;;:::i;:::-;3377:119;3535:1;3560:64;3616:7;3607:6;3596:9;3592:22;3560:64;:::i;:::-;3550:74;;3506:128;3694:2;3683:9;3679:18;3673:25;3725:18;3717:6;3714:30;3711:117;;;3747:79;;:::i;:::-;3711:117;3852:74;3918:7;3909:6;3898:9;3894:22;3852:74;:::i;:::-;3842:84;;3644:292;3996:2;3985:9;3981:18;3975:25;4027:18;4019:6;4016:30;4013:117;;;4049:79;;:::i;:::-;4013:117;4154:74;4220:7;4211:6;4200:9;4196:22;4154:74;:::i;:::-;4144:84;;3946:292;3236:1009;;;;;:::o;4251:99::-;4303:6;4337:5;4331:12;4321:22;;4251:99;;;:::o;4356:148::-;4458:11;4495:3;4480:18;;4356:148;;;;:::o;4510:377::-;4616:3;4644:39;4677:5;4644:39;:::i;:::-;4699:89;4781:6;4776:3;4699:89;:::i;:::-;4692:96;;4797:52;4842:6;4837:3;4830:4;4823:5;4819:16;4797:52;:::i;:::-;4874:6;4869:3;4865:16;4858:23;;4620:267;4510:377;;;;:::o;4893:275::-;5025:3;5047:95;5138:3;5129:6;5047:95;:::i;:::-;5040:102;;5159:3;5152:10;;4893:275;;;;:::o;5174:435::-;5354:3;5376:95;5467:3;5458:6;5376:95;:::i;:::-;5369:102;;5488:95;5579:3;5570:6;5488:95;:::i;:::-;5481:102;;5600:3;5593:10;;5174:435;;;;;:::o;5615:77::-;5652:7;5681:5;5670:16;;5615:77;;;:::o;5698:180::-;5746:77;5743:1;5736:88;5843:4;5840:1;5833:15;5867:4;5864:1;5857:15;5884:305;5924:3;5943:20;5961:1;5943:20;:::i;:::-;5938:25;;5977:20;5995:1;5977:20;:::i;:::-;5972:25;;6131:1;6063:66;6059:74;6056:1;6053:81;6050:107;;;6137:18;;:::i;:::-;6050:107;6181:1;6178;6174:9;6167:16;;5884:305;;;;:::o;6195:180::-;6243:77;6240:1;6233:88;6340:4;6337:1;6330:15;6364:4;6361:1;6354:15;6381:185;6421:1;6438:20;6456:1;6438:20;:::i;:::-;6433:25;;6472:20;6490:1;6472:20;:::i;:::-;6467:25;;6511:1;6501:35;;6516:18;;:::i;:::-;6501:35;6558:1;6555;6551:9;6546:14;;6381:185;;;;:::o;6572:348::-;6612:7;6635:20;6653:1;6635:20;:::i;:::-;6630:25;;6669:20;6687:1;6669:20;:::i;:::-;6664:25;;6857:1;6789:66;6785:74;6782:1;6779:81;6774:1;6767:9;6760:17;6756:105;6753:131;;;6864:18;;:::i;:::-;6753:131;6912:1;6909;6905:9;6894:20;;6572:348;;;;:::o;6926:180::-;6974:77;6971:1;6964:88;7071:4;7068:1;7061:15;7095:4;7092:1;7085:15;7112:320;7156:6;7193:1;7187:4;7183:12;7173:22;;7240:1;7234:4;7230:12;7261:18;7251:81;;7317:4;7309:6;7305:17;7295:27;;7251:81;7379:2;7371:6;7368:14;7348:18;7345:38;7342:84;;;7398:18;;:::i;:::-;7342:84;7163:269;7112:320;;;:::o;227:3627:22:-;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2121":{"entryPoint":6541,"id":2121,"parameterSlots":4,"returnSlots":0},"@_approve_1954":{"entryPoint":4386,"id":1954,"parameterSlots":2,"returnSlots":0},"@_baseURI_4144":{"entryPoint":6095,"id":4144,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2108":{"entryPoint":6247,"id":2108,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_2062":{"entryPoint":6547,"id":2062,"parameterSlots":4,"returnSlots":1},"@_exists_1623":{"entryPoint":6030,"id":1623,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1657":{"entryPoint":4601,"id":1657,"parameterSlots":2,"returnSlots":1},"@_mint_1778":{"entryPoint":6954,"id":1778,"parameterSlots":2,"returnSlots":0},"@_msgSender_2750":{"entryPoint":4378,"id":2750,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1605":{"entryPoint":5512,"id":1605,"parameterSlots":1,"returnSlots":1},"@_requireMinted_2000":{"entryPoint":4303,"id":2000,"parameterSlots":1,"returnSlots":0},"@_safeMint_1672":{"entryPoint":4571,"id":1672,"parameterSlots":2,"returnSlots":0},"@_safeMint_1701":{"entryPoint":6156,"id":1701,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_1592":{"entryPoint":5938,"id":1592,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1986":{"entryPoint":5573,"id":1986,"parameterSlots":3,"returnSlots":0},"@_transfer_1930":{"entryPoint":4750,"id":1930,"parameterSlots":3,"returnSlots":0},"@approve_1434":{"entryPoint":1438,"id":1434,"parameterSlots":2,"returnSlots":0},"@balanceOf_1295":{"entryPoint":2403,"id":1295,"parameterSlots":1,"returnSlots":1},"@encode_3889":{"entryPoint":3820,"id":3889,"parameterSlots":1,"returnSlots":1},"@getApproved_1452":{"entryPoint":1368,"id":1452,"parameterSlots":1,"returnSlots":1},"@getHighImageUri_4230":{"entryPoint":2247,"id":4230,"parameterSlots":0,"returnSlots":1},"@getLowImageUri_4222":{"entryPoint":2587,"id":4222,"parameterSlots":0,"returnSlots":1},"@getTokenCounter_4214":{"entryPoint":2393,"id":4214,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_1487":{"entryPoint":3672,"id":1487,"parameterSlots":2,"returnSlots":1},"@isContract_2426":{"entryPoint":7496,"id":2426,"parameterSlots":1,"returnSlots":1},"@mintNft_4135":{"entryPoint":1718,"id":4135,"parameterSlots":1,"returnSlots":0},"@name_1333":{"entryPoint":1222,"id":1333,"parameterSlots":0,"returnSlots":1},"@ownerOf_1323":{"entryPoint":2112,"id":1323,"parameterSlots":1,"returnSlots":1},"@s_tokenIdToHighValue_4033":{"entryPoint":3648,"id":4033,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1533":{"entryPoint":2080,"id":1533,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1563":{"entryPoint":2901,"id":1563,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1469":{"entryPoint":2879,"id":1469,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1271":{"entryPoint":996,"id":1271,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2958":{"entryPoint":4197,"id":2958,"parameterSlots":1,"returnSlots":1},"@svgToImageURI_4108":{"entryPoint":1939,"id":4108,"parameterSlots":1,"returnSlots":1},"@symbol_1343":{"entryPoint":2733,"id":1343,"parameterSlots":0,"returnSlots":1},"@tokenURI_4206":{"entryPoint":2999,"id":4206,"parameterSlots":1,"returnSlots":1},"@transferFrom_1514":{"entryPoint":1843,"id":1514,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":9032,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":8603,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":8139,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":8898,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":7618,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":12242,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":9098,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256":{"entryPoint":8257,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256_fromMemory":{"entryPoint":10596,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":8669,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7958,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":10617,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80_fromMemory":{"entryPoint":10575,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8830,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9317,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8323,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":9144,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":8919,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8160,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7639,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":12263,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_int256":{"entryPoint":8278,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":8715,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7979,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":10638,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8074,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7696,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":12109,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":9275,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7834,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10060,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":9982,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10802,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":11962,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":11562,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":12457,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":11708,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":11816,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":10355,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10954,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11182,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":12349,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":10209,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":9557,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":9703,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30_to_t_string_memory_ptr_fromStack":{"entryPoint":10463,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11106,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8788,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10109,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10132,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11217,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8089,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":12166,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7711,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":9290,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7891,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10017,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11997,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11597,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12492,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11743,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11851,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10390,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12384,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10244,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9592,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9738,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10498,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8803,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":8512,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7531,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":8983,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":8539,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":12081,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7738,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":12092,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7749,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10049,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9817,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":11344,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":11393,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":12029,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8056,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7684,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7551,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":8224,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8024,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7925,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":10530,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":8588,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":7766,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":9428,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":8463,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":9770,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11297,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":9381,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8416,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8406,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8411,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7546,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7541,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7817,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":9903,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832":{"entryPoint":10761,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":11883,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":11483,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":12416,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":11629,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":11775,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":10276,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574":{"entryPoint":10837,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475":{"entryPoint":11141,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":12308,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":10168,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":9478,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":9624,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30":{"entryPoint":10422,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b":{"entryPoint":10989,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8116,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8875,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":7595,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":8234,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7935,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":10552,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:36315:25","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:25","statements":[{"nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:25"},"nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:25"},"nodeType":"YulFunctionCall","src":"187:12:25"},"nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:25"},"nodeType":"YulFunctionCall","src":"310:12:25"},"nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nodeType":"YulBlock","src":"378:105:25","statements":[{"nodeType":"YulAssignment","src":"388:89:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:25","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:25"},"nodeType":"YulFunctionCall","src":"399:78:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:25"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:25","type":""}],"src":"334:149:25"},{"body":{"nodeType":"YulBlock","src":"531:78:25","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:25"},"nodeType":"YulFunctionCall","src":"589:12:25"},"nodeType":"YulExpressionStatement","src":"589:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:25"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:25"},"nodeType":"YulFunctionCall","src":"561:23:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:25"},"nodeType":"YulFunctionCall","src":"551:34:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:25"},"nodeType":"YulFunctionCall","src":"544:42:25"},"nodeType":"YulIf","src":"541:62:25"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:25","type":""}],"src":"489:120:25"},{"body":{"nodeType":"YulBlock","src":"666:86:25","statements":[{"nodeType":"YulAssignment","src":"676:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:25"},"nodeType":"YulFunctionCall","src":"685:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:25"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:25"},"nodeType":"YulFunctionCall","src":"714:32:25"},"nodeType":"YulExpressionStatement","src":"714:32:25"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:25","type":""}],"src":"615:137:25"},{"body":{"nodeType":"YulBlock","src":"823:262:25","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:25"},"nodeType":"YulFunctionCall","src":"871:79:25"},"nodeType":"YulExpressionStatement","src":"871:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:25"},"nodeType":"YulFunctionCall","src":"840:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:25"},"nodeType":"YulFunctionCall","src":"836:32:25"},"nodeType":"YulIf","src":"833:119:25"},{"nodeType":"YulBlock","src":"962:116:25","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:25"},"nodeType":"YulFunctionCall","src":"1036:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:25"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:25"},"nodeType":"YulFunctionCall","src":"1016:52:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:25","type":""}],"src":"758:327:25"},{"body":{"nodeType":"YulBlock","src":"1133:48:25","statements":[{"nodeType":"YulAssignment","src":"1143:32:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:25"},"nodeType":"YulFunctionCall","src":"1161:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:25"},"nodeType":"YulFunctionCall","src":"1154:21:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:25"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:25","type":""}],"src":"1091:90:25"},{"body":{"nodeType":"YulBlock","src":"1246:50:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:25"},"nodeType":"YulFunctionCall","src":"1268:21:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:25"},"nodeType":"YulFunctionCall","src":"1256:34:25"},"nodeType":"YulExpressionStatement","src":"1256:34:25"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:25","type":""}],"src":"1187:109:25"},{"body":{"nodeType":"YulBlock","src":"1394:118:25","statements":[{"nodeType":"YulAssignment","src":"1404:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:25"},"nodeType":"YulFunctionCall","src":"1412:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:25"},"nodeType":"YulFunctionCall","src":"1487:17:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:25"},"nodeType":"YulFunctionCall","src":"1440:65:25"},"nodeType":"YulExpressionStatement","src":"1440:65:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:25","type":""}],"src":"1302:210:25"},{"body":{"nodeType":"YulBlock","src":"1577:40:25","statements":[{"nodeType":"YulAssignment","src":"1588:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:25"},"nodeType":"YulFunctionCall","src":"1598:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:25","type":""}],"src":"1518:99:25"},{"body":{"nodeType":"YulBlock","src":"1719:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:25"},"nodeType":"YulFunctionCall","src":"1729:19:25"},"nodeType":"YulExpressionStatement","src":"1729:19:25"},{"nodeType":"YulAssignment","src":"1757:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:25"},"nodeType":"YulFunctionCall","src":"1772:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:25","type":""}],"src":"1623:169:25"},{"body":{"nodeType":"YulBlock","src":"1847:258:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:25"},"nodeType":"YulFunctionCall","src":"1947:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:25"},"nodeType":"YulFunctionCall","src":"1966:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:25"},"nodeType":"YulFunctionCall","src":"1960:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:25"},"nodeType":"YulFunctionCall","src":"1940:39:25"},"nodeType":"YulExpressionStatement","src":"1940:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:25"},"nodeType":"YulFunctionCall","src":"1884:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:25","statements":[{"nodeType":"YulAssignment","src":"1900:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:25"},"nodeType":"YulFunctionCall","src":"1905:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:25","statements":[]},"src":"1876:113:25"},{"body":{"nodeType":"YulBlock","src":"2023:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:25"},"nodeType":"YulFunctionCall","src":"2069:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:25"},"nodeType":"YulFunctionCall","src":"2062:27:25"},"nodeType":"YulExpressionStatement","src":"2062:27:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:25"},"nodeType":"YulFunctionCall","src":"2001:13:25"},"nodeType":"YulIf","src":"1998:101:25"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:25","type":""}],"src":"1798:307:25"},{"body":{"nodeType":"YulBlock","src":"2159:54:25","statements":[{"nodeType":"YulAssignment","src":"2169:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:25"},"nodeType":"YulFunctionCall","src":"2183:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:25"},"nodeType":"YulFunctionCall","src":"2199:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:25"},"nodeType":"YulFunctionCall","src":"2179:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:25","type":""}],"src":"2111:102:25"},{"body":{"nodeType":"YulBlock","src":"2311:272:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:25"},"nodeType":"YulFunctionCall","src":"2335:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:25","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:25"},"nodeType":"YulFunctionCall","src":"2390:71:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:25"},"nodeType":"YulFunctionCall","src":"2492:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:25"},"nodeType":"YulFunctionCall","src":"2470:52:25"},"nodeType":"YulExpressionStatement","src":"2470:52:25"},{"nodeType":"YulAssignment","src":"2531:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:25"},"nodeType":"YulFunctionCall","src":"2547:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:25"},"nodeType":"YulFunctionCall","src":"2538:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:25","type":""}],"src":"2219:364:25"},{"body":{"nodeType":"YulBlock","src":"2707:195:25","statements":[{"nodeType":"YulAssignment","src":"2717:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:25"},"nodeType":"YulFunctionCall","src":"2725:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:25"},"nodeType":"YulFunctionCall","src":"2760:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:25"},"nodeType":"YulFunctionCall","src":"2779:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:25"},"nodeType":"YulFunctionCall","src":"2753:47:25"},"nodeType":"YulExpressionStatement","src":"2753:47:25"},{"nodeType":"YulAssignment","src":"2809:86:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:25"},"nodeType":"YulFunctionCall","src":"2817:78:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:25","type":""}],"src":"2589:313:25"},{"body":{"nodeType":"YulBlock","src":"2953:32:25","statements":[{"nodeType":"YulAssignment","src":"2963:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:25","type":""}],"src":"2908:77:25"},{"body":{"nodeType":"YulBlock","src":"3034:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:25"},"nodeType":"YulFunctionCall","src":"3093:12:25"},"nodeType":"YulExpressionStatement","src":"3093:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:25"},"nodeType":"YulFunctionCall","src":"3064:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:25"},"nodeType":"YulFunctionCall","src":"3054:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:25"},"nodeType":"YulFunctionCall","src":"3047:43:25"},"nodeType":"YulIf","src":"3044:63:25"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:25","type":""}],"src":"2991:122:25"},{"body":{"nodeType":"YulBlock","src":"3171:87:25","statements":[{"nodeType":"YulAssignment","src":"3181:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:25"},"nodeType":"YulFunctionCall","src":"3190:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:25"},"nodeType":"YulFunctionCall","src":"3219:33:25"},"nodeType":"YulExpressionStatement","src":"3219:33:25"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:25","type":""}],"src":"3119:139:25"},{"body":{"nodeType":"YulBlock","src":"3330:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:25"},"nodeType":"YulFunctionCall","src":"3378:79:25"},"nodeType":"YulExpressionStatement","src":"3378:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:25"},"nodeType":"YulFunctionCall","src":"3347:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:25"},"nodeType":"YulFunctionCall","src":"3343:32:25"},"nodeType":"YulIf","src":"3340:119:25"},{"nodeType":"YulBlock","src":"3469:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:25","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:25"},"nodeType":"YulFunctionCall","src":"3544:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:25"},"nodeType":"YulFunctionCall","src":"3523:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:25","type":""}],"src":"3264:329:25"},{"body":{"nodeType":"YulBlock","src":"3644:81:25","statements":[{"nodeType":"YulAssignment","src":"3654:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:25"},"nodeType":"YulFunctionCall","src":"3665:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:25","type":""}],"src":"3599:126:25"},{"body":{"nodeType":"YulBlock","src":"3776:51:25","statements":[{"nodeType":"YulAssignment","src":"3786:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:25"},"nodeType":"YulFunctionCall","src":"3797:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:25","type":""}],"src":"3731:96:25"},{"body":{"nodeType":"YulBlock","src":"3898:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:25"},"nodeType":"YulFunctionCall","src":"3920:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:25"},"nodeType":"YulFunctionCall","src":"3908:37:25"},"nodeType":"YulExpressionStatement","src":"3908:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:25","type":""}],"src":"3833:118:25"},{"body":{"nodeType":"YulBlock","src":"4055:124:25","statements":[{"nodeType":"YulAssignment","src":"4065:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:25"},"nodeType":"YulFunctionCall","src":"4073:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:25"},"nodeType":"YulFunctionCall","src":"4154:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:25"},"nodeType":"YulFunctionCall","src":"4101:71:25"},"nodeType":"YulExpressionStatement","src":"4101:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:25","type":""}],"src":"3957:222:25"},{"body":{"nodeType":"YulBlock","src":"4228:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:25"},"nodeType":"YulFunctionCall","src":"4287:12:25"},"nodeType":"YulExpressionStatement","src":"4287:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:25"},"nodeType":"YulFunctionCall","src":"4258:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:25"},"nodeType":"YulFunctionCall","src":"4248:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:25"},"nodeType":"YulFunctionCall","src":"4241:43:25"},"nodeType":"YulIf","src":"4238:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:25","type":""}],"src":"4185:122:25"},{"body":{"nodeType":"YulBlock","src":"4365:87:25","statements":[{"nodeType":"YulAssignment","src":"4375:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:25"},"nodeType":"YulFunctionCall","src":"4384:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:25"},"nodeType":"YulFunctionCall","src":"4413:33:25"},"nodeType":"YulExpressionStatement","src":"4413:33:25"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:25","type":""}],"src":"4313:139:25"},{"body":{"nodeType":"YulBlock","src":"4541:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:25"},"nodeType":"YulFunctionCall","src":"4589:79:25"},"nodeType":"YulExpressionStatement","src":"4589:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:25"},"nodeType":"YulFunctionCall","src":"4558:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:25"},"nodeType":"YulFunctionCall","src":"4554:32:25"},"nodeType":"YulIf","src":"4551:119:25"},{"nodeType":"YulBlock","src":"4680:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:25"},"nodeType":"YulFunctionCall","src":"4755:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:25"},"nodeType":"YulFunctionCall","src":"4734:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:25"}]}]},{"nodeType":"YulBlock","src":"4807:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:25"},"nodeType":"YulFunctionCall","src":"4883:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:25"},"nodeType":"YulFunctionCall","src":"4862:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:25","type":""}],"src":"4458:474:25"},{"body":{"nodeType":"YulBlock","src":"4982:32:25","statements":[{"nodeType":"YulAssignment","src":"4992:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"5003:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4992:7:25"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4964:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4974:7:25","type":""}],"src":"4938:76:25"},{"body":{"nodeType":"YulBlock","src":"5062:78:25","statements":[{"body":{"nodeType":"YulBlock","src":"5118:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5127:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5130:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5120:6:25"},"nodeType":"YulFunctionCall","src":"5120:12:25"},"nodeType":"YulExpressionStatement","src":"5120:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5085:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5109:5:25"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"5092:16:25"},"nodeType":"YulFunctionCall","src":"5092:23:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5082:2:25"},"nodeType":"YulFunctionCall","src":"5082:34:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5075:6:25"},"nodeType":"YulFunctionCall","src":"5075:42:25"},"nodeType":"YulIf","src":"5072:62:25"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5055:5:25","type":""}],"src":"5020:120:25"},{"body":{"nodeType":"YulBlock","src":"5197:86:25","statements":[{"nodeType":"YulAssignment","src":"5207:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5229:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5216:12:25"},"nodeType":"YulFunctionCall","src":"5216:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5207:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5271:5:25"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"5245:25:25"},"nodeType":"YulFunctionCall","src":"5245:32:25"},"nodeType":"YulExpressionStatement","src":"5245:32:25"}]},"name":"abi_decode_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5175:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"5183:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5191:5:25","type":""}],"src":"5146:137:25"},{"body":{"nodeType":"YulBlock","src":"5354:262:25","statements":[{"body":{"nodeType":"YulBlock","src":"5400:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5402:77:25"},"nodeType":"YulFunctionCall","src":"5402:79:25"},"nodeType":"YulExpressionStatement","src":"5402:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5375:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5371:3:25"},"nodeType":"YulFunctionCall","src":"5371:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"5396:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5367:3:25"},"nodeType":"YulFunctionCall","src":"5367:32:25"},"nodeType":"YulIf","src":"5364:119:25"},{"nodeType":"YulBlock","src":"5493:116:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5508:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5522:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5512:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5537:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5571:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5582:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5567:3:25"},"nodeType":"YulFunctionCall","src":"5567:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5591:7:25"}],"functionName":{"name":"abi_decode_t_int256","nodeType":"YulIdentifier","src":"5547:19:25"},"nodeType":"YulFunctionCall","src":"5547:52:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5537:6:25"}]}]}]},"name":"abi_decode_tuple_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5324:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5335:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5347:6:25","type":""}],"src":"5289:327:25"},{"body":{"nodeType":"YulBlock","src":"5722:519:25","statements":[{"body":{"nodeType":"YulBlock","src":"5768:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5770:77:25"},"nodeType":"YulFunctionCall","src":"5770:79:25"},"nodeType":"YulExpressionStatement","src":"5770:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5743:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5752:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5739:3:25"},"nodeType":"YulFunctionCall","src":"5739:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"5764:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5735:3:25"},"nodeType":"YulFunctionCall","src":"5735:32:25"},"nodeType":"YulIf","src":"5732:119:25"},{"nodeType":"YulBlock","src":"5861:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5876:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5890:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5880:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5905:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5940:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5951:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5936:3:25"},"nodeType":"YulFunctionCall","src":"5936:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5960:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5915:20:25"},"nodeType":"YulFunctionCall","src":"5915:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5905:6:25"}]}]},{"nodeType":"YulBlock","src":"5988:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6003:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6017:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6007:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6033:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6068:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6079:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6064:3:25"},"nodeType":"YulFunctionCall","src":"6064:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6088:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6043:20:25"},"nodeType":"YulFunctionCall","src":"6043:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6033:6:25"}]}]},{"nodeType":"YulBlock","src":"6116:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6131:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6145:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6135:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6161:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6196:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6207:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6192:3:25"},"nodeType":"YulFunctionCall","src":"6192:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6216:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6171:20:25"},"nodeType":"YulFunctionCall","src":"6171:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6161:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5676:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5687:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5699:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5707:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5715:6:25","type":""}],"src":"5622:619:25"},{"body":{"nodeType":"YulBlock","src":"6336:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6353:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6356:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6346:6:25"},"nodeType":"YulFunctionCall","src":"6346:12:25"},"nodeType":"YulExpressionStatement","src":"6346:12:25"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6247:117:25"},{"body":{"nodeType":"YulBlock","src":"6459:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6476:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6479:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6469:6:25"},"nodeType":"YulFunctionCall","src":"6469:12:25"},"nodeType":"YulExpressionStatement","src":"6469:12:25"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"6370:117:25"},{"body":{"nodeType":"YulBlock","src":"6521:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6538:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6541:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6531:6:25"},"nodeType":"YulFunctionCall","src":"6531:88:25"},"nodeType":"YulExpressionStatement","src":"6531:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6635:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6638:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6628:6:25"},"nodeType":"YulFunctionCall","src":"6628:15:25"},"nodeType":"YulExpressionStatement","src":"6628:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6659:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6662:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6652:6:25"},"nodeType":"YulFunctionCall","src":"6652:15:25"},"nodeType":"YulExpressionStatement","src":"6652:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6493:180:25"},{"body":{"nodeType":"YulBlock","src":"6722:238:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6732:58:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6754:6:25"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6784:4:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6762:21:25"},"nodeType":"YulFunctionCall","src":"6762:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6750:3:25"},"nodeType":"YulFunctionCall","src":"6750:40:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6736:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"6901:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6903:16:25"},"nodeType":"YulFunctionCall","src":"6903:18:25"},"nodeType":"YulExpressionStatement","src":"6903:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6844:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"6856:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6841:2:25"},"nodeType":"YulFunctionCall","src":"6841:34:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6880:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6892:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6877:2:25"},"nodeType":"YulFunctionCall","src":"6877:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6838:2:25"},"nodeType":"YulFunctionCall","src":"6838:62:25"},"nodeType":"YulIf","src":"6835:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6939:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6943:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6932:6:25"},"nodeType":"YulFunctionCall","src":"6932:22:25"},"nodeType":"YulExpressionStatement","src":"6932:22:25"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6708:6:25","type":""},{"name":"size","nodeType":"YulTypedName","src":"6716:4:25","type":""}],"src":"6679:281:25"},{"body":{"nodeType":"YulBlock","src":"7007:88:25","statements":[{"nodeType":"YulAssignment","src":"7017:30:25","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7027:18:25"},"nodeType":"YulFunctionCall","src":"7027:20:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7017:6:25"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7076:6:25"},{"name":"size","nodeType":"YulIdentifier","src":"7084:4:25"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7056:19:25"},"nodeType":"YulFunctionCall","src":"7056:33:25"},"nodeType":"YulExpressionStatement","src":"7056:33:25"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6991:4:25","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7000:6:25","type":""}],"src":"6966:129:25"},{"body":{"nodeType":"YulBlock","src":"7168:241:25","statements":[{"body":{"nodeType":"YulBlock","src":"7273:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7275:16:25"},"nodeType":"YulFunctionCall","src":"7275:18:25"},"nodeType":"YulExpressionStatement","src":"7275:18:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7245:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7253:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7242:2:25"},"nodeType":"YulFunctionCall","src":"7242:30:25"},"nodeType":"YulIf","src":"7239:56:25"},{"nodeType":"YulAssignment","src":"7305:37:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7335:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7313:21:25"},"nodeType":"YulFunctionCall","src":"7313:29:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7305:4:25"}]},{"nodeType":"YulAssignment","src":"7379:23:25","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7391:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"7397:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7387:3:25"},"nodeType":"YulFunctionCall","src":"7387:15:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7379:4:25"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7152:6:25","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7163:4:25","type":""}],"src":"7101:308:25"},{"body":{"nodeType":"YulBlock","src":"7466:103:25","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7489:3:25"},{"name":"src","nodeType":"YulIdentifier","src":"7494:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"7499:6:25"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7476:12:25"},"nodeType":"YulFunctionCall","src":"7476:30:25"},"nodeType":"YulExpressionStatement","src":"7476:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7547:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"7552:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7543:3:25"},"nodeType":"YulFunctionCall","src":"7543:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"7561:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7536:6:25"},"nodeType":"YulFunctionCall","src":"7536:27:25"},"nodeType":"YulExpressionStatement","src":"7536:27:25"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7448:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7453:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"7458:6:25","type":""}],"src":"7415:154:25"},{"body":{"nodeType":"YulBlock","src":"7659:328:25","statements":[{"nodeType":"YulAssignment","src":"7669:75:25","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7736:6:25"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7694:41:25"},"nodeType":"YulFunctionCall","src":"7694:49:25"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7678:15:25"},"nodeType":"YulFunctionCall","src":"7678:66:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7669:5:25"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7760:5:25"},{"name":"length","nodeType":"YulIdentifier","src":"7767:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7753:6:25"},"nodeType":"YulFunctionCall","src":"7753:21:25"},"nodeType":"YulExpressionStatement","src":"7753:21:25"},{"nodeType":"YulVariableDeclaration","src":"7783:27:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7798:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"7805:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7794:3:25"},"nodeType":"YulFunctionCall","src":"7794:16:25"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7787:3:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"7848:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"7850:77:25"},"nodeType":"YulFunctionCall","src":"7850:79:25"},"nodeType":"YulExpressionStatement","src":"7850:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7829:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"7834:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7825:3:25"},"nodeType":"YulFunctionCall","src":"7825:16:25"},{"name":"end","nodeType":"YulIdentifier","src":"7843:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7822:2:25"},"nodeType":"YulFunctionCall","src":"7822:25:25"},"nodeType":"YulIf","src":"7819:112:25"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7964:3:25"},{"name":"dst","nodeType":"YulIdentifier","src":"7969:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"7974:6:25"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"7940:23:25"},"nodeType":"YulFunctionCall","src":"7940:41:25"},"nodeType":"YulExpressionStatement","src":"7940:41:25"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7632:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"7637:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"7645:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7653:5:25","type":""}],"src":"7575:412:25"},{"body":{"nodeType":"YulBlock","src":"8069:278:25","statements":[{"body":{"nodeType":"YulBlock","src":"8118:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8120:77:25"},"nodeType":"YulFunctionCall","src":"8120:79:25"},"nodeType":"YulExpressionStatement","src":"8120:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8097:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"8105:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8093:3:25"},"nodeType":"YulFunctionCall","src":"8093:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"8112:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8089:3:25"},"nodeType":"YulFunctionCall","src":"8089:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8082:6:25"},"nodeType":"YulFunctionCall","src":"8082:35:25"},"nodeType":"YulIf","src":"8079:122:25"},{"nodeType":"YulVariableDeclaration","src":"8210:34:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8237:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8224:12:25"},"nodeType":"YulFunctionCall","src":"8224:20:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8214:6:25","type":""}]},{"nodeType":"YulAssignment","src":"8253:88:25","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8314:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"8322:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8310:3:25"},"nodeType":"YulFunctionCall","src":"8310:17:25"},{"name":"length","nodeType":"YulIdentifier","src":"8329:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"8337:3:25"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8262:47:25"},"nodeType":"YulFunctionCall","src":"8262:79:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8253:5:25"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8047:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"8055:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8063:5:25","type":""}],"src":"8007:340:25"},{"body":{"nodeType":"YulBlock","src":"8429:433:25","statements":[{"body":{"nodeType":"YulBlock","src":"8475:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8477:77:25"},"nodeType":"YulFunctionCall","src":"8477:79:25"},"nodeType":"YulExpressionStatement","src":"8477:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8450:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"8459:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8446:3:25"},"nodeType":"YulFunctionCall","src":"8446:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"8471:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8442:3:25"},"nodeType":"YulFunctionCall","src":"8442:32:25"},"nodeType":"YulIf","src":"8439:119:25"},{"nodeType":"YulBlock","src":"8568:287:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8583:45:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8614:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8625:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8610:3:25"},"nodeType":"YulFunctionCall","src":"8610:17:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8597:12:25"},"nodeType":"YulFunctionCall","src":"8597:31:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8587:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"8675:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8677:77:25"},"nodeType":"YulFunctionCall","src":"8677:79:25"},"nodeType":"YulExpressionStatement","src":"8677:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8647:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"8655:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8644:2:25"},"nodeType":"YulFunctionCall","src":"8644:30:25"},"nodeType":"YulIf","src":"8641:117:25"},{"nodeType":"YulAssignment","src":"8772:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8817:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8828:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8813:3:25"},"nodeType":"YulFunctionCall","src":"8813:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8837:7:25"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8782:30:25"},"nodeType":"YulFunctionCall","src":"8782:63:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8772:6:25"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8399:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8410:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8422:6:25","type":""}],"src":"8353:509:25"},{"body":{"nodeType":"YulBlock","src":"8933:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8950:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8973:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8955:17:25"},"nodeType":"YulFunctionCall","src":"8955:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8943:6:25"},"nodeType":"YulFunctionCall","src":"8943:37:25"},"nodeType":"YulExpressionStatement","src":"8943:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8921:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8928:3:25","type":""}],"src":"8868:118:25"},{"body":{"nodeType":"YulBlock","src":"9090:124:25","statements":[{"nodeType":"YulAssignment","src":"9100:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9112:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9123:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9108:3:25"},"nodeType":"YulFunctionCall","src":"9108:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9100:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9180:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9193:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9204:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9189:3:25"},"nodeType":"YulFunctionCall","src":"9189:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9136:43:25"},"nodeType":"YulFunctionCall","src":"9136:71:25"},"nodeType":"YulExpressionStatement","src":"9136:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9062:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9074:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9085:4:25","type":""}],"src":"8992:222:25"},{"body":{"nodeType":"YulBlock","src":"9286:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"9332:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9334:77:25"},"nodeType":"YulFunctionCall","src":"9334:79:25"},"nodeType":"YulExpressionStatement","src":"9334:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9307:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"9316:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9303:3:25"},"nodeType":"YulFunctionCall","src":"9303:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"9328:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9299:3:25"},"nodeType":"YulFunctionCall","src":"9299:32:25"},"nodeType":"YulIf","src":"9296:119:25"},{"nodeType":"YulBlock","src":"9425:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9440:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9454:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9444:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9469:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9504:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9515:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9500:3:25"},"nodeType":"YulFunctionCall","src":"9500:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9524:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9479:20:25"},"nodeType":"YulFunctionCall","src":"9479:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9469:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9256:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9267:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9279:6:25","type":""}],"src":"9220:329:25"},{"body":{"nodeType":"YulBlock","src":"9595:76:25","statements":[{"body":{"nodeType":"YulBlock","src":"9649:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9658:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9661:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9651:6:25"},"nodeType":"YulFunctionCall","src":"9651:12:25"},"nodeType":"YulExpressionStatement","src":"9651:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9618:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9640:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9625:14:25"},"nodeType":"YulFunctionCall","src":"9625:21:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9615:2:25"},"nodeType":"YulFunctionCall","src":"9615:32:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9608:6:25"},"nodeType":"YulFunctionCall","src":"9608:40:25"},"nodeType":"YulIf","src":"9605:60:25"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9588:5:25","type":""}],"src":"9555:116:25"},{"body":{"nodeType":"YulBlock","src":"9726:84:25","statements":[{"nodeType":"YulAssignment","src":"9736:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9758:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9745:12:25"},"nodeType":"YulFunctionCall","src":"9745:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9736:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9798:5:25"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"9774:23:25"},"nodeType":"YulFunctionCall","src":"9774:30:25"},"nodeType":"YulExpressionStatement","src":"9774:30:25"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9704:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"9712:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9720:5:25","type":""}],"src":"9677:133:25"},{"body":{"nodeType":"YulBlock","src":"9896:388:25","statements":[{"body":{"nodeType":"YulBlock","src":"9942:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9944:77:25"},"nodeType":"YulFunctionCall","src":"9944:79:25"},"nodeType":"YulExpressionStatement","src":"9944:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9917:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"9926:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9913:3:25"},"nodeType":"YulFunctionCall","src":"9913:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"9938:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9909:3:25"},"nodeType":"YulFunctionCall","src":"9909:32:25"},"nodeType":"YulIf","src":"9906:119:25"},{"nodeType":"YulBlock","src":"10035:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10050:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10064:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10054:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10079:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10114:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10125:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10110:3:25"},"nodeType":"YulFunctionCall","src":"10110:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10134:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10089:20:25"},"nodeType":"YulFunctionCall","src":"10089:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10079:6:25"}]}]},{"nodeType":"YulBlock","src":"10162:115:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10177:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10191:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10181:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10207:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10239:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10250:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10235:3:25"},"nodeType":"YulFunctionCall","src":"10235:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10259:7:25"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"10217:17:25"},"nodeType":"YulFunctionCall","src":"10217:50:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10207:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9858:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9869:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9881:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9889:6:25","type":""}],"src":"9816:468:25"},{"body":{"nodeType":"YulBlock","src":"10356:241:25","statements":[{"body":{"nodeType":"YulBlock","src":"10461:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10463:16:25"},"nodeType":"YulFunctionCall","src":"10463:18:25"},"nodeType":"YulExpressionStatement","src":"10463:18:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10433:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10441:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10430:2:25"},"nodeType":"YulFunctionCall","src":"10430:30:25"},"nodeType":"YulIf","src":"10427:56:25"},{"nodeType":"YulAssignment","src":"10493:37:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10523:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10501:21:25"},"nodeType":"YulFunctionCall","src":"10501:29:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10493:4:25"}]},{"nodeType":"YulAssignment","src":"10567:23:25","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10579:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"10585:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10575:3:25"},"nodeType":"YulFunctionCall","src":"10575:15:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10567:4:25"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10340:6:25","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10351:4:25","type":""}],"src":"10290:307:25"},{"body":{"nodeType":"YulBlock","src":"10686:327:25","statements":[{"nodeType":"YulAssignment","src":"10696:74:25","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10762:6:25"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10721:40:25"},"nodeType":"YulFunctionCall","src":"10721:48:25"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10705:15:25"},"nodeType":"YulFunctionCall","src":"10705:65:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10696:5:25"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10786:5:25"},{"name":"length","nodeType":"YulIdentifier","src":"10793:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10779:6:25"},"nodeType":"YulFunctionCall","src":"10779:21:25"},"nodeType":"YulExpressionStatement","src":"10779:21:25"},{"nodeType":"YulVariableDeclaration","src":"10809:27:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10824:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"10831:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10820:3:25"},"nodeType":"YulFunctionCall","src":"10820:16:25"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"10813:3:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"10874:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"10876:77:25"},"nodeType":"YulFunctionCall","src":"10876:79:25"},"nodeType":"YulExpressionStatement","src":"10876:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10855:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"10860:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10851:3:25"},"nodeType":"YulFunctionCall","src":"10851:16:25"},{"name":"end","nodeType":"YulIdentifier","src":"10869:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10848:2:25"},"nodeType":"YulFunctionCall","src":"10848:25:25"},"nodeType":"YulIf","src":"10845:112:25"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10990:3:25"},{"name":"dst","nodeType":"YulIdentifier","src":"10995:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"11000:6:25"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"10966:23:25"},"nodeType":"YulFunctionCall","src":"10966:41:25"},"nodeType":"YulExpressionStatement","src":"10966:41:25"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10659:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"10664:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"10672:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10680:5:25","type":""}],"src":"10603:410:25"},{"body":{"nodeType":"YulBlock","src":"11093:277:25","statements":[{"body":{"nodeType":"YulBlock","src":"11142:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"11144:77:25"},"nodeType":"YulFunctionCall","src":"11144:79:25"},"nodeType":"YulExpressionStatement","src":"11144:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11121:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"11129:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11117:3:25"},"nodeType":"YulFunctionCall","src":"11117:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"11136:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11113:3:25"},"nodeType":"YulFunctionCall","src":"11113:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11106:6:25"},"nodeType":"YulFunctionCall","src":"11106:35:25"},"nodeType":"YulIf","src":"11103:122:25"},{"nodeType":"YulVariableDeclaration","src":"11234:34:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11261:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11248:12:25"},"nodeType":"YulFunctionCall","src":"11248:20:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11238:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11277:87:25","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11337:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"11345:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11333:3:25"},"nodeType":"YulFunctionCall","src":"11333:17:25"},{"name":"length","nodeType":"YulIdentifier","src":"11352:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"11360:3:25"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11286:46:25"},"nodeType":"YulFunctionCall","src":"11286:78:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11277:5:25"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11071:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"11079:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11087:5:25","type":""}],"src":"11032:338:25"},{"body":{"nodeType":"YulBlock","src":"11502:817:25","statements":[{"body":{"nodeType":"YulBlock","src":"11549:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11551:77:25"},"nodeType":"YulFunctionCall","src":"11551:79:25"},"nodeType":"YulExpressionStatement","src":"11551:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11523:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"11532:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11519:3:25"},"nodeType":"YulFunctionCall","src":"11519:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"11544:3:25","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11515:3:25"},"nodeType":"YulFunctionCall","src":"11515:33:25"},"nodeType":"YulIf","src":"11512:120:25"},{"nodeType":"YulBlock","src":"11642:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11657:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11671:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11661:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11686:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11721:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11732:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11717:3:25"},"nodeType":"YulFunctionCall","src":"11717:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11741:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11696:20:25"},"nodeType":"YulFunctionCall","src":"11696:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11686:6:25"}]}]},{"nodeType":"YulBlock","src":"11769:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11784:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11798:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11788:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11814:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11849:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11860:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11845:3:25"},"nodeType":"YulFunctionCall","src":"11845:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11869:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11824:20:25"},"nodeType":"YulFunctionCall","src":"11824:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11814:6:25"}]}]},{"nodeType":"YulBlock","src":"11897:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11912:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11926:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11916:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11942:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11977:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11988:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11973:3:25"},"nodeType":"YulFunctionCall","src":"11973:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11997:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11952:20:25"},"nodeType":"YulFunctionCall","src":"11952:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11942:6:25"}]}]},{"nodeType":"YulBlock","src":"12025:287:25","statements":[{"nodeType":"YulVariableDeclaration","src":"12040:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12071:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12082:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12067:3:25"},"nodeType":"YulFunctionCall","src":"12067:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12054:12:25"},"nodeType":"YulFunctionCall","src":"12054:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12044:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"12133:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12135:77:25"},"nodeType":"YulFunctionCall","src":"12135:79:25"},"nodeType":"YulExpressionStatement","src":"12135:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12105:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12113:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12102:2:25"},"nodeType":"YulFunctionCall","src":"12102:30:25"},"nodeType":"YulIf","src":"12099:117:25"},{"nodeType":"YulAssignment","src":"12230:72:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12274:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"12285:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12270:3:25"},"nodeType":"YulFunctionCall","src":"12270:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12294:7:25"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12240:29:25"},"nodeType":"YulFunctionCall","src":"12240:62:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12230:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11448:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11459:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11471:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11479:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11487:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11495:6:25","type":""}],"src":"11376:943:25"},{"body":{"nodeType":"YulBlock","src":"12388:52:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12405:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12427:5:25"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"12410:16:25"},"nodeType":"YulFunctionCall","src":"12410:23:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12398:6:25"},"nodeType":"YulFunctionCall","src":"12398:36:25"},"nodeType":"YulExpressionStatement","src":"12398:36:25"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12376:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12383:3:25","type":""}],"src":"12325:115:25"},{"body":{"nodeType":"YulBlock","src":"12542:122:25","statements":[{"nodeType":"YulAssignment","src":"12552:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12564:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12575:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12560:3:25"},"nodeType":"YulFunctionCall","src":"12560:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12552:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12630:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12643:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12654:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12639:3:25"},"nodeType":"YulFunctionCall","src":"12639:17:25"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"12588:41:25"},"nodeType":"YulFunctionCall","src":"12588:69:25"},"nodeType":"YulExpressionStatement","src":"12588:69:25"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12514:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12526:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12537:4:25","type":""}],"src":"12446:218:25"},{"body":{"nodeType":"YulBlock","src":"12753:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"12799:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12801:77:25"},"nodeType":"YulFunctionCall","src":"12801:79:25"},"nodeType":"YulExpressionStatement","src":"12801:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12774:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"12783:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12770:3:25"},"nodeType":"YulFunctionCall","src":"12770:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"12795:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12766:3:25"},"nodeType":"YulFunctionCall","src":"12766:32:25"},"nodeType":"YulIf","src":"12763:119:25"},{"nodeType":"YulBlock","src":"12892:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"12907:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"12921:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12911:6:25","type":""}]},{"nodeType":"YulAssignment","src":"12936:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12971:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"12982:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12967:3:25"},"nodeType":"YulFunctionCall","src":"12967:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12991:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12946:20:25"},"nodeType":"YulFunctionCall","src":"12946:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12936:6:25"}]}]},{"nodeType":"YulBlock","src":"13019:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"13034:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"13048:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13038:6:25","type":""}]},{"nodeType":"YulAssignment","src":"13064:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13099:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"13110:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13095:3:25"},"nodeType":"YulFunctionCall","src":"13095:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13119:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13074:20:25"},"nodeType":"YulFunctionCall","src":"13074:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13064:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12715:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12726:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12738:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12746:6:25","type":""}],"src":"12670:474:25"},{"body":{"nodeType":"YulBlock","src":"13178:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13195:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13198:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13188:6:25"},"nodeType":"YulFunctionCall","src":"13188:88:25"},"nodeType":"YulExpressionStatement","src":"13188:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13292:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13295:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13285:6:25"},"nodeType":"YulFunctionCall","src":"13285:15:25"},"nodeType":"YulExpressionStatement","src":"13285:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13316:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13319:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13309:6:25"},"nodeType":"YulFunctionCall","src":"13309:15:25"},"nodeType":"YulExpressionStatement","src":"13309:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"13150:180:25"},{"body":{"nodeType":"YulBlock","src":"13387:269:25","statements":[{"nodeType":"YulAssignment","src":"13397:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13411:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"13417:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"13407:3:25"},"nodeType":"YulFunctionCall","src":"13407:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13397:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"13428:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13458:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"13464:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13454:3:25"},"nodeType":"YulFunctionCall","src":"13454:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"13432:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"13505:51:25","statements":[{"nodeType":"YulAssignment","src":"13519:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13533:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13541:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13529:3:25"},"nodeType":"YulFunctionCall","src":"13529:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13519:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13485:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13478:6:25"},"nodeType":"YulFunctionCall","src":"13478:26:25"},"nodeType":"YulIf","src":"13475:81:25"},{"body":{"nodeType":"YulBlock","src":"13608:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"13622:16:25"},"nodeType":"YulFunctionCall","src":"13622:18:25"},"nodeType":"YulExpressionStatement","src":"13622:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13572:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13595:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13603:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13592:2:25"},"nodeType":"YulFunctionCall","src":"13592:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13569:2:25"},"nodeType":"YulFunctionCall","src":"13569:38:25"},"nodeType":"YulIf","src":"13566:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13371:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13380:6:25","type":""}],"src":"13336:320:25"},{"body":{"nodeType":"YulBlock","src":"13768:114:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13790:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13798:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13786:3:25"},"nodeType":"YulFunctionCall","src":"13786:14:25"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"13802:34:25","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13779:6:25"},"nodeType":"YulFunctionCall","src":"13779:58:25"},"nodeType":"YulExpressionStatement","src":"13779:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13858:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13866:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13854:3:25"},"nodeType":"YulFunctionCall","src":"13854:15:25"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"13871:3:25","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13847:6:25"},"nodeType":"YulFunctionCall","src":"13847:28:25"},"nodeType":"YulExpressionStatement","src":"13847:28:25"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13760:6:25","type":""}],"src":"13662:220:25"},{"body":{"nodeType":"YulBlock","src":"14034:220:25","statements":[{"nodeType":"YulAssignment","src":"14044:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14110:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"14115:2:25","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14051:58:25"},"nodeType":"YulFunctionCall","src":"14051:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14044:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14216:3:25"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"14127:88:25"},"nodeType":"YulFunctionCall","src":"14127:93:25"},"nodeType":"YulExpressionStatement","src":"14127:93:25"},{"nodeType":"YulAssignment","src":"14229:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14240:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"14245:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14236:3:25"},"nodeType":"YulFunctionCall","src":"14236:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14229:3:25"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14022:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14030:3:25","type":""}],"src":"13888:366:25"},{"body":{"nodeType":"YulBlock","src":"14431:248:25","statements":[{"nodeType":"YulAssignment","src":"14441:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14453:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14464:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14449:3:25"},"nodeType":"YulFunctionCall","src":"14449:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14441:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14488:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14499:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14484:3:25"},"nodeType":"YulFunctionCall","src":"14484:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14507:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"14513:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14503:3:25"},"nodeType":"YulFunctionCall","src":"14503:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14477:6:25"},"nodeType":"YulFunctionCall","src":"14477:47:25"},"nodeType":"YulExpressionStatement","src":"14477:47:25"},{"nodeType":"YulAssignment","src":"14533:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14667:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14541:124:25"},"nodeType":"YulFunctionCall","src":"14541:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14533:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14411:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14426:4:25","type":""}],"src":"14260:419:25"},{"body":{"nodeType":"YulBlock","src":"14791:142:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14813:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"14821:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14809:3:25"},"nodeType":"YulFunctionCall","src":"14809:14:25"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"14825:34:25","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14802:6:25"},"nodeType":"YulFunctionCall","src":"14802:58:25"},"nodeType":"YulExpressionStatement","src":"14802:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14881:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"14889:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14877:3:25"},"nodeType":"YulFunctionCall","src":"14877:15:25"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"14894:31:25","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14870:6:25"},"nodeType":"YulFunctionCall","src":"14870:56:25"},"nodeType":"YulExpressionStatement","src":"14870:56:25"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14783:6:25","type":""}],"src":"14685:248:25"},{"body":{"nodeType":"YulBlock","src":"15085:220:25","statements":[{"nodeType":"YulAssignment","src":"15095:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15161:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15166:2:25","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15102:58:25"},"nodeType":"YulFunctionCall","src":"15102:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15095:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15267:3:25"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"15178:88:25"},"nodeType":"YulFunctionCall","src":"15178:93:25"},"nodeType":"YulExpressionStatement","src":"15178:93:25"},{"nodeType":"YulAssignment","src":"15280:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15291:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15296:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15287:3:25"},"nodeType":"YulFunctionCall","src":"15287:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15280:3:25"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15073:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15081:3:25","type":""}],"src":"14939:366:25"},{"body":{"nodeType":"YulBlock","src":"15482:248:25","statements":[{"nodeType":"YulAssignment","src":"15492:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15504:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15515:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15500:3:25"},"nodeType":"YulFunctionCall","src":"15500:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15492:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15539:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"15550:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15535:3:25"},"nodeType":"YulFunctionCall","src":"15535:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15558:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"15564:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15554:3:25"},"nodeType":"YulFunctionCall","src":"15554:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15528:6:25"},"nodeType":"YulFunctionCall","src":"15528:47:25"},"nodeType":"YulExpressionStatement","src":"15528:47:25"},{"nodeType":"YulAssignment","src":"15584:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15718:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15592:124:25"},"nodeType":"YulFunctionCall","src":"15592:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15584:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15462:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15477:4:25","type":""}],"src":"15311:419:25"},{"body":{"nodeType":"YulBlock","src":"15764:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15781:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15784:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15774:6:25"},"nodeType":"YulFunctionCall","src":"15774:88:25"},"nodeType":"YulExpressionStatement","src":"15774:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15878:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15881:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15871:6:25"},"nodeType":"YulFunctionCall","src":"15871:15:25"},"nodeType":"YulExpressionStatement","src":"15871:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15902:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15905:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15895:6:25"},"nodeType":"YulFunctionCall","src":"15895:15:25"},"nodeType":"YulExpressionStatement","src":"15895:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"15736:180:25"},{"body":{"nodeType":"YulBlock","src":"15966:261:25","statements":[{"nodeType":"YulAssignment","src":"15976:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15999:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15981:17:25"},"nodeType":"YulFunctionCall","src":"15981:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15976:1:25"}]},{"nodeType":"YulAssignment","src":"16010:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16033:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16015:17:25"},"nodeType":"YulFunctionCall","src":"16015:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16010:1:25"}]},{"body":{"nodeType":"YulBlock","src":"16173:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16175:16:25"},"nodeType":"YulFunctionCall","src":"16175:18:25"},"nodeType":"YulExpressionStatement","src":"16175:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16094:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16101:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"16169:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16097:3:25"},"nodeType":"YulFunctionCall","src":"16097:74:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16091:2:25"},"nodeType":"YulFunctionCall","src":"16091:81:25"},"nodeType":"YulIf","src":"16088:107:25"},{"nodeType":"YulAssignment","src":"16205:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16216:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"16219:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16212:3:25"},"nodeType":"YulFunctionCall","src":"16212:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16205:3:25"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15953:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"15956:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"15962:3:25","type":""}],"src":"15922:305:25"},{"body":{"nodeType":"YulBlock","src":"16339:126:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16361:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"16369:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16357:3:25"},"nodeType":"YulFunctionCall","src":"16357:14:25"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"16373:34:25","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16350:6:25"},"nodeType":"YulFunctionCall","src":"16350:58:25"},"nodeType":"YulExpressionStatement","src":"16350:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16429:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"16437:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16425:3:25"},"nodeType":"YulFunctionCall","src":"16425:15:25"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"16442:15:25","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16418:6:25"},"nodeType":"YulFunctionCall","src":"16418:40:25"},"nodeType":"YulExpressionStatement","src":"16418:40:25"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16331:6:25","type":""}],"src":"16233:232:25"},{"body":{"nodeType":"YulBlock","src":"16617:220:25","statements":[{"nodeType":"YulAssignment","src":"16627:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16693:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"16698:2:25","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16634:58:25"},"nodeType":"YulFunctionCall","src":"16634:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16627:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16799:3:25"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"16710:88:25"},"nodeType":"YulFunctionCall","src":"16710:93:25"},"nodeType":"YulExpressionStatement","src":"16710:93:25"},{"nodeType":"YulAssignment","src":"16812:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16823:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"16828:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16819:3:25"},"nodeType":"YulFunctionCall","src":"16819:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16812:3:25"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16605:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16613:3:25","type":""}],"src":"16471:366:25"},{"body":{"nodeType":"YulBlock","src":"17014:248:25","statements":[{"nodeType":"YulAssignment","src":"17024:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17036:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"17047:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17032:3:25"},"nodeType":"YulFunctionCall","src":"17032:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17024:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17071:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"17082:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17067:3:25"},"nodeType":"YulFunctionCall","src":"17067:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17090:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"17096:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17086:3:25"},"nodeType":"YulFunctionCall","src":"17086:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17060:6:25"},"nodeType":"YulFunctionCall","src":"17060:47:25"},"nodeType":"YulExpressionStatement","src":"17060:47:25"},{"nodeType":"YulAssignment","src":"17116:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17250:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17124:124:25"},"nodeType":"YulFunctionCall","src":"17124:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17116:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16994:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17009:4:25","type":""}],"src":"16843:419:25"},{"body":{"nodeType":"YulBlock","src":"17382:34:25","statements":[{"nodeType":"YulAssignment","src":"17392:18:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"17407:3:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17392:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17354:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"17359:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17370:11:25","type":""}],"src":"17268:148:25"},{"body":{"nodeType":"YulBlock","src":"17532:267:25","statements":[{"nodeType":"YulVariableDeclaration","src":"17542:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17589:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17556:32:25"},"nodeType":"YulFunctionCall","src":"17556:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17546:6:25","type":""}]},{"nodeType":"YulAssignment","src":"17604:96:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17688:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"17693:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17611:76:25"},"nodeType":"YulFunctionCall","src":"17611:89:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17604:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17735:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"17742:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17731:3:25"},"nodeType":"YulFunctionCall","src":"17731:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"17749:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"17754:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"17709:21:25"},"nodeType":"YulFunctionCall","src":"17709:52:25"},"nodeType":"YulExpressionStatement","src":"17709:52:25"},{"nodeType":"YulAssignment","src":"17770:23:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17781:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"17786:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17777:3:25"},"nodeType":"YulFunctionCall","src":"17777:16:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17770:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17513:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17520:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17528:3:25","type":""}],"src":"17422:377:25"},{"body":{"nodeType":"YulBlock","src":"17941:139:25","statements":[{"nodeType":"YulAssignment","src":"17952:102:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18041:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"18050:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17959:81:25"},"nodeType":"YulFunctionCall","src":"17959:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17952:3:25"}]},{"nodeType":"YulAssignment","src":"18064:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"18071:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18064:3:25"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17920:3:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17926:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17937:3:25","type":""}],"src":"17805:275:25"},{"body":{"nodeType":"YulBlock","src":"18270:251:25","statements":[{"nodeType":"YulAssignment","src":"18281:102:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18370:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"18379:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18288:81:25"},"nodeType":"YulFunctionCall","src":"18288:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18281:3:25"}]},{"nodeType":"YulAssignment","src":"18393:102:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18482:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"18491:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18400:81:25"},"nodeType":"YulFunctionCall","src":"18400:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18393:3:25"}]},{"nodeType":"YulAssignment","src":"18505:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"18512:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18505:3:25"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18241:3:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18247:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18255:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18266:3:25","type":""}],"src":"18086:435:25"},{"body":{"nodeType":"YulBlock","src":"18633:68:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18655:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"18663:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18651:3:25"},"nodeType":"YulFunctionCall","src":"18651:14:25"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"18667:26:25","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18644:6:25"},"nodeType":"YulFunctionCall","src":"18644:50:25"},"nodeType":"YulExpressionStatement","src":"18644:50:25"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18625:6:25","type":""}],"src":"18527:174:25"},{"body":{"nodeType":"YulBlock","src":"18853:220:25","statements":[{"nodeType":"YulAssignment","src":"18863:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18929:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"18934:2:25","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18870:58:25"},"nodeType":"YulFunctionCall","src":"18870:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18863:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19035:3:25"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"18946:88:25"},"nodeType":"YulFunctionCall","src":"18946:93:25"},"nodeType":"YulExpressionStatement","src":"18946:93:25"},{"nodeType":"YulAssignment","src":"19048:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19059:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"19064:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19055:3:25"},"nodeType":"YulFunctionCall","src":"19055:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19048:3:25"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18841:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18849:3:25","type":""}],"src":"18707:366:25"},{"body":{"nodeType":"YulBlock","src":"19250:248:25","statements":[{"nodeType":"YulAssignment","src":"19260:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19272:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19283:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19268:3:25"},"nodeType":"YulFunctionCall","src":"19268:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19260:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19307:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19318:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19303:3:25"},"nodeType":"YulFunctionCall","src":"19303:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19326:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"19332:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19322:3:25"},"nodeType":"YulFunctionCall","src":"19322:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19296:6:25"},"nodeType":"YulFunctionCall","src":"19296:47:25"},"nodeType":"YulExpressionStatement","src":"19296:47:25"},{"nodeType":"YulAssignment","src":"19352:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19486:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19360:124:25"},"nodeType":"YulFunctionCall","src":"19360:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19352:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19230:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19245:4:25","type":""}],"src":"19079:419:25"},{"body":{"nodeType":"YulBlock","src":"19610:122:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19632:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"19640:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19628:3:25"},"nodeType":"YulFunctionCall","src":"19628:14:25"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"19644:34:25","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19621:6:25"},"nodeType":"YulFunctionCall","src":"19621:58:25"},"nodeType":"YulExpressionStatement","src":"19621:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19700:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"19708:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19696:3:25"},"nodeType":"YulFunctionCall","src":"19696:15:25"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"19713:11:25","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19689:6:25"},"nodeType":"YulFunctionCall","src":"19689:36:25"},"nodeType":"YulExpressionStatement","src":"19689:36:25"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19602:6:25","type":""}],"src":"19504:228:25"},{"body":{"nodeType":"YulBlock","src":"19884:220:25","statements":[{"nodeType":"YulAssignment","src":"19894:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19960:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"19965:2:25","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19901:58:25"},"nodeType":"YulFunctionCall","src":"19901:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19894:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20066:3:25"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"19977:88:25"},"nodeType":"YulFunctionCall","src":"19977:93:25"},"nodeType":"YulExpressionStatement","src":"19977:93:25"},{"nodeType":"YulAssignment","src":"20079:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20090:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"20095:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20086:3:25"},"nodeType":"YulFunctionCall","src":"20086:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20079:3:25"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19872:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19880:3:25","type":""}],"src":"19738:366:25"},{"body":{"nodeType":"YulBlock","src":"20281:248:25","statements":[{"nodeType":"YulAssignment","src":"20291:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20303:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20314:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20299:3:25"},"nodeType":"YulFunctionCall","src":"20299:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20291:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20338:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20349:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20334:3:25"},"nodeType":"YulFunctionCall","src":"20334:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20357:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"20363:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20353:3:25"},"nodeType":"YulFunctionCall","src":"20353:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20327:6:25"},"nodeType":"YulFunctionCall","src":"20327:47:25"},"nodeType":"YulExpressionStatement","src":"20327:47:25"},{"nodeType":"YulAssignment","src":"20383:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20517:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20391:124:25"},"nodeType":"YulFunctionCall","src":"20391:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20383:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20261:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20276:4:25","type":""}],"src":"20110:419:25"},{"body":{"nodeType":"YulBlock","src":"20641:75:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20663:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"20671:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20659:3:25"},"nodeType":"YulFunctionCall","src":"20659:14:25"},{"hexValue":"55524920517565727920666f72206e6f6e6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"20675:33:25","type":"","value":"URI Query for nonexistent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20652:6:25"},"nodeType":"YulFunctionCall","src":"20652:57:25"},"nodeType":"YulExpressionStatement","src":"20652:57:25"}]},"name":"store_literal_in_memory_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20633:6:25","type":""}],"src":"20535:181:25"},{"body":{"nodeType":"YulBlock","src":"20868:220:25","statements":[{"nodeType":"YulAssignment","src":"20878:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20944:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"20949:2:25","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20885:58:25"},"nodeType":"YulFunctionCall","src":"20885:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20878:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21050:3:25"}],"functionName":{"name":"store_literal_in_memory_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30","nodeType":"YulIdentifier","src":"20961:88:25"},"nodeType":"YulFunctionCall","src":"20961:93:25"},"nodeType":"YulExpressionStatement","src":"20961:93:25"},{"nodeType":"YulAssignment","src":"21063:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21074:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"21079:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21070:3:25"},"nodeType":"YulFunctionCall","src":"21070:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21063:3:25"}]}]},"name":"abi_encode_t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20856:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20864:3:25","type":""}],"src":"20722:366:25"},{"body":{"nodeType":"YulBlock","src":"21265:248:25","statements":[{"nodeType":"YulAssignment","src":"21275:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21287:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21298:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21283:3:25"},"nodeType":"YulFunctionCall","src":"21283:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21275:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21322:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21333:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21318:3:25"},"nodeType":"YulFunctionCall","src":"21318:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21341:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"21347:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21337:3:25"},"nodeType":"YulFunctionCall","src":"21337:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21311:6:25"},"nodeType":"YulFunctionCall","src":"21311:47:25"},"nodeType":"YulExpressionStatement","src":"21311:47:25"},{"nodeType":"YulAssignment","src":"21367:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21501:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21375:124:25"},"nodeType":"YulFunctionCall","src":"21375:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21367:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21245:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21260:4:25","type":""}],"src":"21094:419:25"},{"body":{"nodeType":"YulBlock","src":"21563:61:25","statements":[{"nodeType":"YulAssignment","src":"21573:45:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21588:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"21595:22:25","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21584:3:25"},"nodeType":"YulFunctionCall","src":"21584:34:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21573:7:25"}]}]},"name":"cleanup_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21545:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21555:7:25","type":""}],"src":"21519:105:25"},{"body":{"nodeType":"YulBlock","src":"21672:78:25","statements":[{"body":{"nodeType":"YulBlock","src":"21728:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21737:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21740:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21730:6:25"},"nodeType":"YulFunctionCall","src":"21730:12:25"},"nodeType":"YulExpressionStatement","src":"21730:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21695:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21719:5:25"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"21702:16:25"},"nodeType":"YulFunctionCall","src":"21702:23:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21692:2:25"},"nodeType":"YulFunctionCall","src":"21692:34:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21685:6:25"},"nodeType":"YulFunctionCall","src":"21685:42:25"},"nodeType":"YulIf","src":"21682:62:25"}]},"name":"validator_revert_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21665:5:25","type":""}],"src":"21630:120:25"},{"body":{"nodeType":"YulBlock","src":"21818:79:25","statements":[{"nodeType":"YulAssignment","src":"21828:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21843:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21837:5:25"},"nodeType":"YulFunctionCall","src":"21837:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21828:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21885:5:25"}],"functionName":{"name":"validator_revert_t_uint80","nodeType":"YulIdentifier","src":"21859:25:25"},"nodeType":"YulFunctionCall","src":"21859:32:25"},"nodeType":"YulExpressionStatement","src":"21859:32:25"}]},"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21796:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"21804:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"21812:5:25","type":""}],"src":"21756:141:25"},{"body":{"nodeType":"YulBlock","src":"21965:79:25","statements":[{"nodeType":"YulAssignment","src":"21975:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21990:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21984:5:25"},"nodeType":"YulFunctionCall","src":"21984:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21975:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22032:5:25"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"22006:25:25"},"nodeType":"YulFunctionCall","src":"22006:32:25"},"nodeType":"YulExpressionStatement","src":"22006:32:25"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21943:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"21951:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"21959:5:25","type":""}],"src":"21903:141:25"},{"body":{"nodeType":"YulBlock","src":"22113:80:25","statements":[{"nodeType":"YulAssignment","src":"22123:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22138:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22132:5:25"},"nodeType":"YulFunctionCall","src":"22132:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22123:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22181:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"22154:26:25"},"nodeType":"YulFunctionCall","src":"22154:33:25"},"nodeType":"YulExpressionStatement","src":"22154:33:25"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22091:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"22099:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22107:5:25","type":""}],"src":"22050:143:25"},{"body":{"nodeType":"YulBlock","src":"22341:829:25","statements":[{"body":{"nodeType":"YulBlock","src":"22388:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22390:77:25"},"nodeType":"YulFunctionCall","src":"22390:79:25"},"nodeType":"YulExpressionStatement","src":"22390:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22362:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"22371:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22358:3:25"},"nodeType":"YulFunctionCall","src":"22358:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"22383:3:25","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22354:3:25"},"nodeType":"YulFunctionCall","src":"22354:33:25"},"nodeType":"YulIf","src":"22351:120:25"},{"nodeType":"YulBlock","src":"22481:127:25","statements":[{"nodeType":"YulVariableDeclaration","src":"22496:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"22510:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22500:6:25","type":""}]},{"nodeType":"YulAssignment","src":"22525:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22570:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"22581:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22566:3:25"},"nodeType":"YulFunctionCall","src":"22566:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22590:7:25"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"22535:30:25"},"nodeType":"YulFunctionCall","src":"22535:63:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22525:6:25"}]}]},{"nodeType":"YulBlock","src":"22618:128:25","statements":[{"nodeType":"YulVariableDeclaration","src":"22633:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"22647:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22637:6:25","type":""}]},{"nodeType":"YulAssignment","src":"22663:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22708:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"22719:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22704:3:25"},"nodeType":"YulFunctionCall","src":"22704:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22728:7:25"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"22673:30:25"},"nodeType":"YulFunctionCall","src":"22673:63:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"22663:6:25"}]}]},{"nodeType":"YulBlock","src":"22756:129:25","statements":[{"nodeType":"YulVariableDeclaration","src":"22771:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"22785:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22775:6:25","type":""}]},{"nodeType":"YulAssignment","src":"22801:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22847:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"22858:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22843:3:25"},"nodeType":"YulFunctionCall","src":"22843:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22867:7:25"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"22811:31:25"},"nodeType":"YulFunctionCall","src":"22811:64:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"22801:6:25"}]}]},{"nodeType":"YulBlock","src":"22895:129:25","statements":[{"nodeType":"YulVariableDeclaration","src":"22910:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"22924:2:25","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22914:6:25","type":""}]},{"nodeType":"YulAssignment","src":"22940:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22986:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"22997:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22982:3:25"},"nodeType":"YulFunctionCall","src":"22982:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23006:7:25"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"22950:31:25"},"nodeType":"YulFunctionCall","src":"22950:64:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"22940:6:25"}]}]},{"nodeType":"YulBlock","src":"23034:129:25","statements":[{"nodeType":"YulVariableDeclaration","src":"23049:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"23063:3:25","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23053:6:25","type":""}]},{"nodeType":"YulAssignment","src":"23080:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23125:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"23136:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23121:3:25"},"nodeType":"YulFunctionCall","src":"23121:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23145:7:25"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"23090:30:25"},"nodeType":"YulFunctionCall","src":"23090:63:25"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"23080:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22279:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22290:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22302:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22310:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22318:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22326:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22334:6:25","type":""}],"src":"22199:971:25"},{"body":{"nodeType":"YulBlock","src":"23282:108:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23304:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"23312:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23300:3:25"},"nodeType":"YulFunctionCall","src":"23300:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"23316:66:25","type":"","value":"0x7b226e616d65223a220000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23293:6:25"},"nodeType":"YulFunctionCall","src":"23293:90:25"},"nodeType":"YulExpressionStatement","src":"23293:90:25"}]},"name":"store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23274:6:25","type":""}],"src":"23176:214:25"},{"body":{"nodeType":"YulBlock","src":"23560:236:25","statements":[{"nodeType":"YulAssignment","src":"23570:91:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23654:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"23659:1:25","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23577:76:25"},"nodeType":"YulFunctionCall","src":"23577:84:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23570:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23759:3:25"}],"functionName":{"name":"store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832","nodeType":"YulIdentifier","src":"23670:88:25"},"nodeType":"YulFunctionCall","src":"23670:93:25"},"nodeType":"YulExpressionStatement","src":"23670:93:25"},{"nodeType":"YulAssignment","src":"23772:18:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23783:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"23788:1:25","type":"","value":"9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23779:3:25"},"nodeType":"YulFunctionCall","src":"23779:11:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23772:3:25"}]}]},"name":"abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23548:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23556:3:25","type":""}],"src":"23396:400:25"},{"body":{"nodeType":"YulBlock","src":"23908:278:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23930:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"23938:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23926:3:25"},"nodeType":"YulFunctionCall","src":"23926:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"23942:66:25","type":"","value":"0x222c20226465736372697074696f6e223a22416e204e46542074686174206368"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23919:6:25"},"nodeType":"YulFunctionCall","src":"23919:90:25"},"nodeType":"YulExpressionStatement","src":"23919:90:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24030:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"24038:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24026:3:25"},"nodeType":"YulFunctionCall","src":"24026:15:25"},{"hexValue":"616e676573206261736564206f6e2074686520436861696e6c696e6b20466565","kind":"string","nodeType":"YulLiteral","src":"24043:34:25","type":"","value":"anges based on the Chainlink Fee"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24019:6:25"},"nodeType":"YulFunctionCall","src":"24019:59:25"},"nodeType":"YulExpressionStatement","src":"24019:59:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24099:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"24107:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24095:3:25"},"nodeType":"YulFunctionCall","src":"24095:15:25"},{"kind":"number","nodeType":"YulLiteral","src":"24112:66:25","type":"","value":"0x64222c2000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24088:6:25"},"nodeType":"YulFunctionCall","src":"24088:91:25"},"nodeType":"YulExpressionStatement","src":"24088:91:25"}]},"name":"store_literal_in_memory_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23900:6:25","type":""}],"src":"23802:384:25"},{"body":{"nodeType":"YulBlock","src":"24356:238:25","statements":[{"nodeType":"YulAssignment","src":"24366:92:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24450:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"24455:2:25","type":"","value":"68"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24373:76:25"},"nodeType":"YulFunctionCall","src":"24373:85:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24366:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24556:3:25"}],"functionName":{"name":"store_literal_in_memory_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574","nodeType":"YulIdentifier","src":"24467:88:25"},"nodeType":"YulFunctionCall","src":"24467:93:25"},"nodeType":"YulExpressionStatement","src":"24467:93:25"},{"nodeType":"YulAssignment","src":"24569:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24580:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"24585:2:25","type":"","value":"68"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24576:3:25"},"nodeType":"YulFunctionCall","src":"24576:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24569:3:25"}]}]},"name":"abi_encode_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24344:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24352:3:25","type":""}],"src":"24192:402:25"},{"body":{"nodeType":"YulBlock","src":"24706:310:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24728:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"24736:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24724:3:25"},"nodeType":"YulFunctionCall","src":"24724:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"24740:66:25","type":"","value":"0x2261747472696275746573223a205b7b2274726169745f74797065223a202263"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24717:6:25"},"nodeType":"YulFunctionCall","src":"24717:90:25"},"nodeType":"YulExpressionStatement","src":"24717:90:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24828:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"24836:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24824:3:25"},"nodeType":"YulFunctionCall","src":"24824:15:25"},{"kind":"number","nodeType":"YulLiteral","src":"24841:66:25","type":"","value":"0x6f6f6c6e657373222c202276616c7565223a203130307d5d2c2022696d616765"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24817:6:25"},"nodeType":"YulFunctionCall","src":"24817:91:25"},"nodeType":"YulExpressionStatement","src":"24817:91:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24929:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"24937:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24925:3:25"},"nodeType":"YulFunctionCall","src":"24925:15:25"},{"kind":"number","nodeType":"YulLiteral","src":"24942:66:25","type":"","value":"0x223a220000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24918:6:25"},"nodeType":"YulFunctionCall","src":"24918:91:25"},"nodeType":"YulExpressionStatement","src":"24918:91:25"}]},"name":"store_literal_in_memory_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24698:6:25","type":""}],"src":"24600:416:25"},{"body":{"nodeType":"YulBlock","src":"25186:238:25","statements":[{"nodeType":"YulAssignment","src":"25196:92:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25280:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"25285:2:25","type":"","value":"67"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25203:76:25"},"nodeType":"YulFunctionCall","src":"25203:85:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25196:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25386:3:25"}],"functionName":{"name":"store_literal_in_memory_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b","nodeType":"YulIdentifier","src":"25297:88:25"},"nodeType":"YulFunctionCall","src":"25297:93:25"},"nodeType":"YulExpressionStatement","src":"25297:93:25"},{"nodeType":"YulAssignment","src":"25399:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25410:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"25415:2:25","type":"","value":"67"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25406:3:25"},"nodeType":"YulFunctionCall","src":"25406:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25399:3:25"}]}]},"name":"abi_encode_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25174:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25182:3:25","type":""}],"src":"25022:402:25"},{"body":{"nodeType":"YulBlock","src":"25536:108:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25558:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"25566:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25554:3:25"},"nodeType":"YulFunctionCall","src":"25554:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"25570:66:25","type":"","value":"0x227d000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25547:6:25"},"nodeType":"YulFunctionCall","src":"25547:90:25"},"nodeType":"YulExpressionStatement","src":"25547:90:25"}]},"name":"store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25528:6:25","type":""}],"src":"25430:214:25"},{"body":{"nodeType":"YulBlock","src":"25814:236:25","statements":[{"nodeType":"YulAssignment","src":"25824:91:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25908:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"25913:1:25","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25831:76:25"},"nodeType":"YulFunctionCall","src":"25831:84:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25824:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26013:3:25"}],"functionName":{"name":"store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","nodeType":"YulIdentifier","src":"25924:88:25"},"nodeType":"YulFunctionCall","src":"25924:93:25"},"nodeType":"YulExpressionStatement","src":"25924:93:25"},{"nodeType":"YulAssignment","src":"26026:18:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26037:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"26042:1:25","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26033:3:25"},"nodeType":"YulFunctionCall","src":"26033:11:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26026:3:25"}]}]},"name":"abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25802:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25810:3:25","type":""}],"src":"25650:400:25"},{"body":{"nodeType":"YulBlock","src":"26644:911:25","statements":[{"nodeType":"YulAssignment","src":"26655:155:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26806:3:25"}],"functionName":{"name":"abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26662:142:25"},"nodeType":"YulFunctionCall","src":"26662:148:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26655:3:25"}]},{"nodeType":"YulAssignment","src":"26820:102:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26909:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"26918:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26827:81:25"},"nodeType":"YulFunctionCall","src":"26827:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26820:3:25"}]},{"nodeType":"YulAssignment","src":"26932:155:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27083:3:25"}],"functionName":{"name":"abi_encode_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26939:142:25"},"nodeType":"YulFunctionCall","src":"26939:148:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26932:3:25"}]},{"nodeType":"YulAssignment","src":"27097:155:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27248:3:25"}],"functionName":{"name":"abi_encode_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27104:142:25"},"nodeType":"YulFunctionCall","src":"27104:148:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27097:3:25"}]},{"nodeType":"YulAssignment","src":"27262:102:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27351:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"27360:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27269:81:25"},"nodeType":"YulFunctionCall","src":"27269:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27262:3:25"}]},{"nodeType":"YulAssignment","src":"27374:155:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27525:3:25"}],"functionName":{"name":"abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27381:142:25"},"nodeType":"YulFunctionCall","src":"27381:148:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27374:3:25"}]},{"nodeType":"YulAssignment","src":"27539:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"27546:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27539:3:25"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26615:3:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26621:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26629:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26640:3:25","type":""}],"src":"26056:1499:25"},{"body":{"nodeType":"YulBlock","src":"27589:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27606:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27609:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27599:6:25"},"nodeType":"YulFunctionCall","src":"27599:88:25"},"nodeType":"YulExpressionStatement","src":"27599:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27703:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27706:4:25","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27696:6:25"},"nodeType":"YulFunctionCall","src":"27696:15:25"},"nodeType":"YulExpressionStatement","src":"27696:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27727:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27730:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27720:6:25"},"nodeType":"YulFunctionCall","src":"27720:15:25"},"nodeType":"YulExpressionStatement","src":"27720:15:25"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"27561:180:25"},{"body":{"nodeType":"YulBlock","src":"27789:143:25","statements":[{"nodeType":"YulAssignment","src":"27799:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27822:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27804:17:25"},"nodeType":"YulFunctionCall","src":"27804:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"27799:1:25"}]},{"nodeType":"YulAssignment","src":"27833:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27856:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27838:17:25"},"nodeType":"YulFunctionCall","src":"27838:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"27833:1:25"}]},{"body":{"nodeType":"YulBlock","src":"27880:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"27882:16:25"},"nodeType":"YulFunctionCall","src":"27882:18:25"},"nodeType":"YulExpressionStatement","src":"27882:18:25"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27877:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27870:6:25"},"nodeType":"YulFunctionCall","src":"27870:9:25"},"nodeType":"YulIf","src":"27867:35:25"},{"nodeType":"YulAssignment","src":"27912:14:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27921:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"27924:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"27917:3:25"},"nodeType":"YulFunctionCall","src":"27917:9:25"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"27912:1:25"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27778:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"27781:1:25","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"27787:1:25","type":""}],"src":"27747:185:25"},{"body":{"nodeType":"YulBlock","src":"27986:300:25","statements":[{"nodeType":"YulAssignment","src":"27996:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28019:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28001:17:25"},"nodeType":"YulFunctionCall","src":"28001:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"27996:1:25"}]},{"nodeType":"YulAssignment","src":"28030:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28053:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28035:17:25"},"nodeType":"YulFunctionCall","src":"28035:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"28030:1:25"}]},{"body":{"nodeType":"YulBlock","src":"28228:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28230:16:25"},"nodeType":"YulFunctionCall","src":"28230:18:25"},"nodeType":"YulExpressionStatement","src":"28230:18:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28140:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28133:6:25"},"nodeType":"YulFunctionCall","src":"28133:9:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28126:6:25"},"nodeType":"YulFunctionCall","src":"28126:17:25"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28148:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28155:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"28223:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"28151:3:25"},"nodeType":"YulFunctionCall","src":"28151:74:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28145:2:25"},"nodeType":"YulFunctionCall","src":"28145:81:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28122:3:25"},"nodeType":"YulFunctionCall","src":"28122:105:25"},"nodeType":"YulIf","src":"28119:131:25"},{"nodeType":"YulAssignment","src":"28260:20:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28275:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"28278:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"28271:3:25"},"nodeType":"YulFunctionCall","src":"28271:9:25"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"28260:7:25"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27969:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"27972:1:25","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"27978:7:25","type":""}],"src":"27938:348:25"},{"body":{"nodeType":"YulBlock","src":"28398:118:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28420:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"28428:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28416:3:25"},"nodeType":"YulFunctionCall","src":"28416:14:25"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"28432:34:25","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28409:6:25"},"nodeType":"YulFunctionCall","src":"28409:58:25"},"nodeType":"YulExpressionStatement","src":"28409:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28488:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"28496:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28484:3:25"},"nodeType":"YulFunctionCall","src":"28484:15:25"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"28501:7:25","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28477:6:25"},"nodeType":"YulFunctionCall","src":"28477:32:25"},"nodeType":"YulExpressionStatement","src":"28477:32:25"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28390:6:25","type":""}],"src":"28292:224:25"},{"body":{"nodeType":"YulBlock","src":"28668:220:25","statements":[{"nodeType":"YulAssignment","src":"28678:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28744:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"28749:2:25","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28685:58:25"},"nodeType":"YulFunctionCall","src":"28685:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28678:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28850:3:25"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"28761:88:25"},"nodeType":"YulFunctionCall","src":"28761:93:25"},"nodeType":"YulExpressionStatement","src":"28761:93:25"},{"nodeType":"YulAssignment","src":"28863:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28874:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"28879:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28870:3:25"},"nodeType":"YulFunctionCall","src":"28870:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28863:3:25"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28656:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28664:3:25","type":""}],"src":"28522:366:25"},{"body":{"nodeType":"YulBlock","src":"29065:248:25","statements":[{"nodeType":"YulAssignment","src":"29075:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29087:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"29098:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29083:3:25"},"nodeType":"YulFunctionCall","src":"29083:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29075:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29122:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"29133:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29118:3:25"},"nodeType":"YulFunctionCall","src":"29118:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29141:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"29147:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29137:3:25"},"nodeType":"YulFunctionCall","src":"29137:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29111:6:25"},"nodeType":"YulFunctionCall","src":"29111:47:25"},"nodeType":"YulExpressionStatement","src":"29111:47:25"},{"nodeType":"YulAssignment","src":"29167:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29301:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29175:124:25"},"nodeType":"YulFunctionCall","src":"29175:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29167:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29045:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29060:4:25","type":""}],"src":"28894:419:25"},{"body":{"nodeType":"YulBlock","src":"29425:117:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29447:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"29455:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29443:3:25"},"nodeType":"YulFunctionCall","src":"29443:14:25"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"29459:34:25","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29436:6:25"},"nodeType":"YulFunctionCall","src":"29436:58:25"},"nodeType":"YulExpressionStatement","src":"29436:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29515:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"29523:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29511:3:25"},"nodeType":"YulFunctionCall","src":"29511:15:25"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"29528:6:25","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29504:6:25"},"nodeType":"YulFunctionCall","src":"29504:31:25"},"nodeType":"YulExpressionStatement","src":"29504:31:25"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29417:6:25","type":""}],"src":"29319:223:25"},{"body":{"nodeType":"YulBlock","src":"29694:220:25","statements":[{"nodeType":"YulAssignment","src":"29704:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29770:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"29775:2:25","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29711:58:25"},"nodeType":"YulFunctionCall","src":"29711:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29704:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29876:3:25"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"29787:88:25"},"nodeType":"YulFunctionCall","src":"29787:93:25"},"nodeType":"YulExpressionStatement","src":"29787:93:25"},{"nodeType":"YulAssignment","src":"29889:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29900:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"29905:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29896:3:25"},"nodeType":"YulFunctionCall","src":"29896:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29889:3:25"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29682:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29690:3:25","type":""}],"src":"29548:366:25"},{"body":{"nodeType":"YulBlock","src":"30091:248:25","statements":[{"nodeType":"YulAssignment","src":"30101:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30113:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"30124:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30109:3:25"},"nodeType":"YulFunctionCall","src":"30109:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30101:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30148:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"30159:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30144:3:25"},"nodeType":"YulFunctionCall","src":"30144:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30167:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"30173:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30163:3:25"},"nodeType":"YulFunctionCall","src":"30163:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30137:6:25"},"nodeType":"YulFunctionCall","src":"30137:47:25"},"nodeType":"YulExpressionStatement","src":"30137:47:25"},{"nodeType":"YulAssignment","src":"30193:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30327:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30201:124:25"},"nodeType":"YulFunctionCall","src":"30201:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30193:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30071:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30086:4:25","type":""}],"src":"29920:419:25"},{"body":{"nodeType":"YulBlock","src":"30451:69:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30473:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"30481:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30469:3:25"},"nodeType":"YulFunctionCall","src":"30469:14:25"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"30485:27:25","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30462:6:25"},"nodeType":"YulFunctionCall","src":"30462:51:25"},"nodeType":"YulExpressionStatement","src":"30462:51:25"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30443:6:25","type":""}],"src":"30345:175:25"},{"body":{"nodeType":"YulBlock","src":"30672:220:25","statements":[{"nodeType":"YulAssignment","src":"30682:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30748:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"30753:2:25","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30689:58:25"},"nodeType":"YulFunctionCall","src":"30689:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30682:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30854:3:25"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"30765:88:25"},"nodeType":"YulFunctionCall","src":"30765:93:25"},"nodeType":"YulExpressionStatement","src":"30765:93:25"},{"nodeType":"YulAssignment","src":"30867:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30878:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"30883:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30874:3:25"},"nodeType":"YulFunctionCall","src":"30874:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30867:3:25"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30660:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30668:3:25","type":""}],"src":"30526:366:25"},{"body":{"nodeType":"YulBlock","src":"31069:248:25","statements":[{"nodeType":"YulAssignment","src":"31079:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31091:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"31102:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31087:3:25"},"nodeType":"YulFunctionCall","src":"31087:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31079:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31126:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"31137:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31122:3:25"},"nodeType":"YulFunctionCall","src":"31122:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31145:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"31151:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31141:3:25"},"nodeType":"YulFunctionCall","src":"31141:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31115:6:25"},"nodeType":"YulFunctionCall","src":"31115:47:25"},"nodeType":"YulExpressionStatement","src":"31115:47:25"},{"nodeType":"YulAssignment","src":"31171:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31305:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31179:124:25"},"nodeType":"YulFunctionCall","src":"31179:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31171:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31049:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31064:4:25","type":""}],"src":"30898:419:25"},{"body":{"nodeType":"YulBlock","src":"31429:131:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31451:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"31459:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31447:3:25"},"nodeType":"YulFunctionCall","src":"31447:14:25"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"31463:34:25","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31440:6:25"},"nodeType":"YulFunctionCall","src":"31440:58:25"},"nodeType":"YulExpressionStatement","src":"31440:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31519:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"31527:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31515:3:25"},"nodeType":"YulFunctionCall","src":"31515:15:25"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"31532:20:25","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31508:6:25"},"nodeType":"YulFunctionCall","src":"31508:45:25"},"nodeType":"YulExpressionStatement","src":"31508:45:25"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31421:6:25","type":""}],"src":"31323:237:25"},{"body":{"nodeType":"YulBlock","src":"31712:220:25","statements":[{"nodeType":"YulAssignment","src":"31722:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31788:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"31793:2:25","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31729:58:25"},"nodeType":"YulFunctionCall","src":"31729:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31722:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31894:3:25"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"31805:88:25"},"nodeType":"YulFunctionCall","src":"31805:93:25"},"nodeType":"YulExpressionStatement","src":"31805:93:25"},{"nodeType":"YulAssignment","src":"31907:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31918:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"31923:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31914:3:25"},"nodeType":"YulFunctionCall","src":"31914:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31907:3:25"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31700:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31708:3:25","type":""}],"src":"31566:366:25"},{"body":{"nodeType":"YulBlock","src":"32109:248:25","statements":[{"nodeType":"YulAssignment","src":"32119:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32131:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"32142:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32127:3:25"},"nodeType":"YulFunctionCall","src":"32127:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32119:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32166:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"32177:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32162:3:25"},"nodeType":"YulFunctionCall","src":"32162:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32185:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"32191:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32181:3:25"},"nodeType":"YulFunctionCall","src":"32181:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32155:6:25"},"nodeType":"YulFunctionCall","src":"32155:47:25"},"nodeType":"YulExpressionStatement","src":"32155:47:25"},{"nodeType":"YulAssignment","src":"32211:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32345:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32219:124:25"},"nodeType":"YulFunctionCall","src":"32219:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32211:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32089:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32104:4:25","type":""}],"src":"31938:419:25"},{"body":{"nodeType":"YulBlock","src":"32408:146:25","statements":[{"nodeType":"YulAssignment","src":"32418:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32441:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32423:17:25"},"nodeType":"YulFunctionCall","src":"32423:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"32418:1:25"}]},{"nodeType":"YulAssignment","src":"32452:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"32475:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32457:17:25"},"nodeType":"YulFunctionCall","src":"32457:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"32452:1:25"}]},{"body":{"nodeType":"YulBlock","src":"32499:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"32501:16:25"},"nodeType":"YulFunctionCall","src":"32501:18:25"},"nodeType":"YulExpressionStatement","src":"32501:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32493:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"32496:1:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"32490:2:25"},"nodeType":"YulFunctionCall","src":"32490:8:25"},"nodeType":"YulIf","src":"32487:34:25"},{"nodeType":"YulAssignment","src":"32531:17:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32543:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"32546:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32539:3:25"},"nodeType":"YulFunctionCall","src":"32539:9:25"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"32531:4:25"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"32394:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"32397:1:25","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"32403:4:25","type":""}],"src":"32363:191:25"},{"body":{"nodeType":"YulBlock","src":"32618:40:25","statements":[{"nodeType":"YulAssignment","src":"32629:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32645:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32639:5:25"},"nodeType":"YulFunctionCall","src":"32639:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"32629:6:25"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32601:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"32611:6:25","type":""}],"src":"32560:98:25"},{"body":{"nodeType":"YulBlock","src":"32759:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32776:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"32781:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32769:6:25"},"nodeType":"YulFunctionCall","src":"32769:19:25"},"nodeType":"YulExpressionStatement","src":"32769:19:25"},{"nodeType":"YulAssignment","src":"32797:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32816:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"32821:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32812:3:25"},"nodeType":"YulFunctionCall","src":"32812:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"32797:11:25"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32731:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"32736:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"32747:11:25","type":""}],"src":"32664:168:25"},{"body":{"nodeType":"YulBlock","src":"32928:270:25","statements":[{"nodeType":"YulVariableDeclaration","src":"32938:52:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32984:5:25"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"32952:31:25"},"nodeType":"YulFunctionCall","src":"32952:38:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"32942:6:25","type":""}]},{"nodeType":"YulAssignment","src":"32999:77:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33064:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"33069:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33006:57:25"},"nodeType":"YulFunctionCall","src":"33006:70:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32999:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33111:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"33118:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33107:3:25"},"nodeType":"YulFunctionCall","src":"33107:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"33125:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"33130:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"33085:21:25"},"nodeType":"YulFunctionCall","src":"33085:52:25"},"nodeType":"YulExpressionStatement","src":"33085:52:25"},{"nodeType":"YulAssignment","src":"33146:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33157:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"33184:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"33162:21:25"},"nodeType":"YulFunctionCall","src":"33162:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33153:3:25"},"nodeType":"YulFunctionCall","src":"33153:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33146:3:25"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32909:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"32916:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32924:3:25","type":""}],"src":"32838:360:25"},{"body":{"nodeType":"YulBlock","src":"33404:440:25","statements":[{"nodeType":"YulAssignment","src":"33414:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33426:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"33437:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33422:3:25"},"nodeType":"YulFunctionCall","src":"33422:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33414:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33495:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33508:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"33519:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33504:3:25"},"nodeType":"YulFunctionCall","src":"33504:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33451:43:25"},"nodeType":"YulFunctionCall","src":"33451:71:25"},"nodeType":"YulExpressionStatement","src":"33451:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33576:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33589:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"33600:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33585:3:25"},"nodeType":"YulFunctionCall","src":"33585:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33532:43:25"},"nodeType":"YulFunctionCall","src":"33532:72:25"},"nodeType":"YulExpressionStatement","src":"33532:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"33658:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33671:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"33682:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33667:3:25"},"nodeType":"YulFunctionCall","src":"33667:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33614:43:25"},"nodeType":"YulFunctionCall","src":"33614:72:25"},"nodeType":"YulExpressionStatement","src":"33614:72:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33707:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"33718:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33703:3:25"},"nodeType":"YulFunctionCall","src":"33703:18:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33727:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"33733:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33723:3:25"},"nodeType":"YulFunctionCall","src":"33723:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33696:6:25"},"nodeType":"YulFunctionCall","src":"33696:48:25"},"nodeType":"YulExpressionStatement","src":"33696:48:25"},{"nodeType":"YulAssignment","src":"33753:84:25","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"33823:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"33832:4:25"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33761:61:25"},"nodeType":"YulFunctionCall","src":"33761:76:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33753:4:25"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33352:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"33364:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33372:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33380:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33388:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33399:4:25","type":""}],"src":"33204:640:25"},{"body":{"nodeType":"YulBlock","src":"33912:79:25","statements":[{"nodeType":"YulAssignment","src":"33922:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"33937:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33931:5:25"},"nodeType":"YulFunctionCall","src":"33931:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"33922:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33979:5:25"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"33953:25:25"},"nodeType":"YulFunctionCall","src":"33953:32:25"},"nodeType":"YulExpressionStatement","src":"33953:32:25"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"33890:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"33898:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"33906:5:25","type":""}],"src":"33850:141:25"},{"body":{"nodeType":"YulBlock","src":"34073:273:25","statements":[{"body":{"nodeType":"YulBlock","src":"34119:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"34121:77:25"},"nodeType":"YulFunctionCall","src":"34121:79:25"},"nodeType":"YulExpressionStatement","src":"34121:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"34094:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"34103:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34090:3:25"},"nodeType":"YulFunctionCall","src":"34090:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"34115:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"34086:3:25"},"nodeType":"YulFunctionCall","src":"34086:32:25"},"nodeType":"YulIf","src":"34083:119:25"},{"nodeType":"YulBlock","src":"34212:127:25","statements":[{"nodeType":"YulVariableDeclaration","src":"34227:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"34241:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"34231:6:25","type":""}]},{"nodeType":"YulAssignment","src":"34256:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34301:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"34312:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34297:3:25"},"nodeType":"YulFunctionCall","src":"34297:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"34321:7:25"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"34266:30:25"},"nodeType":"YulFunctionCall","src":"34266:63:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"34256:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34043:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"34054:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"34066:6:25","type":""}],"src":"33997:349:25"},{"body":{"nodeType":"YulBlock","src":"34458:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34480:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"34488:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34476:3:25"},"nodeType":"YulFunctionCall","src":"34476:14:25"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"34492:34:25","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34469:6:25"},"nodeType":"YulFunctionCall","src":"34469:58:25"},"nodeType":"YulExpressionStatement","src":"34469:58:25"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34450:6:25","type":""}],"src":"34352:182:25"},{"body":{"nodeType":"YulBlock","src":"34686:220:25","statements":[{"nodeType":"YulAssignment","src":"34696:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34762:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"34767:2:25","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34703:58:25"},"nodeType":"YulFunctionCall","src":"34703:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34696:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34868:3:25"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"34779:88:25"},"nodeType":"YulFunctionCall","src":"34779:93:25"},"nodeType":"YulExpressionStatement","src":"34779:93:25"},{"nodeType":"YulAssignment","src":"34881:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34892:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"34897:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34888:3:25"},"nodeType":"YulFunctionCall","src":"34888:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34881:3:25"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34674:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34682:3:25","type":""}],"src":"34540:366:25"},{"body":{"nodeType":"YulBlock","src":"35083:248:25","statements":[{"nodeType":"YulAssignment","src":"35093:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35105:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"35116:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35101:3:25"},"nodeType":"YulFunctionCall","src":"35101:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35093:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35140:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"35151:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35136:3:25"},"nodeType":"YulFunctionCall","src":"35136:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35159:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"35165:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35155:3:25"},"nodeType":"YulFunctionCall","src":"35155:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35129:6:25"},"nodeType":"YulFunctionCall","src":"35129:47:25"},"nodeType":"YulExpressionStatement","src":"35129:47:25"},{"nodeType":"YulAssignment","src":"35185:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35319:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35193:124:25"},"nodeType":"YulFunctionCall","src":"35193:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35185:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35063:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35078:4:25","type":""}],"src":"34912:419:25"},{"body":{"nodeType":"YulBlock","src":"35443:72:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35465:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"35473:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35461:3:25"},"nodeType":"YulFunctionCall","src":"35461:14:25"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"35477:30:25","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35454:6:25"},"nodeType":"YulFunctionCall","src":"35454:54:25"},"nodeType":"YulExpressionStatement","src":"35454:54:25"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35435:6:25","type":""}],"src":"35337:178:25"},{"body":{"nodeType":"YulBlock","src":"35667:220:25","statements":[{"nodeType":"YulAssignment","src":"35677:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35743:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"35748:2:25","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35684:58:25"},"nodeType":"YulFunctionCall","src":"35684:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35677:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35849:3:25"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"35760:88:25"},"nodeType":"YulFunctionCall","src":"35760:93:25"},"nodeType":"YulExpressionStatement","src":"35760:93:25"},{"nodeType":"YulAssignment","src":"35862:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35873:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"35878:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35869:3:25"},"nodeType":"YulFunctionCall","src":"35869:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35862:3:25"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35655:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35663:3:25","type":""}],"src":"35521:366:25"},{"body":{"nodeType":"YulBlock","src":"36064:248:25","statements":[{"nodeType":"YulAssignment","src":"36074:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36086:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"36097:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36082:3:25"},"nodeType":"YulFunctionCall","src":"36082:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36074:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36121:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"36132:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36117:3:25"},"nodeType":"YulFunctionCall","src":"36117:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36140:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"36146:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36136:3:25"},"nodeType":"YulFunctionCall","src":"36136:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36110:6:25"},"nodeType":"YulFunctionCall","src":"36110:47:25"},"nodeType":"YulExpressionStatement","src":"36110:47:25"},{"nodeType":"YulAssignment","src":"36166:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36300:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36174:124:25"},"nodeType":"YulFunctionCall","src":"36174:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36166:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36044:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36059:4:25","type":""}],"src":"35893:419:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30(memPtr) {\n\n        mstore(add(memPtr, 0), \"URI Query for nonexistent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832(memPtr) {\n\n        mstore(add(memPtr, 0), 0x7b226e616d65223a220000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n        store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832(pos)\n        end := add(pos, 9)\n    }\n\n    function store_literal_in_memory_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574(memPtr) {\n\n        mstore(add(memPtr, 0), 0x222c20226465736372697074696f6e223a22416e204e46542074686174206368)\n\n        mstore(add(memPtr, 32), \"anges based on the Chainlink Fee\")\n\n        mstore(add(memPtr, 64), 0x64222c2000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 68)\n        store_literal_in_memory_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574(pos)\n        end := add(pos, 68)\n    }\n\n    function store_literal_in_memory_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b(memPtr) {\n\n        mstore(add(memPtr, 0), 0x2261747472696275746573223a205b7b2274726169745f74797065223a202263)\n\n        mstore(add(memPtr, 32), 0x6f6f6c6e657373222c202276616c7565223a203130307d5d2c2022696d616765)\n\n        mstore(add(memPtr, 64), 0x223a220000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 67)\n        store_literal_in_memory_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b(pos)\n        end := add(pos, 67)\n    }\n\n    function store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475(memPtr) {\n\n        mstore(add(memPtr, 0), 0x227d000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475(pos)\n        end := add(pos, 2)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"4029":[{"length":32,"start":3077}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101215760003560e01c806367e5366c116100ad578063a22cb46511610071578063a22cb4651461031c578063b88d4fde14610338578063c87b56dd14610354578063e425aded14610384578063e985e9c5146103b457610121565b806367e5366c146102745780636e02007d1461029257806370a08231146102b05780638fb7e271146102e057806395d89b41146102fe57610121565b80631e930812116100f45780631e930812146101c057806323b872dd146101dc57806330d871c6146101f857806342842e0e146102285780636352211e1461024457610121565b806301ffc9a71461012657806306fdde0314610156578063081812fc14610174578063095ea7b3146101a4575b600080fd5b610140600480360381019061013b9190611dd7565b6103e4565b60405161014d9190611e1f565b60405180910390f35b61015e6104c6565b60405161016b9190611ed3565b60405180910390f35b61018e60048036038101906101899190611f2b565b610558565b60405161019b9190611f99565b60405180910390f35b6101be60048036038101906101b99190611fe0565b61059e565b005b6101da60048036038101906101d59190612056565b6106b6565b005b6101f660048036038101906101f19190612083565b610733565b005b610212600480360381019061020d919061220b565b610793565b60405161021f9190611ed3565b60405180910390f35b610242600480360381019061023d9190612083565b610820565b005b61025e60048036038101906102599190611f2b565b610840565b60405161026b9190611f99565b60405180910390f35b61027c6108c7565b6040516102899190611ed3565b60405180910390f35b61029a610959565b6040516102a79190612263565b60405180910390f35b6102ca60048036038101906102c5919061227e565b610963565b6040516102d79190612263565b60405180910390f35b6102e8610a1b565b6040516102f59190611ed3565b60405180910390f35b610306610aad565b6040516103139190611ed3565b60405180910390f35b610336600480360381019061033191906122d7565b610b3f565b005b610352600480360381019061034d91906123b8565b610b55565b005b61036e60048036038101906103699190611f2b565b610bb7565b60405161037b9190611ed3565b60405180910390f35b61039e60048036038101906103999190611f2b565b610e40565b6040516103ab919061244a565b60405180910390f35b6103ce60048036038101906103c99190612465565b610e58565b6040516103db9190611e1f565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104af57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104bf57506104be82611065565b5b9050919050565b6060600080546104d5906124d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610501906124d4565b801561054e5780601f106105235761010080835404028352916020019161054e565b820191906000526020600020905b81548152906001019060200180831161053157829003601f168201915b5050505050905090565b6000610563826110cf565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105a982610840565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561061a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061190612578565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661063961111a565b73ffffffffffffffffffffffffffffffffffffffff16148061066857506106678161066261111a565b610e58565b5b6106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069e9061260a565b60405180910390fd5b6106b18383611122565b505050565b80600960006006548152602001908152602001600020819055506106dc336006546111db565b6001600660008282546106ef9190612659565b925050819055506006547f882d3b5a729a8bb95cf6c0083c99b42ecd9637123d4425bd7b768877fd8af8b082604051610728919061244a565b60405180910390a250565b61074461073e61111a565b826111f9565b610783576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077a90612721565b60405180910390fd5b61078e83838361128e565b505050565b606060006107bf836040516020016107ab919061277d565b604051602081830303815290604052610eec565b90506040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000081525081604051602001610809929190612794565b604051602081830303815290604052915050919050565b61083b83838360405180602001604052806000815250610b55565b505050565b60008061084c83611588565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b590612804565b60405180910390fd5b80915050919050565b6060600880546108d6906124d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610902906124d4565b801561094f5780601f106109245761010080835404028352916020019161094f565b820191906000526020600020905b81548152906001019060200180831161093257829003601f168201915b5050505050905090565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cb90612896565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060078054610a2a906124d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610a56906124d4565b8015610aa35780601f10610a7857610100808354040283529160200191610aa3565b820191906000526020600020905b815481529060010190602001808311610a8657829003601f168201915b5050505050905090565b606060018054610abc906124d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae8906124d4565b8015610b355780601f10610b0a57610100808354040283529160200191610b35565b820191906000526020600020905b815481529060010190602001808311610b1857829003601f168201915b5050505050905090565b610b51610b4a61111a565b83836115c5565b5050565b610b66610b6061111a565b836111f9565b610ba5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9c90612721565b60405180910390fd5b610bb184848484611732565b50505050565b6060610bc28261178e565b610c01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf890612902565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610c6957600080fd5b505afa158015610c7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca1919061298e565b505050915050600060078054610cb6906124d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce2906124d4565b8015610d2f5780601f10610d0457610100808354040283529160200191610d2f565b820191906000526020600020905b815481529060010190602001808311610d1257829003601f168201915b5050505050905060096000858152602001908152602001600020548212610dde5760088054610d5d906124d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610d89906124d4565b8015610dd65780601f10610dab57610100808354040283529160200191610dd6565b820191906000526020600020905b815481529060010190602001808311610db957829003601f168201915b505050505090505b610de66117cf565b610e17610df16104c6565b83604051602001610e03929190612bd1565b604051602081830303815290604052610eec565b604051602001610e28929190612794565b60405160208183030381529060405292505050919050565b60096020528060005260406000206000915090505481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6060600082511415610f0f57604051806020016040528060008152509050611060565b60006040518060600160405280604081526020016130ed6040913990506000600360028551610f3e9190612659565b610f489190612c50565b6004610f549190612c81565b90506000602082610f659190612659565b67ffffffffffffffff811115610f7e57610f7d6120e0565b5b6040519080825280601f01601f191660200182016040528015610fb05781602001600182028036833780820191505090505b509050818152600183018586518101602084015b8183101561101f576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825360018201915050610fc4565b600389510660018114611039576002811461104957611054565b613d3d60f01b6002830352611054565b603d60f81b60018303525b50505050508093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6110d88161178e565b611117576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110e90612804565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661119583610840565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6111f582826040518060200160405280600081525061180c565b5050565b60008061120583610840565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061124757506112468185610e58565b5b8061128557508373ffffffffffffffffffffffffffffffffffffffff1661126d84610558565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166112ae82610840565b73ffffffffffffffffffffffffffffffffffffffff1614611304576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112fb90612d4d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136b90612ddf565b60405180910390fd5b6113818383836001611867565b8273ffffffffffffffffffffffffffffffffffffffff166113a182610840565b73ffffffffffffffffffffffffffffffffffffffff16146113f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ee90612d4d565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611583838383600161198d565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611634576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162b90612e4b565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516117259190611e1f565b60405180910390a3505050565b61173d84848461128e565b61174984848484611993565b611788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177f90612edd565b60405180910390fd5b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff166117b083611588565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60606040518060400160405280601d81526020017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815250905090565b6118168383611b2a565b6118236000848484611993565b611862576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185990612edd565b60405180910390fd5b505050565b600181111561198757600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146118fb5780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118f39190612efd565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146119865780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461197e9190612659565b925050819055505b5b50505050565b50505050565b60006119b48473ffffffffffffffffffffffffffffffffffffffff16611d48565b15611b1d578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026119dd61111a565b8786866040518563ffffffff1660e01b81526004016119ff9493929190612f86565b602060405180830381600087803b158015611a1957600080fd5b505af1925050508015611a4a57506040513d601f19601f82011682018060405250810190611a479190612fe7565b60015b611acd573d8060008114611a7a576040519150601f19603f3d011682016040523d82523d6000602084013e611a7f565b606091505b50600081511415611ac5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611abc90612edd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611b22565b600190505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9190613060565b60405180910390fd5b611ba38161178e565b15611be3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bda906130cc565b60405180910390fd5b611bf1600083836001611867565b611bfa8161178e565b15611c3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c31906130cc565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611d4460008383600161198d565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611db481611d7f565b8114611dbf57600080fd5b50565b600081359050611dd181611dab565b92915050565b600060208284031215611ded57611dec611d75565b5b6000611dfb84828501611dc2565b91505092915050565b60008115159050919050565b611e1981611e04565b82525050565b6000602082019050611e346000830184611e10565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e74578082015181840152602081019050611e59565b83811115611e83576000848401525b50505050565b6000601f19601f8301169050919050565b6000611ea582611e3a565b611eaf8185611e45565b9350611ebf818560208601611e56565b611ec881611e89565b840191505092915050565b60006020820190508181036000830152611eed8184611e9a565b905092915050565b6000819050919050565b611f0881611ef5565b8114611f1357600080fd5b50565b600081359050611f2581611eff565b92915050565b600060208284031215611f4157611f40611d75565b5b6000611f4f84828501611f16565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f8382611f58565b9050919050565b611f9381611f78565b82525050565b6000602082019050611fae6000830184611f8a565b92915050565b611fbd81611f78565b8114611fc857600080fd5b50565b600081359050611fda81611fb4565b92915050565b60008060408385031215611ff757611ff6611d75565b5b600061200585828601611fcb565b925050602061201685828601611f16565b9150509250929050565b6000819050919050565b61203381612020565b811461203e57600080fd5b50565b6000813590506120508161202a565b92915050565b60006020828403121561206c5761206b611d75565b5b600061207a84828501612041565b91505092915050565b60008060006060848603121561209c5761209b611d75565b5b60006120aa86828701611fcb565b93505060206120bb86828701611fcb565b92505060406120cc86828701611f16565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61211882611e89565b810181811067ffffffffffffffff82111715612137576121366120e0565b5b80604052505050565b600061214a611d6b565b9050612156828261210f565b919050565b600067ffffffffffffffff821115612176576121756120e0565b5b61217f82611e89565b9050602081019050919050565b82818337600083830152505050565b60006121ae6121a98461215b565b612140565b9050828152602081018484840111156121ca576121c96120db565b5b6121d584828561218c565b509392505050565b600082601f8301126121f2576121f16120d6565b5b813561220284826020860161219b565b91505092915050565b60006020828403121561222157612220611d75565b5b600082013567ffffffffffffffff81111561223f5761223e611d7a565b5b61224b848285016121dd565b91505092915050565b61225d81611ef5565b82525050565b60006020820190506122786000830184612254565b92915050565b60006020828403121561229457612293611d75565b5b60006122a284828501611fcb565b91505092915050565b6122b481611e04565b81146122bf57600080fd5b50565b6000813590506122d1816122ab565b92915050565b600080604083850312156122ee576122ed611d75565b5b60006122fc85828601611fcb565b925050602061230d858286016122c2565b9150509250929050565b600067ffffffffffffffff821115612332576123316120e0565b5b61233b82611e89565b9050602081019050919050565b600061235b61235684612317565b612140565b905082815260208101848484011115612377576123766120db565b5b61238284828561218c565b509392505050565b600082601f83011261239f5761239e6120d6565b5b81356123af848260208601612348565b91505092915050565b600080600080608085870312156123d2576123d1611d75565b5b60006123e087828801611fcb565b94505060206123f187828801611fcb565b935050604061240287828801611f16565b925050606085013567ffffffffffffffff81111561242357612422611d7a565b5b61242f8782880161238a565b91505092959194509250565b61244481612020565b82525050565b600060208201905061245f600083018461243b565b92915050565b6000806040838503121561247c5761247b611d75565b5b600061248a85828601611fcb565b925050602061249b85828601611fcb565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806124ec57607f821691505b60208210811415612500576124ff6124a5565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000612562602183611e45565b915061256d82612506565b604082019050919050565b6000602082019050818103600083015261259181612555565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b60006125f4603d83611e45565b91506125ff82612598565b604082019050919050565b60006020820190508181036000830152612623816125e7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061266482611ef5565b915061266f83611ef5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156126a4576126a361262a565b5b828201905092915050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b600061270b602d83611e45565b9150612716826126af565b604082019050919050565b6000602082019050818103600083015261273a816126fe565b9050919050565b600081905092915050565b600061275782611e3a565b6127618185612741565b9350612771818560208601611e56565b80840191505092915050565b6000612789828461274c565b915081905092915050565b60006127a0828561274c565b91506127ac828461274c565b91508190509392505050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b60006127ee601883611e45565b91506127f9826127b8565b602082019050919050565b6000602082019050818103600083015261281d816127e1565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000612880602983611e45565b915061288b82612824565b604082019050919050565b600060208201905081810360008301526128af81612873565b9050919050565b7f55524920517565727920666f72206e6f6e6578697374656e7420746f6b656e00600082015250565b60006128ec601f83611e45565b91506128f7826128b6565b602082019050919050565b6000602082019050818103600083015261291b816128df565b9050919050565b600069ffffffffffffffffffff82169050919050565b61294181612922565b811461294c57600080fd5b50565b60008151905061295e81612938565b92915050565b6000815190506129738161202a565b92915050565b60008151905061298881611eff565b92915050565b600080600080600060a086880312156129aa576129a9611d75565b5b60006129b88882890161294f565b95505060206129c988828901612964565b94505060406129da88828901612979565b93505060606129eb88828901612979565b92505060806129fc8882890161294f565b9150509295509295909350565b7f7b226e616d65223a220000000000000000000000000000000000000000000000600082015250565b6000612a3f600983612741565b9150612a4a82612a09565b600982019050919050565b7f222c20226465736372697074696f6e223a22416e204e4654207468617420636860008201527f616e676573206261736564206f6e2074686520436861696e6c696e6b2046656560208201527f64222c2000000000000000000000000000000000000000000000000000000000604082015250565b6000612ad7604483612741565b9150612ae282612a55565b604482019050919050565b7f2261747472696275746573223a205b7b2274726169745f74797065223a20226360008201527f6f6f6c6e657373222c202276616c7565223a203130307d5d2c2022696d61676560208201527f223a220000000000000000000000000000000000000000000000000000000000604082015250565b6000612b6f604383612741565b9150612b7a82612aed565b604382019050919050565b7f227d000000000000000000000000000000000000000000000000000000000000600082015250565b6000612bbb600283612741565b9150612bc682612b85565b600282019050919050565b6000612bdc82612a32565b9150612be8828561274c565b9150612bf382612aca565b9150612bfe82612b62565b9150612c0a828461274c565b9150612c1582612bae565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612c5b82611ef5565b9150612c6683611ef5565b925082612c7657612c75612c21565b5b828204905092915050565b6000612c8c82611ef5565b9150612c9783611ef5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612cd057612ccf61262a565b5b828202905092915050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000612d37602583611e45565b9150612d4282612cdb565b604082019050919050565b60006020820190508181036000830152612d6681612d2a565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612dc9602483611e45565b9150612dd482612d6d565b604082019050919050565b60006020820190508181036000830152612df881612dbc565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000612e35601983611e45565b9150612e4082612dff565b602082019050919050565b60006020820190508181036000830152612e6481612e28565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000612ec7603283611e45565b9150612ed282612e6b565b604082019050919050565b60006020820190508181036000830152612ef681612eba565b9050919050565b6000612f0882611ef5565b9150612f1383611ef5565b925082821015612f2657612f2561262a565b5b828203905092915050565b600081519050919050565b600082825260208201905092915050565b6000612f5882612f31565b612f628185612f3c565b9350612f72818560208601611e56565b612f7b81611e89565b840191505092915050565b6000608082019050612f9b6000830187611f8a565b612fa86020830186611f8a565b612fb56040830185612254565b8181036060830152612fc78184612f4d565b905095945050505050565b600081519050612fe181611dab565b92915050565b600060208284031215612ffd57612ffc611d75565b5b600061300b84828501612fd2565b91505092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b600061304a602083611e45565b915061305582613014565b602082019050919050565b600060208201905081810360008301526130798161303d565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b60006130b6601c83611e45565b91506130c182613080565b602082019050919050565b600060208201905081810360008301526130e5816130a9565b905091905056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212208f3c1b5c1cf104e913a270b74991d6f71018ac5f3b9dfa65229bcaeb355ce5f864736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67E5366C GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xE425ADED EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3B4 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x67E5366C EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x8FB7E271 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FE JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x1E930812 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x1E930812 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x30D871C6 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x244 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1DD7 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1E1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1F99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x793 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x1F99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0x959 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x2263 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x227E JUMP JUMPDEST PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x2263 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x22D7 JUMP JUMPDEST PUSH2 0xB3F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x23B8 JUMP JUMPDEST PUSH2 0xB55 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0xE40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x244A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x2465 JUMP JUMPDEST PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x1E1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4AF JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4BF JUMPI POP PUSH2 0x4BE DUP3 PUSH2 0x1065 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4D5 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x501 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x54E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x523 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x531 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x563 DUP3 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A9 DUP3 PUSH2 0x840 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x611 SWAP1 PUSH2 0x2578 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x639 PUSH2 0x111A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x668 JUMPI POP PUSH2 0x667 DUP2 PUSH2 0x662 PUSH2 0x111A JUMP JUMPDEST PUSH2 0xE58 JUMP JUMPDEST JUMPDEST PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B1 DUP4 DUP4 PUSH2 0x1122 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x6DC CALLER PUSH1 0x6 SLOAD PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x2659 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH32 0x882D3B5A729A8BB95CF6C0083C99B42ECD9637123D4425BD7B768877FD8AF8B0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x244A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x744 PUSH2 0x73E PUSH2 0x111A JUMP JUMPDEST DUP3 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x783 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77A SWAP1 PUSH2 0x2721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78E DUP4 DUP4 DUP4 PUSH2 0x128E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x7BF DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0x277D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xEEC JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x809 SWAP3 SWAP2 SWAP1 PUSH2 0x2794 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x83B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB55 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x84C DUP4 PUSH2 0x1588 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B5 SWAP1 PUSH2 0x2804 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x8D6 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x902 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x94F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x924 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x94F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x932 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CB SWAP1 PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0xA2A SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA56 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA78 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA86 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xABC SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAE8 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB35 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB0A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB35 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB18 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB51 PUSH2 0xB4A PUSH2 0x111A JUMP JUMPDEST DUP4 DUP4 PUSH2 0x15C5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB66 PUSH2 0xB60 PUSH2 0x111A JUMP JUMPDEST DUP4 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0xBA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9C SWAP1 PUSH2 0x2721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1732 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBC2 DUP3 PUSH2 0x178E JUMP JUMPDEST PUSH2 0xC01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF8 SWAP1 PUSH2 0x2902 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD PUSH2 0xCB6 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCE2 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD2F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD04 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD2F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD12 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 SLT PUSH2 0xDDE JUMPI PUSH1 0x8 DUP1 SLOAD PUSH2 0xD5D SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD89 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDD6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDAB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDD6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDB9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST PUSH2 0xDE6 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0xE17 PUSH2 0xDF1 PUSH2 0x4C6 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE03 SWAP3 SWAP2 SWAP1 PUSH2 0x2BD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE28 SWAP3 SWAP2 SWAP1 PUSH2 0x2794 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0xF0F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x30ED PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x2659 JUMP JUMPDEST PUSH2 0xF48 SWAP2 SWAP1 PUSH2 0x2C50 JUMP JUMPDEST PUSH1 0x4 PUSH2 0xF54 SWAP2 SWAP1 PUSH2 0x2C81 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP3 PUSH2 0xF65 SWAP2 SWAP1 PUSH2 0x2659 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF7E JUMPI PUSH2 0xF7D PUSH2 0x20E0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFB0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x101F JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP DUP3 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP POP PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x1039 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1049 JUMPI PUSH2 0x1054 JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x2 DUP4 SUB MSTORE PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x1 DUP4 SUB MSTORE JUMPDEST POP POP POP POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D8 DUP2 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x1117 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110E SWAP1 PUSH2 0x2804 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1195 DUP4 PUSH2 0x840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x11F5 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x180C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1205 DUP4 PUSH2 0x840 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1247 JUMPI POP PUSH2 0x1246 DUP2 DUP6 PUSH2 0xE58 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1285 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x126D DUP5 PUSH2 0x558 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12AE DUP3 PUSH2 0x840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1304 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FB SWAP1 PUSH2 0x2D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1374 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136B SWAP1 PUSH2 0x2DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1381 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1867 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13A1 DUP3 PUSH2 0x840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13EE SWAP1 PUSH2 0x2D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1583 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x198D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1634 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162B SWAP1 PUSH2 0x2E4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1725 SWAP2 SWAP1 PUSH2 0x1E1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x173D DUP5 DUP5 DUP5 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x1749 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1993 JUMP JUMPDEST PUSH2 0x1788 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177F SWAP1 PUSH2 0x2EDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17B0 DUP4 PUSH2 0x1588 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1816 DUP4 DUP4 PUSH2 0x1B2A JUMP JUMPDEST PUSH2 0x1823 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1993 JUMP JUMPDEST PUSH2 0x1862 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1859 SWAP1 PUSH2 0x2EDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1987 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18FB JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x18F3 SWAP2 SWAP1 PUSH2 0x2EFD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1986 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x197E SWAP2 SWAP1 PUSH2 0x2659 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D48 JUMP JUMPDEST ISZERO PUSH2 0x1B1D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x19DD PUSH2 0x111A JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19FF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F86 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1A4A JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A47 SWAP2 SWAP1 PUSH2 0x2FE7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1ACD JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A7A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A7F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1AC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ABC SWAP1 PUSH2 0x2EDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1B22 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B91 SWAP1 PUSH2 0x3060 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA3 DUP2 PUSH2 0x178E JUMP JUMPDEST ISZERO PUSH2 0x1BE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BDA SWAP1 PUSH2 0x30CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BF1 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1867 JUMP JUMPDEST PUSH2 0x1BFA DUP2 PUSH2 0x178E JUMP JUMPDEST ISZERO PUSH2 0x1C3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C31 SWAP1 PUSH2 0x30CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1D44 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x198D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB4 DUP2 PUSH2 0x1D7F JUMP JUMPDEST DUP2 EQ PUSH2 0x1DBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DD1 DUP2 PUSH2 0x1DAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DED JUMPI PUSH2 0x1DEC PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DFB DUP5 DUP3 DUP6 ADD PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E19 DUP2 PUSH2 0x1E04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E34 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E74 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E59 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E83 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA5 DUP3 PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x1EAF DUP2 DUP6 PUSH2 0x1E45 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EBF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E56 JUMP JUMPDEST PUSH2 0x1EC8 DUP2 PUSH2 0x1E89 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EED DUP2 DUP5 PUSH2 0x1E9A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F08 DUP2 PUSH2 0x1EF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F25 DUP2 PUSH2 0x1EFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F41 JUMPI PUSH2 0x1F40 PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F4F DUP5 DUP3 DUP6 ADD PUSH2 0x1F16 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F83 DUP3 PUSH2 0x1F58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F93 DUP2 PUSH2 0x1F78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FBD DUP2 PUSH2 0x1F78 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FDA DUP2 PUSH2 0x1FB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FF7 JUMPI PUSH2 0x1FF6 PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2005 DUP6 DUP3 DUP7 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2016 DUP6 DUP3 DUP7 ADD PUSH2 0x1F16 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2033 DUP2 PUSH2 0x2020 JUMP JUMPDEST DUP2 EQ PUSH2 0x203E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2050 DUP2 PUSH2 0x202A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x206C JUMPI PUSH2 0x206B PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x207A DUP5 DUP3 DUP6 ADD PUSH2 0x2041 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x209C JUMPI PUSH2 0x209B PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20AA DUP7 DUP3 DUP8 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x20BB DUP7 DUP3 DUP8 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20CC DUP7 DUP3 DUP8 ADD PUSH2 0x1F16 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2118 DUP3 PUSH2 0x1E89 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2137 JUMPI PUSH2 0x2136 PUSH2 0x20E0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214A PUSH2 0x1D6B JUMP JUMPDEST SWAP1 POP PUSH2 0x2156 DUP3 DUP3 PUSH2 0x210F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2176 JUMPI PUSH2 0x2175 PUSH2 0x20E0 JUMP JUMPDEST JUMPDEST PUSH2 0x217F DUP3 PUSH2 0x1E89 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21AE PUSH2 0x21A9 DUP5 PUSH2 0x215B JUMP JUMPDEST PUSH2 0x2140 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21CA JUMPI PUSH2 0x21C9 PUSH2 0x20DB JUMP JUMPDEST JUMPDEST PUSH2 0x21D5 DUP5 DUP3 DUP6 PUSH2 0x218C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21F2 JUMPI PUSH2 0x21F1 PUSH2 0x20D6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2202 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x219B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2221 JUMPI PUSH2 0x2220 PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x223F JUMPI PUSH2 0x223E PUSH2 0x1D7A JUMP JUMPDEST JUMPDEST PUSH2 0x224B DUP5 DUP3 DUP6 ADD PUSH2 0x21DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x225D DUP2 PUSH2 0x1EF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2278 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2254 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2294 JUMPI PUSH2 0x2293 PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22A2 DUP5 DUP3 DUP6 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22B4 DUP2 PUSH2 0x1E04 JUMP JUMPDEST DUP2 EQ PUSH2 0x22BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22D1 DUP2 PUSH2 0x22AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22EE JUMPI PUSH2 0x22ED PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22FC DUP6 DUP3 DUP7 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x230D DUP6 DUP3 DUP7 ADD PUSH2 0x22C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2332 JUMPI PUSH2 0x2331 PUSH2 0x20E0 JUMP JUMPDEST JUMPDEST PUSH2 0x233B DUP3 PUSH2 0x1E89 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235B PUSH2 0x2356 DUP5 PUSH2 0x2317 JUMP JUMPDEST PUSH2 0x2140 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2377 JUMPI PUSH2 0x2376 PUSH2 0x20DB JUMP JUMPDEST JUMPDEST PUSH2 0x2382 DUP5 DUP3 DUP6 PUSH2 0x218C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x239F JUMPI PUSH2 0x239E PUSH2 0x20D6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23AF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2348 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x23D2 JUMPI PUSH2 0x23D1 PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23E0 DUP8 DUP3 DUP9 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x23F1 DUP8 DUP3 DUP9 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2402 DUP8 DUP3 DUP9 ADD PUSH2 0x1F16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2423 JUMPI PUSH2 0x2422 PUSH2 0x1D7A JUMP JUMPDEST JUMPDEST PUSH2 0x242F DUP8 DUP3 DUP9 ADD PUSH2 0x238A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x2444 DUP2 PUSH2 0x2020 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x245F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x243B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x247C JUMPI PUSH2 0x247B PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x248A DUP6 DUP3 DUP7 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x249B DUP6 DUP3 DUP7 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24EC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2500 JUMPI PUSH2 0x24FF PUSH2 0x24A5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2562 PUSH1 0x21 DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x256D DUP3 PUSH2 0x2506 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2591 DUP2 PUSH2 0x2555 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25F4 PUSH1 0x3D DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x25FF DUP3 PUSH2 0x2598 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2623 DUP2 PUSH2 0x25E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2664 DUP3 PUSH2 0x1EF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x266F DUP4 PUSH2 0x1EF5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x26A4 JUMPI PUSH2 0x26A3 PUSH2 0x262A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x270B PUSH1 0x2D DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x2716 DUP3 PUSH2 0x26AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x273A DUP2 PUSH2 0x26FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2757 DUP3 PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x2761 DUP2 DUP6 PUSH2 0x2741 JUMP JUMPDEST SWAP4 POP PUSH2 0x2771 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E56 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2789 DUP3 DUP5 PUSH2 0x274C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27A0 DUP3 DUP6 PUSH2 0x274C JUMP JUMPDEST SWAP2 POP PUSH2 0x27AC DUP3 DUP5 PUSH2 0x274C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27EE PUSH1 0x18 DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x27F9 DUP3 PUSH2 0x27B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x281D DUP2 PUSH2 0x27E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2880 PUSH1 0x29 DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x288B DUP3 PUSH2 0x2824 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28AF DUP2 PUSH2 0x2873 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x55524920517565727920666F72206E6F6E6578697374656E7420746F6B656E00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28EC PUSH1 0x1F DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x28F7 DUP3 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x291B DUP2 PUSH2 0x28DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2941 DUP2 PUSH2 0x2922 JUMP JUMPDEST DUP2 EQ PUSH2 0x294C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x295E DUP2 PUSH2 0x2938 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2973 DUP2 PUSH2 0x202A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2988 DUP2 PUSH2 0x1EFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x29AA JUMPI PUSH2 0x29A9 PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29B8 DUP9 DUP3 DUP10 ADD PUSH2 0x294F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x29C9 DUP9 DUP3 DUP10 ADD PUSH2 0x2964 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x29DA DUP9 DUP3 DUP10 ADD PUSH2 0x2979 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x29EB DUP9 DUP3 DUP10 ADD PUSH2 0x2979 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x29FC DUP9 DUP3 DUP10 ADD PUSH2 0x294F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x7B226E616D65223A220000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3F PUSH1 0x9 DUP4 PUSH2 0x2741 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A4A DUP3 PUSH2 0x2A09 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x222C20226465736372697074696F6E223A22416E204E46542074686174206368 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E676573206261736564206F6E2074686520436861696E6C696E6B20466565 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x64222C2000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD7 PUSH1 0x44 DUP4 PUSH2 0x2741 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AE2 DUP3 PUSH2 0x2A55 JUMP JUMPDEST PUSH1 0x44 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A205B7B2274726169745F74797065223A202263 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6F6C6E657373222C202276616C7565223A203130307D5D2C2022696D616765 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x223A220000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6F PUSH1 0x43 DUP4 PUSH2 0x2741 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B7A DUP3 PUSH2 0x2AED JUMP JUMPDEST PUSH1 0x43 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x227D000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BBB PUSH1 0x2 DUP4 PUSH2 0x2741 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BC6 DUP3 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BDC DUP3 PUSH2 0x2A32 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BE8 DUP3 DUP6 PUSH2 0x274C JUMP JUMPDEST SWAP2 POP PUSH2 0x2BF3 DUP3 PUSH2 0x2ACA JUMP JUMPDEST SWAP2 POP PUSH2 0x2BFE DUP3 PUSH2 0x2B62 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C0A DUP3 DUP5 PUSH2 0x274C JUMP JUMPDEST SWAP2 POP PUSH2 0x2C15 DUP3 PUSH2 0x2BAE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C5B DUP3 PUSH2 0x1EF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C66 DUP4 PUSH2 0x1EF5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2C76 JUMPI PUSH2 0x2C75 PUSH2 0x2C21 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8C DUP3 PUSH2 0x1EF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C97 DUP4 PUSH2 0x1EF5 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2CD0 JUMPI PUSH2 0x2CCF PUSH2 0x262A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D37 PUSH1 0x25 DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D42 DUP3 PUSH2 0x2CDB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D66 DUP2 PUSH2 0x2D2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC9 PUSH1 0x24 DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DD4 DUP3 PUSH2 0x2D6D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DF8 DUP2 PUSH2 0x2DBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E35 PUSH1 0x19 DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E40 DUP3 PUSH2 0x2DFF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E64 DUP2 PUSH2 0x2E28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EC7 PUSH1 0x32 DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ED2 DUP3 PUSH2 0x2E6B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EF6 DUP2 PUSH2 0x2EBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F08 DUP3 PUSH2 0x1EF5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F13 DUP4 PUSH2 0x1EF5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2F26 JUMPI PUSH2 0x2F25 PUSH2 0x262A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F58 DUP3 PUSH2 0x2F31 JUMP JUMPDEST PUSH2 0x2F62 DUP2 DUP6 PUSH2 0x2F3C JUMP JUMPDEST SWAP4 POP PUSH2 0x2F72 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E56 JUMP JUMPDEST PUSH2 0x2F7B DUP2 PUSH2 0x1E89 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2F9B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1F8A JUMP JUMPDEST PUSH2 0x2FA8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1F8A JUMP JUMPDEST PUSH2 0x2FB5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2254 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2FC7 DUP2 DUP5 PUSH2 0x2F4D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2FE1 DUP2 PUSH2 0x1DAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FFD JUMPI PUSH2 0x2FFC PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x300B DUP5 DUP3 DUP6 ADD PUSH2 0x2FD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x304A PUSH1 0x20 DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x3055 DUP3 PUSH2 0x3014 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3079 DUP2 PUSH2 0x303D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30B6 PUSH1 0x1C DUP4 PUSH2 0x1E45 JUMP JUMPDEST SWAP2 POP PUSH2 0x30C1 DUP3 PUSH2 0x3080 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30E5 DUP2 PUSH2 0x30A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 DUP16 EXTCODECOPY SHL 0x5C SHR CALL DIV 0xE9 SGT LOG2 PUSH17 0xB74991D6F71018AC5F3B9DFA65229BCAEB CALLDATALOAD 0x5C 0xE5 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"227:3627:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1333:331:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1066:261:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5004:179:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3747:100:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3545:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3644:98:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1964:1574:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;624:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;1333:331:22:-;1423:9;1385:20;:36;1406:14;;1385:36;;;;;;;;;;;:47;;;;1442:37;1452:10;1464:14;;1442:9;:37::i;:::-;1506:1;1489:14;;:18;;;;;;;:::i;:::-;;;;;;;;1632:14;;1621:36;1647:9;1621:36;;;;;;:::i;:::-;;;;;;;;1333:331;:::o;4612:326:9:-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;1066:261:22:-;1129:13;1153:30;1186:51;1230:3;1213:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;1186:13;:51::i;:::-;1153:84;;1278:22;;;;;;;;;;;;;;;;;1301:16;1261:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1247:72;;;1066:261;;;:::o;5004:179:9:-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;3747:100:22:-;3795:13;3826:14;3819:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3747:100;:::o;3545:94::-;3593:7;3618:14;;3611:21;;3545:94;:::o;1929:204:9:-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;3644:98:22:-;3691:13;3722;3715:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3644:98;:::o;2633:102:9:-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;1964:1574:22:-;2036:13;2069:16;2077:7;2069;:16::i;:::-;2061:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2270:12;2289:11;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2268:50;;;;;;2328:22;2353:13;2328:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2389:20;:29;2410:7;2389:29;;;;;;;;;;;;2380:5;:38;2376:93;;2444:14;2433:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2376:93;2920:10;:8;:10::i;:::-;2948:558;3113:6;:4;:6::i;:::-;3394:8;3018:448;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2948:13;:558::i;:::-;2886:634;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2851:679;;;;1964:1574;;;:::o;624:54::-;;;;;;;;;;;;;;;;;:::o;4388:162:9:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;777:1861:20:-;835:13;879:1;864:4;:11;:16;860:31;;;882:9;;;;;;;;;;;;;;;;860:31;940:19;962:12;;;;;;;;;;;;;;;;;940:34;;1023:18;1069:1;1064;1050:4;:11;:15;;;;:::i;:::-;1049:21;;;;:::i;:::-;1044:1;:27;;;;:::i;:::-;1023:48;;1151:20;1198:2;1185:10;:15;;;;:::i;:::-;1174:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1151:50;;1294:10;1286:6;1279:26;1386:1;1379:5;1375:13;1442:4;1492;1486:11;1477:7;1473:25;1585:2;1577:6;1573:15;1655:739;1674:6;1665:7;1662:19;1655:739;;;1771:1;1762:7;1758:15;1747:26;;1809:7;1803:14;1932:4;1924:5;1920:2;1916:14;1912:25;1902:8;1898:40;1892:47;1881:9;1873:67;1985:1;1974:9;1970:17;1957:30;;2063:4;2055:5;2051:2;2047:14;2043:25;2033:8;2029:40;2023:47;2012:9;2004:67;2116:1;2105:9;2101:17;2088:30;;2194:4;2186:5;2183:1;2178:14;2174:25;2164:8;2160:40;2154:47;2143:9;2135:67;2247:1;2236:9;2232:17;2219:30;;2325:4;2317:5;2305:25;2295:8;2291:40;2285:47;2274:9;2266:67;2378:1;2367:9;2363:17;2350:30;;1697:697;1655:739;;;2464:1;2457:4;2451:11;2447:19;2484:1;2479:54;;;;2551:1;2546:52;;;;2440:158;;2479:54;2523:6;2518:3;2514:16;2510:1;2499:9;2495:17;2488:43;2479:54;;2546:52;2590:4;2585:3;2581:14;2577:1;2566:9;2562:17;2555:41;2440:158;;1221:1387;;;;2625:6;2618:13;;;;;777:1861;;;;:::o;829:155:17:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:9:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:15:-;693:7;719:10;712:17;;640:96;:::o;12768:171:9:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;8131:108::-;8206:26;8216:2;8220:7;8206:26;;;;;;;;;;;;:9;:26::i;:::-;8131:108;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;7256:126::-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;1671:120:22:-;1722:13;1746:38;;;;;;;;;;;;;;;;;;;1671:120;:::o;8460:309:9:-;8584:18;8590:2;8594:7;8584:5;:18::i;:::-;8633:53;8664:1;8668:2;8672:7;8681:4;8633:22;:53::i;:::-;8612:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8460:309;;;:::o;15698:396::-;15882:1;15870:9;:13;15866:222;;;15919:1;15903:18;;:4;:18;;;15899:85;;15960:9;15941;:15;15951:4;15941:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;15899:85;16015:1;16001:16;;:2;:16;;;15997:81;;16054:9;16037;:13;16047:2;16037:13;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;15997:81;15866:222;15698:396;;;;:::o;16800:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;9091:920::-;9184:1;9170:16;;:2;:16;;;;9162:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9242:16;9250:7;9242;:16::i;:::-;9241:17;9233:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9302:48;9331:1;9335:2;9339:7;9348:1;9302:20;:48::i;:::-;9446:16;9454:7;9446;:16::i;:::-;9445:17;9437:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9854:1;9837:9;:13;9847:2;9837:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9895:2;9876:7;:16;9884:7;9876:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9938:7;9934:2;9913:33;;9930:1;9913:33;;;;;;;;;;;;9957:47;9985:1;9989:2;9993:7;10002:1;9957:19;:47::i;:::-;9091:920;;:::o;1175:320:14:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:25:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:76::-;4974:7;5003:5;4992:16;;4938:76;;;:::o;5020:120::-;5092:23;5109:5;5092:23;:::i;:::-;5085:5;5082:34;5072:62;;5130:1;5127;5120:12;5072:62;5020:120;:::o;5146:137::-;5191:5;5229:6;5216:20;5207:29;;5245:32;5271:5;5245:32;:::i;:::-;5146:137;;;;:::o;5289:327::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:52;5591:7;5582:6;5571:9;5567:22;5547:52;:::i;:::-;5537:62;;5493:116;5289:327;;;;:::o;5622:619::-;5699:6;5707;5715;5764:2;5752:9;5743:7;5739:23;5735:32;5732:119;;;5770:79;;:::i;:::-;5732:119;5890:1;5915:53;5960:7;5951:6;5940:9;5936:22;5915:53;:::i;:::-;5905:63;;5861:117;6017:2;6043:53;6088:7;6079:6;6068:9;6064:22;6043:53;:::i;:::-;6033:63;;5988:118;6145:2;6171:53;6216:7;6207:6;6196:9;6192:22;6171:53;:::i;:::-;6161:63;;6116:118;5622:619;;;;;:::o;6247:117::-;6356:1;6353;6346:12;6370:117;6479:1;6476;6469:12;6493:180;6541:77;6538:1;6531:88;6638:4;6635:1;6628:15;6662:4;6659:1;6652:15;6679:281;6762:27;6784:4;6762:27;:::i;:::-;6754:6;6750:40;6892:6;6880:10;6877:22;6856:18;6844:10;6841:34;6838:62;6835:88;;;6903:18;;:::i;:::-;6835:88;6943:10;6939:2;6932:22;6722:238;6679:281;;:::o;6966:129::-;7000:6;7027:20;;:::i;:::-;7017:30;;7056:33;7084:4;7076:6;7056:33;:::i;:::-;6966:129;;;:::o;7101:308::-;7163:4;7253:18;7245:6;7242:30;7239:56;;;7275:18;;:::i;:::-;7239:56;7313:29;7335:6;7313:29;:::i;:::-;7305:37;;7397:4;7391;7387:15;7379:23;;7101:308;;;:::o;7415:154::-;7499:6;7494:3;7489;7476:30;7561:1;7552:6;7547:3;7543:16;7536:27;7415:154;;;:::o;7575:412::-;7653:5;7678:66;7694:49;7736:6;7694:49;:::i;:::-;7678:66;:::i;:::-;7669:75;;7767:6;7760:5;7753:21;7805:4;7798:5;7794:16;7843:3;7834:6;7829:3;7825:16;7822:25;7819:112;;;7850:79;;:::i;:::-;7819:112;7940:41;7974:6;7969:3;7964;7940:41;:::i;:::-;7659:328;7575:412;;;;;:::o;8007:340::-;8063:5;8112:3;8105:4;8097:6;8093:17;8089:27;8079:122;;8120:79;;:::i;:::-;8079:122;8237:6;8224:20;8262:79;8337:3;8329:6;8322:4;8314:6;8310:17;8262:79;:::i;:::-;8253:88;;8069:278;8007:340;;;;:::o;8353:509::-;8422:6;8471:2;8459:9;8450:7;8446:23;8442:32;8439:119;;;8477:79;;:::i;:::-;8439:119;8625:1;8614:9;8610:17;8597:31;8655:18;8647:6;8644:30;8641:117;;;8677:79;;:::i;:::-;8641:117;8782:63;8837:7;8828:6;8817:9;8813:22;8782:63;:::i;:::-;8772:73;;8568:287;8353:509;;;;:::o;8868:118::-;8955:24;8973:5;8955:24;:::i;:::-;8950:3;8943:37;8868:118;;:::o;8992:222::-;9085:4;9123:2;9112:9;9108:18;9100:26;;9136:71;9204:1;9193:9;9189:17;9180:6;9136:71;:::i;:::-;8992:222;;;;:::o;9220:329::-;9279:6;9328:2;9316:9;9307:7;9303:23;9299:32;9296:119;;;9334:79;;:::i;:::-;9296:119;9454:1;9479:53;9524:7;9515:6;9504:9;9500:22;9479:53;:::i;:::-;9469:63;;9425:117;9220:329;;;;:::o;9555:116::-;9625:21;9640:5;9625:21;:::i;:::-;9618:5;9615:32;9605:60;;9661:1;9658;9651:12;9605:60;9555:116;:::o;9677:133::-;9720:5;9758:6;9745:20;9736:29;;9774:30;9798:5;9774:30;:::i;:::-;9677:133;;;;:::o;9816:468::-;9881:6;9889;9938:2;9926:9;9917:7;9913:23;9909:32;9906:119;;;9944:79;;:::i;:::-;9906:119;10064:1;10089:53;10134:7;10125:6;10114:9;10110:22;10089:53;:::i;:::-;10079:63;;10035:117;10191:2;10217:50;10259:7;10250:6;10239:9;10235:22;10217:50;:::i;:::-;10207:60;;10162:115;9816:468;;;;;:::o;10290:307::-;10351:4;10441:18;10433:6;10430:30;10427:56;;;10463:18;;:::i;:::-;10427:56;10501:29;10523:6;10501:29;:::i;:::-;10493:37;;10585:4;10579;10575:15;10567:23;;10290:307;;;:::o;10603:410::-;10680:5;10705:65;10721:48;10762:6;10721:48;:::i;:::-;10705:65;:::i;:::-;10696:74;;10793:6;10786:5;10779:21;10831:4;10824:5;10820:16;10869:3;10860:6;10855:3;10851:16;10848:25;10845:112;;;10876:79;;:::i;:::-;10845:112;10966:41;11000:6;10995:3;10990;10966:41;:::i;:::-;10686:327;10603:410;;;;;:::o;11032:338::-;11087:5;11136:3;11129:4;11121:6;11117:17;11113:27;11103:122;;11144:79;;:::i;:::-;11103:122;11261:6;11248:20;11286:78;11360:3;11352:6;11345:4;11337:6;11333:17;11286:78;:::i;:::-;11277:87;;11093:277;11032:338;;;;:::o;11376:943::-;11471:6;11479;11487;11495;11544:3;11532:9;11523:7;11519:23;11515:33;11512:120;;;11551:79;;:::i;:::-;11512:120;11671:1;11696:53;11741:7;11732:6;11721:9;11717:22;11696:53;:::i;:::-;11686:63;;11642:117;11798:2;11824:53;11869:7;11860:6;11849:9;11845:22;11824:53;:::i;:::-;11814:63;;11769:118;11926:2;11952:53;11997:7;11988:6;11977:9;11973:22;11952:53;:::i;:::-;11942:63;;11897:118;12082:2;12071:9;12067:18;12054:32;12113:18;12105:6;12102:30;12099:117;;;12135:79;;:::i;:::-;12099:117;12240:62;12294:7;12285:6;12274:9;12270:22;12240:62;:::i;:::-;12230:72;;12025:287;11376:943;;;;;;;:::o;12325:115::-;12410:23;12427:5;12410:23;:::i;:::-;12405:3;12398:36;12325:115;;:::o;12446:218::-;12537:4;12575:2;12564:9;12560:18;12552:26;;12588:69;12654:1;12643:9;12639:17;12630:6;12588:69;:::i;:::-;12446:218;;;;:::o;12670:474::-;12738:6;12746;12795:2;12783:9;12774:7;12770:23;12766:32;12763:119;;;12801:79;;:::i;:::-;12763:119;12921:1;12946:53;12991:7;12982:6;12971:9;12967:22;12946:53;:::i;:::-;12936:63;;12892:117;13048:2;13074:53;13119:7;13110:6;13099:9;13095:22;13074:53;:::i;:::-;13064:63;;13019:118;12670:474;;;;;:::o;13150:180::-;13198:77;13195:1;13188:88;13295:4;13292:1;13285:15;13319:4;13316:1;13309:15;13336:320;13380:6;13417:1;13411:4;13407:12;13397:22;;13464:1;13458:4;13454:12;13485:18;13475:81;;13541:4;13533:6;13529:17;13519:27;;13475:81;13603:2;13595:6;13592:14;13572:18;13569:38;13566:84;;;13622:18;;:::i;:::-;13566:84;13387:269;13336:320;;;:::o;13662:220::-;13802:34;13798:1;13790:6;13786:14;13779:58;13871:3;13866:2;13858:6;13854:15;13847:28;13662:220;:::o;13888:366::-;14030:3;14051:67;14115:2;14110:3;14051:67;:::i;:::-;14044:74;;14127:93;14216:3;14127:93;:::i;:::-;14245:2;14240:3;14236:12;14229:19;;13888:366;;;:::o;14260:419::-;14426:4;14464:2;14453:9;14449:18;14441:26;;14513:9;14507:4;14503:20;14499:1;14488:9;14484:17;14477:47;14541:131;14667:4;14541:131;:::i;:::-;14533:139;;14260:419;;;:::o;14685:248::-;14825:34;14821:1;14813:6;14809:14;14802:58;14894:31;14889:2;14881:6;14877:15;14870:56;14685:248;:::o;14939:366::-;15081:3;15102:67;15166:2;15161:3;15102:67;:::i;:::-;15095:74;;15178:93;15267:3;15178:93;:::i;:::-;15296:2;15291:3;15287:12;15280:19;;14939:366;;;:::o;15311:419::-;15477:4;15515:2;15504:9;15500:18;15492:26;;15564:9;15558:4;15554:20;15550:1;15539:9;15535:17;15528:47;15592:131;15718:4;15592:131;:::i;:::-;15584:139;;15311:419;;;:::o;15736:180::-;15784:77;15781:1;15774:88;15881:4;15878:1;15871:15;15905:4;15902:1;15895:15;15922:305;15962:3;15981:20;15999:1;15981:20;:::i;:::-;15976:25;;16015:20;16033:1;16015:20;:::i;:::-;16010:25;;16169:1;16101:66;16097:74;16094:1;16091:81;16088:107;;;16175:18;;:::i;:::-;16088:107;16219:1;16216;16212:9;16205:16;;15922:305;;;;:::o;16233:232::-;16373:34;16369:1;16361:6;16357:14;16350:58;16442:15;16437:2;16429:6;16425:15;16418:40;16233:232;:::o;16471:366::-;16613:3;16634:67;16698:2;16693:3;16634:67;:::i;:::-;16627:74;;16710:93;16799:3;16710:93;:::i;:::-;16828:2;16823:3;16819:12;16812:19;;16471:366;;;:::o;16843:419::-;17009:4;17047:2;17036:9;17032:18;17024:26;;17096:9;17090:4;17086:20;17082:1;17071:9;17067:17;17060:47;17124:131;17250:4;17124:131;:::i;:::-;17116:139;;16843:419;;;:::o;17268:148::-;17370:11;17407:3;17392:18;;17268:148;;;;:::o;17422:377::-;17528:3;17556:39;17589:5;17556:39;:::i;:::-;17611:89;17693:6;17688:3;17611:89;:::i;:::-;17604:96;;17709:52;17754:6;17749:3;17742:4;17735:5;17731:16;17709:52;:::i;:::-;17786:6;17781:3;17777:16;17770:23;;17532:267;17422:377;;;;:::o;17805:275::-;17937:3;17959:95;18050:3;18041:6;17959:95;:::i;:::-;17952:102;;18071:3;18064:10;;17805:275;;;;:::o;18086:435::-;18266:3;18288:95;18379:3;18370:6;18288:95;:::i;:::-;18281:102;;18400:95;18491:3;18482:6;18400:95;:::i;:::-;18393:102;;18512:3;18505:10;;18086:435;;;;;:::o;18527:174::-;18667:26;18663:1;18655:6;18651:14;18644:50;18527:174;:::o;18707:366::-;18849:3;18870:67;18934:2;18929:3;18870:67;:::i;:::-;18863:74;;18946:93;19035:3;18946:93;:::i;:::-;19064:2;19059:3;19055:12;19048:19;;18707:366;;;:::o;19079:419::-;19245:4;19283:2;19272:9;19268:18;19260:26;;19332:9;19326:4;19322:20;19318:1;19307:9;19303:17;19296:47;19360:131;19486:4;19360:131;:::i;:::-;19352:139;;19079:419;;;:::o;19504:228::-;19644:34;19640:1;19632:6;19628:14;19621:58;19713:11;19708:2;19700:6;19696:15;19689:36;19504:228;:::o;19738:366::-;19880:3;19901:67;19965:2;19960:3;19901:67;:::i;:::-;19894:74;;19977:93;20066:3;19977:93;:::i;:::-;20095:2;20090:3;20086:12;20079:19;;19738:366;;;:::o;20110:419::-;20276:4;20314:2;20303:9;20299:18;20291:26;;20363:9;20357:4;20353:20;20349:1;20338:9;20334:17;20327:47;20391:131;20517:4;20391:131;:::i;:::-;20383:139;;20110:419;;;:::o;20535:181::-;20675:33;20671:1;20663:6;20659:14;20652:57;20535:181;:::o;20722:366::-;20864:3;20885:67;20949:2;20944:3;20885:67;:::i;:::-;20878:74;;20961:93;21050:3;20961:93;:::i;:::-;21079:2;21074:3;21070:12;21063:19;;20722:366;;;:::o;21094:419::-;21260:4;21298:2;21287:9;21283:18;21275:26;;21347:9;21341:4;21337:20;21333:1;21322:9;21318:17;21311:47;21375:131;21501:4;21375:131;:::i;:::-;21367:139;;21094:419;;;:::o;21519:105::-;21555:7;21595:22;21588:5;21584:34;21573:45;;21519:105;;;:::o;21630:120::-;21702:23;21719:5;21702:23;:::i;:::-;21695:5;21692:34;21682:62;;21740:1;21737;21730:12;21682:62;21630:120;:::o;21756:141::-;21812:5;21843:6;21837:13;21828:22;;21859:32;21885:5;21859:32;:::i;:::-;21756:141;;;;:::o;21903:::-;21959:5;21990:6;21984:13;21975:22;;22006:32;22032:5;22006:32;:::i;:::-;21903:141;;;;:::o;22050:143::-;22107:5;22138:6;22132:13;22123:22;;22154:33;22181:5;22154:33;:::i;:::-;22050:143;;;;:::o;22199:971::-;22302:6;22310;22318;22326;22334;22383:3;22371:9;22362:7;22358:23;22354:33;22351:120;;;22390:79;;:::i;:::-;22351:120;22510:1;22535:63;22590:7;22581:6;22570:9;22566:22;22535:63;:::i;:::-;22525:73;;22481:127;22647:2;22673:63;22728:7;22719:6;22708:9;22704:22;22673:63;:::i;:::-;22663:73;;22618:128;22785:2;22811:64;22867:7;22858:6;22847:9;22843:22;22811:64;:::i;:::-;22801:74;;22756:129;22924:2;22950:64;23006:7;22997:6;22986:9;22982:22;22950:64;:::i;:::-;22940:74;;22895:129;23063:3;23090:63;23145:7;23136:6;23125:9;23121:22;23090:63;:::i;:::-;23080:73;;23034:129;22199:971;;;;;;;;:::o;23176:214::-;23316:66;23312:1;23304:6;23300:14;23293:90;23176:214;:::o;23396:400::-;23556:3;23577:84;23659:1;23654:3;23577:84;:::i;:::-;23570:91;;23670:93;23759:3;23670:93;:::i;:::-;23788:1;23783:3;23779:11;23772:18;;23396:400;;;:::o;23802:384::-;23942:66;23938:1;23930:6;23926:14;23919:90;24043:34;24038:2;24030:6;24026:15;24019:59;24112:66;24107:2;24099:6;24095:15;24088:91;23802:384;:::o;24192:402::-;24352:3;24373:85;24455:2;24450:3;24373:85;:::i;:::-;24366:92;;24467:93;24556:3;24467:93;:::i;:::-;24585:2;24580:3;24576:12;24569:19;;24192:402;;;:::o;24600:416::-;24740:66;24736:1;24728:6;24724:14;24717:90;24841:66;24836:2;24828:6;24824:15;24817:91;24942:66;24937:2;24929:6;24925:15;24918:91;24600:416;:::o;25022:402::-;25182:3;25203:85;25285:2;25280:3;25203:85;:::i;:::-;25196:92;;25297:93;25386:3;25297:93;:::i;:::-;25415:2;25410:3;25406:12;25399:19;;25022:402;;;:::o;25430:214::-;25570:66;25566:1;25558:6;25554:14;25547:90;25430:214;:::o;25650:400::-;25810:3;25831:84;25913:1;25908:3;25831:84;:::i;:::-;25824:91;;25924:93;26013:3;25924:93;:::i;:::-;26042:1;26037:3;26033:11;26026:18;;25650:400;;;:::o;26056:1499::-;26640:3;26662:148;26806:3;26662:148;:::i;:::-;26655:155;;26827:95;26918:3;26909:6;26827:95;:::i;:::-;26820:102;;26939:148;27083:3;26939:148;:::i;:::-;26932:155;;27104:148;27248:3;27104:148;:::i;:::-;27097:155;;27269:95;27360:3;27351:6;27269:95;:::i;:::-;27262:102;;27381:148;27525:3;27381:148;:::i;:::-;27374:155;;27546:3;27539:10;;26056:1499;;;;;:::o;27561:180::-;27609:77;27606:1;27599:88;27706:4;27703:1;27696:15;27730:4;27727:1;27720:15;27747:185;27787:1;27804:20;27822:1;27804:20;:::i;:::-;27799:25;;27838:20;27856:1;27838:20;:::i;:::-;27833:25;;27877:1;27867:35;;27882:18;;:::i;:::-;27867:35;27924:1;27921;27917:9;27912:14;;27747:185;;;;:::o;27938:348::-;27978:7;28001:20;28019:1;28001:20;:::i;:::-;27996:25;;28035:20;28053:1;28035:20;:::i;:::-;28030:25;;28223:1;28155:66;28151:74;28148:1;28145:81;28140:1;28133:9;28126:17;28122:105;28119:131;;;28230:18;;:::i;:::-;28119:131;28278:1;28275;28271:9;28260:20;;27938:348;;;;:::o;28292:224::-;28432:34;28428:1;28420:6;28416:14;28409:58;28501:7;28496:2;28488:6;28484:15;28477:32;28292:224;:::o;28522:366::-;28664:3;28685:67;28749:2;28744:3;28685:67;:::i;:::-;28678:74;;28761:93;28850:3;28761:93;:::i;:::-;28879:2;28874:3;28870:12;28863:19;;28522:366;;;:::o;28894:419::-;29060:4;29098:2;29087:9;29083:18;29075:26;;29147:9;29141:4;29137:20;29133:1;29122:9;29118:17;29111:47;29175:131;29301:4;29175:131;:::i;:::-;29167:139;;28894:419;;;:::o;29319:223::-;29459:34;29455:1;29447:6;29443:14;29436:58;29528:6;29523:2;29515:6;29511:15;29504:31;29319:223;:::o;29548:366::-;29690:3;29711:67;29775:2;29770:3;29711:67;:::i;:::-;29704:74;;29787:93;29876:3;29787:93;:::i;:::-;29905:2;29900:3;29896:12;29889:19;;29548:366;;;:::o;29920:419::-;30086:4;30124:2;30113:9;30109:18;30101:26;;30173:9;30167:4;30163:20;30159:1;30148:9;30144:17;30137:47;30201:131;30327:4;30201:131;:::i;:::-;30193:139;;29920:419;;;:::o;30345:175::-;30485:27;30481:1;30473:6;30469:14;30462:51;30345:175;:::o;30526:366::-;30668:3;30689:67;30753:2;30748:3;30689:67;:::i;:::-;30682:74;;30765:93;30854:3;30765:93;:::i;:::-;30883:2;30878:3;30874:12;30867:19;;30526:366;;;:::o;30898:419::-;31064:4;31102:2;31091:9;31087:18;31079:26;;31151:9;31145:4;31141:20;31137:1;31126:9;31122:17;31115:47;31179:131;31305:4;31179:131;:::i;:::-;31171:139;;30898:419;;;:::o;31323:237::-;31463:34;31459:1;31451:6;31447:14;31440:58;31532:20;31527:2;31519:6;31515:15;31508:45;31323:237;:::o;31566:366::-;31708:3;31729:67;31793:2;31788:3;31729:67;:::i;:::-;31722:74;;31805:93;31894:3;31805:93;:::i;:::-;31923:2;31918:3;31914:12;31907:19;;31566:366;;;:::o;31938:419::-;32104:4;32142:2;32131:9;32127:18;32119:26;;32191:9;32185:4;32181:20;32177:1;32166:9;32162:17;32155:47;32219:131;32345:4;32219:131;:::i;:::-;32211:139;;31938:419;;;:::o;32363:191::-;32403:4;32423:20;32441:1;32423:20;:::i;:::-;32418:25;;32457:20;32475:1;32457:20;:::i;:::-;32452:25;;32496:1;32493;32490:8;32487:34;;;32501:18;;:::i;:::-;32487:34;32546:1;32543;32539:9;32531:17;;32363:191;;;;:::o;32560:98::-;32611:6;32645:5;32639:12;32629:22;;32560:98;;;:::o;32664:168::-;32747:11;32781:6;32776:3;32769:19;32821:4;32816:3;32812:14;32797:29;;32664:168;;;;:::o;32838:360::-;32924:3;32952:38;32984:5;32952:38;:::i;:::-;33006:70;33069:6;33064:3;33006:70;:::i;:::-;32999:77;;33085:52;33130:6;33125:3;33118:4;33111:5;33107:16;33085:52;:::i;:::-;33162:29;33184:6;33162:29;:::i;:::-;33157:3;33153:39;33146:46;;32928:270;32838:360;;;;:::o;33204:640::-;33399:4;33437:3;33426:9;33422:19;33414:27;;33451:71;33519:1;33508:9;33504:17;33495:6;33451:71;:::i;:::-;33532:72;33600:2;33589:9;33585:18;33576:6;33532:72;:::i;:::-;33614;33682:2;33671:9;33667:18;33658:6;33614:72;:::i;:::-;33733:9;33727:4;33723:20;33718:2;33707:9;33703:18;33696:48;33761:76;33832:4;33823:6;33761:76;:::i;:::-;33753:84;;33204:640;;;;;;;:::o;33850:141::-;33906:5;33937:6;33931:13;33922:22;;33953:32;33979:5;33953:32;:::i;:::-;33850:141;;;;:::o;33997:349::-;34066:6;34115:2;34103:9;34094:7;34090:23;34086:32;34083:119;;;34121:79;;:::i;:::-;34083:119;34241:1;34266:63;34321:7;34312:6;34301:9;34297:22;34266:63;:::i;:::-;34256:73;;34212:127;33997:349;;;;:::o;34352:182::-;34492:34;34488:1;34480:6;34476:14;34469:58;34352:182;:::o;34540:366::-;34682:3;34703:67;34767:2;34762:3;34703:67;:::i;:::-;34696:74;;34779:93;34868:3;34779:93;:::i;:::-;34897:2;34892:3;34888:12;34881:19;;34540:366;;;:::o;34912:419::-;35078:4;35116:2;35105:9;35101:18;35093:26;;35165:9;35159:4;35155:20;35151:1;35140:9;35136:17;35129:47;35193:131;35319:4;35193:131;:::i;:::-;35185:139;;34912:419;;;:::o;35337:178::-;35477:30;35473:1;35465:6;35461:14;35454:54;35337:178;:::o;35521:366::-;35663:3;35684:67;35748:2;35743:3;35684:67;:::i;:::-;35677:74;;35760:93;35849:3;35760:93;:::i;:::-;35878:2;35873:3;35869:12;35862:19;;35521:366;;;:::o;35893:419::-;36059:4;36097:2;36086:9;36082:18;36074:26;;36146:9;36140:4;36136:20;36132:1;36121:9;36117:17;36110:47;36174:131;36300:4;36174:131;:::i;:::-;36166:139;;35893:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2528400","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2946","getApproved(uint256)":"5300","getHighImageUri()":"infinite","getLowImageUri()":"infinite","getTokenCounter()":"2482","isApprovedForAll(address,address)":"infinite","mintNft(int256)":"infinite","name()":"infinite","ownerOf(uint256)":"3113","s_tokenIdToHighValue(uint256)":"2853","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","svgToImageURI(string)":"infinite","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_baseURI()":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getHighImageUri()":"67e5366c","getLowImageUri()":"8fb7e271","getTokenCounter()":"6e02007d","isApprovedForAll(address,address)":"e985e9c5","mintNft(int256)":"1e930812","name()":"06fdde03","ownerOf(uint256)":"6352211e","s_tokenIdToHighValue(uint256)":"e425aded","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","svgToImageURI(string)":"30d871c6","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"lowSvg\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"highSvg\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"highValue\",\"type\":\"int256\"}],\"name\":\"CreatedNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHighImageUri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLowImageUri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"highValue\",\"type\":\"int256\"}],\"name\":\"mintNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_tokenIdToHighValue\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"svg\",\"type\":\"string\"}],\"name\":\"svgToImageURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DynamicSvgNft.sol\":\"DynamicSvgNft\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256, /* firstTokenId */\\n        uint256 batchSize\\n    ) internal virtual {\\n        if (batchSize > 1) {\\n            if (from != address(0)) {\\n                _balances[from] -= batchSize;\\n            }\\n            if (to != address(0)) {\\n                _balances[to] += batchSize;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"base64-sol/base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0;\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides functions for encoding/decoding base64\\nlibrary Base64 {\\n    string internal constant TABLE_ENCODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\\n    bytes  internal constant TABLE_DECODE = hex\\\"0000000000000000000000000000000000000000000000000000000000000000\\\"\\n                                            hex\\\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\\\"\\n                                            hex\\\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\\\"\\n                                            hex\\\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\\\";\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return '';\\n\\n        // load the table into memory\\n        string memory table = TABLE_ENCODE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n            // set the actual output length\\n            mstore(result, encodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n                // read 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // write 4 characters\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n            }\\n\\n            // padding with '='\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n\\n        return result;\\n    }\\n\\n    function decode(string memory _data) internal pure returns (bytes memory) {\\n        bytes memory data = bytes(_data);\\n\\n        if (data.length == 0) return new bytes(0);\\n        require(data.length % 4 == 0, \\\"invalid base64 decoder input\\\");\\n\\n        // load the table into memory\\n        bytes memory table = TABLE_DECODE;\\n\\n        // every 4 characters represent 3 bytes\\n        uint256 decodedLen = (data.length / 4) * 3;\\n\\n        // add some extra buffer at the end required for the writing\\n        bytes memory result = new bytes(decodedLen + 32);\\n\\n        assembly {\\n            // padding with '='\\n            let lastBytes := mload(add(data, mload(data)))\\n            if eq(and(lastBytes, 0xFF), 0x3d) {\\n                decodedLen := sub(decodedLen, 1)\\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\\n                    decodedLen := sub(decodedLen, 1)\\n                }\\n            }\\n\\n            // set the actual output length\\n            mstore(result, decodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 4 characters at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n               // read 4 characters\\n               dataPtr := add(dataPtr, 4)\\n               let input := mload(dataPtr)\\n\\n               // write 3 bytes\\n               let output := add(\\n                   add(\\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\\n                   add(\\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\\n                    )\\n                )\\n                mstore(resultPtr, shl(232, output))\\n                resultPtr := add(resultPtr, 3)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\"},\"contracts/DynamicSvgNft.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"base64-sol/base64.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n\\ncontract DynamicSvgNft is ERC721{\\n    // mint\\n    // store our SVG information somewhere\\n    // Some logic to say \\\"Show X Logic\\\" or \\\"Show Y image\\\"\\n\\n    uint256 private s_tokenCounter;\\n    string private i_lowImageUri;\\n    string private i_highImageUri;\\n    string private constant base64EncodedSvgPrefix= \\\"data:image/svg+xml;base64,\\\";\\n    AggregatorV3Interface internal immutable i_priceFeed;\\n    mapping(uint256 => int256) public s_tokenIdToHighValue;\\n\\n    event CreatedNFT(uint256 indexed tokenId, int256 highValue);\\n\\n    constructor(address priceFeedAddress, string memory lowSvg, string memory highSvg) ERC721(\\\"Dynamic SVG NFT\\\", \\\"DSN\\\"){\\n        s_tokenCounter = 0;\\n        i_lowImageUri = svgToImageURI(lowSvg);\\n        i_highImageUri = svgToImageURI(highSvg);\\n        i_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function svgToImageURI(string memory svg) public pure returns (string memory){\\n        string memory svgBase64Encoded = Base64.encode(bytes(string(abi.encodePacked(svg))));\\n        return string(abi.encodePacked(base64EncodedSvgPrefix,svgBase64Encoded));\\n\\n    }\\n\\n    function mintNft(int256 highValue) public {\\n        s_tokenIdToHighValue[s_tokenCounter]= highValue;\\n        _safeMint(msg.sender, s_tokenCounter);\\n        s_tokenCounter +=1; // best practice to increment before minting or emitting? Tests say before emission, after minting\\n        emit CreatedNFT(s_tokenCounter,highValue);\\n    }\\n\\n\\n    function _baseURI() internal pure override returns(string memory){\\n        return \\\"data:application/json;base64,\\\";\\n    }\\n\\n    // the plan is to encode the svg as a compressed string, then place it in the JSON \\n    // then encode the JSON to be the string for the token URI\\n    // _exists \\n    function tokenURI(uint256 tokenId) public view virtual override returns(string memory) {\\n        require(_exists(tokenId), \\\"URI Query for nonexistent token\\\");        \\n        \\n        //(/*uint80 roundId*/, uint256 price, /*uint256 startAt*/, /*uint256 updatedAt*/, /*uint80 answeredInRound*/  )\\n        (,int256 price,,,) = i_priceFeed.latestRoundData();\\n        string memory imageURI = i_lowImageUri;\\n        if (price >= s_tokenIdToHighValue[tokenId]){\\n            imageURI = i_highImageUri;\\n        }\\n        // data:image/svg+xml;base64, ---> prefix for images\\n        // data:application/json;base64, ----> prefix for json\\n        // base64 encode for SVG\\n         \\n        //returns a string of a concatenated JSON prefix and encoded JSON data from string to bytes to base64 \\n        // This will produce a string that can be depacked by browser to restore original data\\n        return string(        \\n            abi.encodePacked(\\n                _baseURI(),\\n                Base64.encode(\\n                    bytes(\\n                            abi.encodePacked(\\n                                '{\\\"name\\\":\\\"',\\n                                name(), // You can add whatever name here\\n                                '\\\", \\\"description\\\":\\\"An NFT that changes based on the Chainlink Feed\\\", ',\\n                                '\\\"attributes\\\": [{\\\"trait_type\\\": \\\"coolness\\\", \\\"value\\\": 100}], \\\"image\\\":\\\"',\\n                                imageURI,\\n                                '\\\"}'\\n                        )\\n                    )\\n                )\\n            )\\n        ); \\n    }\\n\\n\\n    function getTokenCounter() public view returns (uint256){\\n        return s_tokenCounter;\\n    }\\n    function getLowImageUri() public view returns (string memory){\\n        return i_lowImageUri;\\n    }\\n    function getHighImageUri() public view returns (string memory){\\n        return i_highImageUri;\\n    }    \\n\\n}\",\"keccak256\":\"0xdf8695b0bd33b897aa7e68ec4d2fa95e86fefac61913e27b47b3b2a394488b2a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1203,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1205,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1209,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1213,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1217,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1223,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":4019,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"s_tokenCounter","offset":0,"slot":"6","type":"t_uint256"},{"astId":4021,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"i_lowImageUri","offset":0,"slot":"7","type":"t_string_storage"},{"astId":4023,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"i_highImageUri","offset":0,"slot":"8","type":"t_string_storage"},{"astId":4033,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"s_tokenIdToHighValue","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_int256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_int256":{"encoding":"inplace","label":"int256","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_int256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => int256)","numberOfBytes":"32","value":"t_int256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/RandomIpfsNft.sol":{"RandomIpfsNft":{"abi":[{"inputs":[{"internalType":"address","name":"vrfCoodrindatorV2","type":"address"},{"internalType":"bytes32","name":"keyhash","type":"bytes32"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"string[3]","name":"dogTokenUris","type":"string[3]"},{"internalType":"uint256","name":"mintFee","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[],"name":"RandomIpfsNft__ContractBalanceTransferFailed","type":"error"},{"inputs":[],"name":"RandomIpfsNft__NotEnoughETHToCoverMintFee","type":"error"},{"inputs":[],"name":"RandomIpfsNft__RangeOutOfBounds","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"enum RandomIpfsNft.Breed","name":"dogBreed","type":"uint8"},{"indexed":false,"internalType":"address","name":"minter","type":"address"}],"name":"NftMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"address","name":"requester","type":"address"}],"name":"NftRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"moddedRng","type":"uint256"}],"name":"getBreedFromModdedRng","outputs":[{"internalType":"enum RandomIpfsNft.Breed","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getChanceArray","outputs":[{"internalType":"uint256[3]","name":"","type":"uint256[3]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getDogTokenUris","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMintFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestNft","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_requestIdToSender","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1088":{"entryPoint":null,"id":1088,"parameterSlots":0,"returnSlots":0},"@_1240":{"entryPoint":null,"id":1240,"parameterSlots":2,"returnSlots":0},"@_203":{"entryPoint":null,"id":203,"parameterSlots":1,"returnSlots":0},"@_4351":{"entryPoint":null,"id":4351,"parameterSlots":6,"returnSlots":0},"@_msgSender_2750":{"entryPoint":458,"id":2750,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1176":{"entryPoint":466,"id":1176,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory":{"entryPoint":1806,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1680,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1151,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory":{"entryPoint":1946,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":1210,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1755,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":2030,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":1344,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":1279,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes32t_uint64t_uint32t_array$_t_string_memory_ptr_$3_memory_ptrt_uint256_fromMemory":{"entryPoint":2053,"id":null,"parameterSlots":2,"returnSlots":6},"allocate_memory":{"entryPoint":1490,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1053,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr":{"entryPoint":1521,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1572,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":1105,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1174,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1073,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1994,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":1302,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":1233,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1626,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2287,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1436,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":2240,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1389,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1367,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":1562,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1567,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1068,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1063,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1372,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":1125,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":1184,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2004,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":1318,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":1253,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8280:25","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:25","statements":[{"nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:25"},"nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:25"},"nodeType":"YulFunctionCall","src":"187:12:25"},"nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:25"},"nodeType":"YulFunctionCall","src":"310:12:25"},"nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nodeType":"YulBlock","src":"379:81:25","statements":[{"nodeType":"YulAssignment","src":"389:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:25"},"nodeType":"YulFunctionCall","src":"400:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:25","type":""}],"src":"334:126:25"},{"body":{"nodeType":"YulBlock","src":"511:51:25","statements":[{"nodeType":"YulAssignment","src":"521:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:25"},"nodeType":"YulFunctionCall","src":"532:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:25","type":""}],"src":"466:96:25"},{"body":{"nodeType":"YulBlock","src":"611:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:25"},"nodeType":"YulFunctionCall","src":"670:12:25"},"nodeType":"YulExpressionStatement","src":"670:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:25"},"nodeType":"YulFunctionCall","src":"641:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:25"},"nodeType":"YulFunctionCall","src":"631:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:25"},"nodeType":"YulFunctionCall","src":"624:43:25"},"nodeType":"YulIf","src":"621:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:25","type":""}],"src":"568:122:25"},{"body":{"nodeType":"YulBlock","src":"759:80:25","statements":[{"nodeType":"YulAssignment","src":"769:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:25"},"nodeType":"YulFunctionCall","src":"778:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:25"},"nodeType":"YulFunctionCall","src":"800:33:25"},"nodeType":"YulExpressionStatement","src":"800:33:25"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:25","type":""}],"src":"696:143:25"},{"body":{"nodeType":"YulBlock","src":"890:32:25","statements":[{"nodeType":"YulAssignment","src":"900:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"911:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"900:7:25"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"872:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"882:7:25","type":""}],"src":"845:77:25"},{"body":{"nodeType":"YulBlock","src":"971:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"1028:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1040:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1030:6:25"},"nodeType":"YulFunctionCall","src":"1030:12:25"},"nodeType":"YulExpressionStatement","src":"1030:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"994:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1019:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1001:17:25"},"nodeType":"YulFunctionCall","src":"1001:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"991:2:25"},"nodeType":"YulFunctionCall","src":"991:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"984:6:25"},"nodeType":"YulFunctionCall","src":"984:43:25"},"nodeType":"YulIf","src":"981:63:25"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"964:5:25","type":""}],"src":"928:122:25"},{"body":{"nodeType":"YulBlock","src":"1119:80:25","statements":[{"nodeType":"YulAssignment","src":"1129:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1144:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1138:5:25"},"nodeType":"YulFunctionCall","src":"1138:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1129:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1187:5:25"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1160:26:25"},"nodeType":"YulFunctionCall","src":"1160:33:25"},"nodeType":"YulExpressionStatement","src":"1160:33:25"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"1105:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1113:5:25","type":""}],"src":"1056:143:25"},{"body":{"nodeType":"YulBlock","src":"1249:57:25","statements":[{"nodeType":"YulAssignment","src":"1259:41:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1274:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"1281:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1270:3:25"},"nodeType":"YulFunctionCall","src":"1270:30:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1259:7:25"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1231:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1241:7:25","type":""}],"src":"1205:101:25"},{"body":{"nodeType":"YulBlock","src":"1354:78:25","statements":[{"body":{"nodeType":"YulBlock","src":"1410:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1419:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1422:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1412:6:25"},"nodeType":"YulFunctionCall","src":"1412:12:25"},"nodeType":"YulExpressionStatement","src":"1412:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1377:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1401:5:25"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"1384:16:25"},"nodeType":"YulFunctionCall","src":"1384:23:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1374:2:25"},"nodeType":"YulFunctionCall","src":"1374:34:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1367:6:25"},"nodeType":"YulFunctionCall","src":"1367:42:25"},"nodeType":"YulIf","src":"1364:62:25"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1347:5:25","type":""}],"src":"1312:120:25"},{"body":{"nodeType":"YulBlock","src":"1500:79:25","statements":[{"nodeType":"YulAssignment","src":"1510:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1525:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1519:5:25"},"nodeType":"YulFunctionCall","src":"1519:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1510:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1567:5:25"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"1541:25:25"},"nodeType":"YulFunctionCall","src":"1541:32:25"},"nodeType":"YulExpressionStatement","src":"1541:32:25"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1478:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"1486:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1494:5:25","type":""}],"src":"1438:141:25"},{"body":{"nodeType":"YulBlock","src":"1629:49:25","statements":[{"nodeType":"YulAssignment","src":"1639:33:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1654:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"1661:10:25","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1650:3:25"},"nodeType":"YulFunctionCall","src":"1650:22:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1639:7:25"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1611:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1621:7:25","type":""}],"src":"1585:93:25"},{"body":{"nodeType":"YulBlock","src":"1726:78:25","statements":[{"body":{"nodeType":"YulBlock","src":"1782:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1791:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1794:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1784:6:25"},"nodeType":"YulFunctionCall","src":"1784:12:25"},"nodeType":"YulExpressionStatement","src":"1784:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1749:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:25"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"1756:16:25"},"nodeType":"YulFunctionCall","src":"1756:23:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1746:2:25"},"nodeType":"YulFunctionCall","src":"1746:34:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1739:6:25"},"nodeType":"YulFunctionCall","src":"1739:42:25"},"nodeType":"YulIf","src":"1736:62:25"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1719:5:25","type":""}],"src":"1684:120:25"},{"body":{"nodeType":"YulBlock","src":"1872:79:25","statements":[{"nodeType":"YulAssignment","src":"1882:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1897:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1891:5:25"},"nodeType":"YulFunctionCall","src":"1891:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1882:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1939:5:25"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"1913:25:25"},"nodeType":"YulFunctionCall","src":"1913:32:25"},"nodeType":"YulExpressionStatement","src":"1913:32:25"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1850:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"1858:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1866:5:25","type":""}],"src":"1810:141:25"},{"body":{"nodeType":"YulBlock","src":"2046:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2063:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2066:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2056:6:25"},"nodeType":"YulFunctionCall","src":"2056:12:25"},"nodeType":"YulExpressionStatement","src":"2056:12:25"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1957:117:25"},{"body":{"nodeType":"YulBlock","src":"2128:54:25","statements":[{"nodeType":"YulAssignment","src":"2138:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2156:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2163:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2152:3:25"},"nodeType":"YulFunctionCall","src":"2152:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2172:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2168:3:25"},"nodeType":"YulFunctionCall","src":"2168:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2148:3:25"},"nodeType":"YulFunctionCall","src":"2148:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2138:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2111:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2121:6:25","type":""}],"src":"2080:102:25"},{"body":{"nodeType":"YulBlock","src":"2216:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2226:6:25"},"nodeType":"YulFunctionCall","src":"2226:88:25"},"nodeType":"YulExpressionStatement","src":"2226:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2330:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2333:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2323:6:25"},"nodeType":"YulFunctionCall","src":"2323:15:25"},"nodeType":"YulExpressionStatement","src":"2323:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2354:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2357:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2347:6:25"},"nodeType":"YulFunctionCall","src":"2347:15:25"},"nodeType":"YulExpressionStatement","src":"2347:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2188:180:25"},{"body":{"nodeType":"YulBlock","src":"2417:238:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2427:58:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2449:6:25"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2479:4:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2457:21:25"},"nodeType":"YulFunctionCall","src":"2457:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2445:3:25"},"nodeType":"YulFunctionCall","src":"2445:40:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2431:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2596:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2598:16:25"},"nodeType":"YulFunctionCall","src":"2598:18:25"},"nodeType":"YulExpressionStatement","src":"2598:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2539:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"2551:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2536:2:25"},"nodeType":"YulFunctionCall","src":"2536:34:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2575:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2587:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2572:2:25"},"nodeType":"YulFunctionCall","src":"2572:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2533:2:25"},"nodeType":"YulFunctionCall","src":"2533:62:25"},"nodeType":"YulIf","src":"2530:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2634:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2638:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2627:6:25"},"nodeType":"YulFunctionCall","src":"2627:22:25"},"nodeType":"YulExpressionStatement","src":"2627:22:25"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2403:6:25","type":""},{"name":"size","nodeType":"YulTypedName","src":"2411:4:25","type":""}],"src":"2374:281:25"},{"body":{"nodeType":"YulBlock","src":"2702:88:25","statements":[{"nodeType":"YulAssignment","src":"2712:30:25","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2722:18:25"},"nodeType":"YulFunctionCall","src":"2722:20:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2712:6:25"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2771:6:25"},{"name":"size","nodeType":"YulIdentifier","src":"2779:4:25"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2751:19:25"},"nodeType":"YulFunctionCall","src":"2751:33:25"},"nodeType":"YulExpressionStatement","src":"2751:33:25"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2686:4:25","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2695:6:25","type":""}],"src":"2661:129:25"},{"body":{"nodeType":"YulBlock","src":"2886:169:25","statements":[{"body":{"nodeType":"YulBlock","src":"2991:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2993:16:25"},"nodeType":"YulFunctionCall","src":"2993:18:25"},"nodeType":"YulExpressionStatement","src":"2993:18:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2963:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2971:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2960:2:25"},"nodeType":"YulFunctionCall","src":"2960:30:25"},"nodeType":"YulIf","src":"2957:56:25"},{"nodeType":"YulAssignment","src":"3023:25:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3035:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"3043:4:25","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3031:3:25"},"nodeType":"YulFunctionCall","src":"3031:17:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3023:4:25"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2870:6:25","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2881:4:25","type":""}],"src":"2796:259:25"},{"body":{"nodeType":"YulBlock","src":"3150:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3167:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3170:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3160:6:25"},"nodeType":"YulFunctionCall","src":"3160:12:25"},"nodeType":"YulExpressionStatement","src":"3160:12:25"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"3061:117:25"},{"body":{"nodeType":"YulBlock","src":"3273:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3290:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3293:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3283:6:25"},"nodeType":"YulFunctionCall","src":"3283:12:25"},"nodeType":"YulExpressionStatement","src":"3283:12:25"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3184:117:25"},{"body":{"nodeType":"YulBlock","src":"3374:241:25","statements":[{"body":{"nodeType":"YulBlock","src":"3479:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3481:16:25"},"nodeType":"YulFunctionCall","src":"3481:18:25"},"nodeType":"YulExpressionStatement","src":"3481:18:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3451:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"3459:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3448:2:25"},"nodeType":"YulFunctionCall","src":"3448:30:25"},"nodeType":"YulIf","src":"3445:56:25"},{"nodeType":"YulAssignment","src":"3511:37:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3541:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3519:21:25"},"nodeType":"YulFunctionCall","src":"3519:29:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3511:4:25"}]},{"nodeType":"YulAssignment","src":"3585:23:25","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3597:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"3603:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3593:3:25"},"nodeType":"YulFunctionCall","src":"3593:15:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3585:4:25"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3358:6:25","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3369:4:25","type":""}],"src":"3307:308:25"},{"body":{"nodeType":"YulBlock","src":"3670:258:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3680:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3689:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3684:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3749:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3774:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"3779:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3770:3:25"},"nodeType":"YulFunctionCall","src":"3770:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3793:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"3798:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3789:3:25"},"nodeType":"YulFunctionCall","src":"3789:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3783:5:25"},"nodeType":"YulFunctionCall","src":"3783:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3763:6:25"},"nodeType":"YulFunctionCall","src":"3763:39:25"},"nodeType":"YulExpressionStatement","src":"3763:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3710:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"3713:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3707:2:25"},"nodeType":"YulFunctionCall","src":"3707:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3721:19:25","statements":[{"nodeType":"YulAssignment","src":"3723:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3732:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"3735:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3728:3:25"},"nodeType":"YulFunctionCall","src":"3728:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3723:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"3703:3:25","statements":[]},"src":"3699:113:25"},{"body":{"nodeType":"YulBlock","src":"3846:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3896:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"3901:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3892:3:25"},"nodeType":"YulFunctionCall","src":"3892:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"3910:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3885:6:25"},"nodeType":"YulFunctionCall","src":"3885:27:25"},"nodeType":"YulExpressionStatement","src":"3885:27:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3827:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"3830:6:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3824:2:25"},"nodeType":"YulFunctionCall","src":"3824:13:25"},"nodeType":"YulIf","src":"3821:101:25"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3652:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3657:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"3662:6:25","type":""}],"src":"3621:307:25"},{"body":{"nodeType":"YulBlock","src":"4029:326:25","statements":[{"nodeType":"YulAssignment","src":"4039:75:25","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4106:6:25"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4064:41:25"},"nodeType":"YulFunctionCall","src":"4064:49:25"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4048:15:25"},"nodeType":"YulFunctionCall","src":"4048:66:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4039:5:25"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4130:5:25"},{"name":"length","nodeType":"YulIdentifier","src":"4137:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4123:6:25"},"nodeType":"YulFunctionCall","src":"4123:21:25"},"nodeType":"YulExpressionStatement","src":"4123:21:25"},{"nodeType":"YulVariableDeclaration","src":"4153:27:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4168:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"4175:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4164:3:25"},"nodeType":"YulFunctionCall","src":"4164:16:25"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4157:3:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"4218:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4220:77:25"},"nodeType":"YulFunctionCall","src":"4220:79:25"},"nodeType":"YulExpressionStatement","src":"4220:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4199:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"4204:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4195:3:25"},"nodeType":"YulFunctionCall","src":"4195:16:25"},{"name":"end","nodeType":"YulIdentifier","src":"4213:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4192:2:25"},"nodeType":"YulFunctionCall","src":"4192:25:25"},"nodeType":"YulIf","src":"4189:112:25"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4332:3:25"},{"name":"dst","nodeType":"YulIdentifier","src":"4337:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"4342:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4310:21:25"},"nodeType":"YulFunctionCall","src":"4310:39:25"},"nodeType":"YulExpressionStatement","src":"4310:39:25"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4002:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"4007:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"4015:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4023:5:25","type":""}],"src":"3934:421:25"},{"body":{"nodeType":"YulBlock","src":"4448:282:25","statements":[{"body":{"nodeType":"YulBlock","src":"4497:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4499:77:25"},"nodeType":"YulFunctionCall","src":"4499:79:25"},"nodeType":"YulExpressionStatement","src":"4499:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4476:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4484:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4472:3:25"},"nodeType":"YulFunctionCall","src":"4472:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"4491:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4468:3:25"},"nodeType":"YulFunctionCall","src":"4468:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4461:6:25"},"nodeType":"YulFunctionCall","src":"4461:35:25"},"nodeType":"YulIf","src":"4458:122:25"},{"nodeType":"YulVariableDeclaration","src":"4589:27:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4609:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4603:5:25"},"nodeType":"YulFunctionCall","src":"4603:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4593:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4625:99:25","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4697:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4705:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4693:3:25"},"nodeType":"YulFunctionCall","src":"4693:17:25"},{"name":"length","nodeType":"YulIdentifier","src":"4712:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"4720:3:25"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4634:58:25"},"nodeType":"YulFunctionCall","src":"4634:90:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4625:5:25"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4426:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"4434:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4442:5:25","type":""}],"src":"4375:355:25"},{"body":{"nodeType":"YulBlock","src":"4874:772:25","statements":[{"nodeType":"YulAssignment","src":"4884:98:25","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4974:6:25"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr","nodeType":"YulIdentifier","src":"4909:64:25"},"nodeType":"YulFunctionCall","src":"4909:72:25"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4893:15:25"},"nodeType":"YulFunctionCall","src":"4893:89:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4884:5:25"}]},{"nodeType":"YulVariableDeclaration","src":"4991:16:25","value":{"name":"array","nodeType":"YulIdentifier","src":"5002:5:25"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4995:3:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5017:44:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5035:6:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5047:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"5055:4:25","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5043:3:25"},"nodeType":"YulFunctionCall","src":"5043:17:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5031:3:25"},"nodeType":"YulFunctionCall","src":"5031:30:25"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5021:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"5089:103:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"5103:77:25"},"nodeType":"YulFunctionCall","src":"5103:79:25"},"nodeType":"YulExpressionStatement","src":"5103:79:25"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5076:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"5084:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5073:2:25"},"nodeType":"YulFunctionCall","src":"5073:15:25"},"nodeType":"YulIf","src":"5070:122:25"},{"body":{"nodeType":"YulBlock","src":"5277:363:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5292:29:25","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5317:3:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5311:5:25"},"nodeType":"YulFunctionCall","src":"5311:10:25"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"5296:11:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"5373:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5375:77:25"},"nodeType":"YulFunctionCall","src":"5375:79:25"},"nodeType":"YulExpressionStatement","src":"5375:79:25"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"5340:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"5353:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5337:2:25"},"nodeType":"YulFunctionCall","src":"5337:35:25"},"nodeType":"YulIf","src":"5334:122:25"},{"nodeType":"YulVariableDeclaration","src":"5469:42:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5491:6:25"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"5499:11:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5487:3:25"},"nodeType":"YulFunctionCall","src":"5487:24:25"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"5473:10:25","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5532:3:25"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"5579:10:25"},{"name":"end","nodeType":"YulIdentifier","src":"5591:3:25"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"5537:41:25"},"nodeType":"YulFunctionCall","src":"5537:58:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5525:6:25"},"nodeType":"YulFunctionCall","src":"5525:71:25"},"nodeType":"YulExpressionStatement","src":"5525:71:25"},{"nodeType":"YulAssignment","src":"5609:21:25","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5620:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"5625:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5616:3:25"},"nodeType":"YulFunctionCall","src":"5616:14:25"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5609:3:25"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5230:3:25"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5235:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5227:2:25"},"nodeType":"YulFunctionCall","src":"5227:15:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5243:25:25","statements":[{"nodeType":"YulAssignment","src":"5245:21:25","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5256:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"5261:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:25"},"nodeType":"YulFunctionCall","src":"5252:14:25"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5245:3:25"}]}]},"pre":{"nodeType":"YulBlock","src":"5205:21:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5207:17:25","value":{"name":"offset","nodeType":"YulIdentifier","src":"5218:6:25"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5211:3:25","type":""}]}]},"src":"5201:439:25"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4844:6:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"4852:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"4860:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4868:5:25","type":""}],"src":"4753:893:25"},{"body":{"nodeType":"YulBlock","src":"5765:285:25","statements":[{"body":{"nodeType":"YulBlock","src":"5814:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5816:77:25"},"nodeType":"YulFunctionCall","src":"5816:79:25"},"nodeType":"YulExpressionStatement","src":"5816:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5793:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"5801:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5789:3:25"},"nodeType":"YulFunctionCall","src":"5789:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"5808:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5785:3:25"},"nodeType":"YulFunctionCall","src":"5785:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5778:6:25"},"nodeType":"YulFunctionCall","src":"5778:35:25"},"nodeType":"YulIf","src":"5775:122:25"},{"nodeType":"YulVariableDeclaration","src":"5906:18:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5920:4:25","type":"","value":"0x03"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5910:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5933:111:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6024:6:25"},{"name":"length","nodeType":"YulIdentifier","src":"6032:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"6040:3:25"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"5942:81:25"},"nodeType":"YulFunctionCall","src":"5942:102:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5933:5:25"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5743:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"5751:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5759:5:25","type":""}],"src":"5669:381:25"},{"body":{"nodeType":"YulBlock","src":"6101:32:25","statements":[{"nodeType":"YulAssignment","src":"6111:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"6122:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6111:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6083:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6093:7:25","type":""}],"src":"6056:77:25"},{"body":{"nodeType":"YulBlock","src":"6182:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"6239:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6248:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6251:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6241:6:25"},"nodeType":"YulFunctionCall","src":"6241:12:25"},"nodeType":"YulExpressionStatement","src":"6241:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6205:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6230:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6212:17:25"},"nodeType":"YulFunctionCall","src":"6212:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6202:2:25"},"nodeType":"YulFunctionCall","src":"6202:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6195:6:25"},"nodeType":"YulFunctionCall","src":"6195:43:25"},"nodeType":"YulIf","src":"6192:63:25"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6175:5:25","type":""}],"src":"6139:122:25"},{"body":{"nodeType":"YulBlock","src":"6330:80:25","statements":[{"nodeType":"YulAssignment","src":"6340:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6355:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6349:5:25"},"nodeType":"YulFunctionCall","src":"6349:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6340:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6398:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6371:26:25"},"nodeType":"YulFunctionCall","src":"6371:33:25"},"nodeType":"YulExpressionStatement","src":"6371:33:25"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6308:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"6316:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6324:5:25","type":""}],"src":"6267:143:25"},{"body":{"nodeType":"YulBlock","src":"6609:1156:25","statements":[{"body":{"nodeType":"YulBlock","src":"6656:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6658:77:25"},"nodeType":"YulFunctionCall","src":"6658:79:25"},"nodeType":"YulExpressionStatement","src":"6658:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6630:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"6639:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6626:3:25"},"nodeType":"YulFunctionCall","src":"6626:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"6651:3:25","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6622:3:25"},"nodeType":"YulFunctionCall","src":"6622:33:25"},"nodeType":"YulIf","src":"6619:120:25"},{"nodeType":"YulBlock","src":"6749:128:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6764:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6778:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6768:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6793:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6839:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6850:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6835:3:25"},"nodeType":"YulFunctionCall","src":"6835:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6859:7:25"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"6803:31:25"},"nodeType":"YulFunctionCall","src":"6803:64:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6793:6:25"}]}]},{"nodeType":"YulBlock","src":"6887:129:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6902:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6916:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6906:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6932:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6978:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6989:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6974:3:25"},"nodeType":"YulFunctionCall","src":"6974:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6998:7:25"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"6942:31:25"},"nodeType":"YulFunctionCall","src":"6942:64:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6932:6:25"}]}]},{"nodeType":"YulBlock","src":"7026:128:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7041:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7055:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7045:6:25","type":""}]},{"nodeType":"YulAssignment","src":"7071:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7116:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"7127:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7112:3:25"},"nodeType":"YulFunctionCall","src":"7112:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7136:7:25"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"7081:30:25"},"nodeType":"YulFunctionCall","src":"7081:63:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7071:6:25"}]}]},{"nodeType":"YulBlock","src":"7164:128:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7179:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7193:2:25","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7183:6:25","type":""}]},{"nodeType":"YulAssignment","src":"7209:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7254:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"7265:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7250:3:25"},"nodeType":"YulFunctionCall","src":"7250:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7274:7:25"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"7219:30:25"},"nodeType":"YulFunctionCall","src":"7219:63:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7209:6:25"}]}]},{"nodeType":"YulBlock","src":"7302:316:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7317:40:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7341:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7352:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7337:3:25"},"nodeType":"YulFunctionCall","src":"7337:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7331:5:25"},"nodeType":"YulFunctionCall","src":"7331:26:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7321:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"7404:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7406:77:25"},"nodeType":"YulFunctionCall","src":"7406:79:25"},"nodeType":"YulExpressionStatement","src":"7406:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7376:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7384:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7373:2:25"},"nodeType":"YulFunctionCall","src":"7373:30:25"},"nodeType":"YulIf","src":"7370:117:25"},{"nodeType":"YulAssignment","src":"7501:107:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7580:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"7591:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7576:3:25"},"nodeType":"YulFunctionCall","src":"7576:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7600:7:25"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"7511:64:25"},"nodeType":"YulFunctionCall","src":"7511:97:25"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7501:6:25"}]}]},{"nodeType":"YulBlock","src":"7628:130:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7643:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7657:3:25","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7647:6:25","type":""}]},{"nodeType":"YulAssignment","src":"7674:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7720:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"7731:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7716:3:25"},"nodeType":"YulFunctionCall","src":"7716:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7740:7:25"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"7684:31:25"},"nodeType":"YulFunctionCall","src":"7684:64:25"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7674:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes32t_uint64t_uint32t_array$_t_string_memory_ptr_$3_memory_ptrt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6539:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6550:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6562:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6570:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6578:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6586:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6594:6:25","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6602:6:25","type":""}],"src":"6416:1349:25"},{"body":{"nodeType":"YulBlock","src":"7799:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7816:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7819:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7809:6:25"},"nodeType":"YulFunctionCall","src":"7809:88:25"},"nodeType":"YulExpressionStatement","src":"7809:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7913:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7916:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7906:6:25"},"nodeType":"YulFunctionCall","src":"7906:15:25"},"nodeType":"YulExpressionStatement","src":"7906:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7937:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7940:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7930:6:25"},"nodeType":"YulFunctionCall","src":"7930:15:25"},"nodeType":"YulExpressionStatement","src":"7930:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7771:180:25"},{"body":{"nodeType":"YulBlock","src":"8008:269:25","statements":[{"nodeType":"YulAssignment","src":"8018:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8032:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"8038:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8028:3:25"},"nodeType":"YulFunctionCall","src":"8028:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8018:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"8049:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8079:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"8085:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8075:3:25"},"nodeType":"YulFunctionCall","src":"8075:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8053:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"8126:51:25","statements":[{"nodeType":"YulAssignment","src":"8140:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8154:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"8162:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8150:3:25"},"nodeType":"YulFunctionCall","src":"8150:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8140:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8106:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8099:6:25"},"nodeType":"YulFunctionCall","src":"8099:26:25"},"nodeType":"YulIf","src":"8096:81:25"},{"body":{"nodeType":"YulBlock","src":"8229:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"8243:16:25"},"nodeType":"YulFunctionCall","src":"8243:18:25"},"nodeType":"YulExpressionStatement","src":"8243:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8193:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8216:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"8224:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8213:2:25"},"nodeType":"YulFunctionCall","src":"8213:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8190:2:25"},"nodeType":"YulFunctionCall","src":"8190:38:25"},"nodeType":"YulIf","src":"8187:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7992:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8001:6:25","type":""}],"src":"7957:320:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    // string[3]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr(length))\n        let dst := array\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[3]\n    function abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := 0x03\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32t_uint64t_uint32t_array$_t_string_memory_ptr_$3_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x120 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x44E8 CODESIZE SUB DUP1 PUSH3 0x44E8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x805 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52616E646F6D2049504653204E46540000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52494E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xBD SWAP3 SWAP2 SWAP1 PUSH3 0x298 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xD6 SWAP3 SWAP2 SWAP1 PUSH3 0x298 JUMP JUMPDEST POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH3 0x12E PUSH3 0x122 PUSH3 0x1CA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1D2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP5 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xE0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH4 0xFFFFFFFF AND PUSH2 0x100 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA SWAP1 PUSH1 0x3 PUSH3 0x1B5 SWAP3 SWAP2 SWAP1 PUSH3 0x329 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP PUSH3 0x925 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x2A6 SWAP1 PUSH3 0x8EF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x2CA JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x316 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x2E5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x316 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x316 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x315 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2F8 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x325 SWAP2 SWAP1 PUSH3 0x390 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x37D JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x37C JUMPI DUP3 MLOAD DUP3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x36B SWAP3 SWAP2 SWAP1 PUSH3 0x298 JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x34A JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x38C SWAP2 SWAP1 PUSH3 0x3AF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3AB JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x391 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3D3 JUMPI PUSH1 0x0 DUP2 DUP2 PUSH3 0x3C9 SWAP2 SWAP1 PUSH3 0x3D7 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH3 0x3B0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH3 0x3E5 SWAP1 PUSH3 0x8EF JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH3 0x3F9 JUMPI POP PUSH3 0x41A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH3 0x419 SWAP2 SWAP1 PUSH3 0x390 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x45E DUP3 PUSH3 0x431 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x470 DUP2 PUSH3 0x451 JUMP JUMPDEST DUP2 EQ PUSH3 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x490 DUP2 PUSH3 0x465 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4AB DUP2 PUSH3 0x496 JUMP JUMPDEST DUP2 EQ PUSH3 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x4CB DUP2 PUSH3 0x4A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4F0 DUP2 PUSH3 0x4D1 JUMP JUMPDEST DUP2 EQ PUSH3 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x510 DUP2 PUSH3 0x4E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x531 DUP2 PUSH3 0x516 JUMP JUMPDEST DUP2 EQ PUSH3 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x551 DUP2 PUSH3 0x526 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x5A7 DUP3 PUSH3 0x55C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x5C9 JUMPI PUSH3 0x5C8 PUSH3 0x56D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5DE PUSH3 0x41D JUMP JUMPDEST SWAP1 POP PUSH3 0x5EC DUP3 DUP3 PUSH3 0x59C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x60F JUMPI PUSH3 0x60E PUSH3 0x56D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x642 JUMPI PUSH3 0x641 PUSH3 0x56D JUMP JUMPDEST JUMPDEST PUSH3 0x64D DUP3 PUSH3 0x55C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x67A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x65D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x68A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6A7 PUSH3 0x6A1 DUP5 PUSH3 0x624 JUMP JUMPDEST PUSH3 0x5D2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x6C6 JUMPI PUSH3 0x6C5 PUSH3 0x61F JUMP JUMPDEST JUMPDEST PUSH3 0x6D3 DUP5 DUP3 DUP6 PUSH3 0x65A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x6F3 JUMPI PUSH3 0x6F2 PUSH3 0x557 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x705 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x690 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x725 PUSH3 0x71F DUP5 PUSH3 0x5F1 JUMP JUMPDEST PUSH3 0x5D2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x742 JUMPI PUSH3 0x741 PUSH3 0x61A JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x790 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x76B JUMPI PUSH3 0x76A PUSH3 0x557 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH3 0x77A DUP10 DUP3 PUSH3 0x6DB JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x744 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7B2 JUMPI PUSH3 0x7B1 PUSH3 0x557 JUMP JUMPDEST JUMPDEST PUSH1 0x3 PUSH3 0x7C1 DUP5 DUP3 DUP6 PUSH3 0x70E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7DF DUP2 PUSH3 0x7CA JUMP JUMPDEST DUP2 EQ PUSH3 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x7FF DUP2 PUSH3 0x7D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x825 JUMPI PUSH3 0x824 PUSH3 0x427 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x835 DUP10 DUP3 DUP11 ADD PUSH3 0x47F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x848 DUP10 DUP3 DUP11 ADD PUSH3 0x4BA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x85B DUP10 DUP3 DUP11 ADD PUSH3 0x4FF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x86E DUP10 DUP3 DUP11 ADD PUSH3 0x540 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x892 JUMPI PUSH3 0x891 PUSH3 0x42C JUMP JUMPDEST JUMPDEST PUSH3 0x8A0 DUP10 DUP3 DUP11 ADD PUSH3 0x79A JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x8B3 DUP10 DUP3 DUP11 ADD PUSH3 0x7EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x908 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x91F JUMPI PUSH3 0x91E PUSH3 0x8C0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x3B77 PUSH3 0x971 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xFAC ADD MSTORE PUSH1 0x0 PUSH2 0xF89 ADD MSTORE PUSH1 0x0 PUSH2 0xF68 ADD MSTORE PUSH1 0x0 PUSH2 0xF2C ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x8D1 ADD MSTORE PUSH2 0x925 ADD MSTORE PUSH2 0x3B77 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x166 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA36F573B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x597 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5D4 JUMPI PUSH2 0x166 JUMP JUMPDEST DUP1 PUSH4 0xA36F573B EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xA51CCCF3 EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0xAA152491 EQ PUSH2 0x513 JUMPI PUSH2 0x166 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x7A5CAAB3 EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x470 JUMPI PUSH2 0x166 JUMP JUMPDEST DUP1 PUSH4 0x3AF25975 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x3AF25975 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x5DACF5F4 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x370 JUMPI PUSH2 0x166 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x262 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x2756 JUMP JUMPDEST PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x279E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x2918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x295F JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST PUSH2 0x8CF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x2B43 JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0xA9F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x2B43 JUMP JUMPDEST PUSH2 0xB53 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x2C41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x2918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x2C6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x2C86 JUMP JUMPDEST PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x2C6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3ED PUSH2 0xCE7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x404 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x2C6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x2918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45A PUSH2 0xD2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x2CDF JUMP JUMPDEST PUSH2 0xDC1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x2918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x2D96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51B PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x2C6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x558 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST PUSH2 0x10CE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x581 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57C SWAP2 SWAP1 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58E SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x2EE9 JUMP JUMPDEST PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CB SWAP2 SWAP1 PUSH2 0x279E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x2C86 JUMP JUMPDEST PUSH2 0x12D7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x6C8 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x6D8 JUMPI POP PUSH2 0x6D7 DUP3 PUSH2 0x135B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x6EE SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x71A SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x767 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x767 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP3 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C2 DUP3 PUSH2 0xB9E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x2FFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x852 PUSH2 0x1410 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x881 JUMPI POP PUSH2 0x880 DUP2 PUSH2 0x87B PUSH2 0x1410 JUMP JUMPDEST PUSH2 0x1243 JUMP JUMPDEST JUMPDEST PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B7 SWAP1 PUSH2 0x308E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CA DUP4 DUP4 PUSH2 0x1418 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x981 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP3 SWAP2 SWAP1 PUSH2 0x30AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x98B DUP3 DUP3 PUSH2 0x14D1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9A0 PUSH2 0x99A PUSH2 0x1410 JUMP JUMPDEST DUP3 PUSH2 0x1670 JUMP JUMPDEST PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D6 SWAP1 PUSH2 0x3149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9EA DUP4 DUP4 DUP4 PUSH2 0x1705 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA05 JUMPI PUSH2 0xA04 PUSH2 0x3169 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xA1A SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA46 SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA93 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA68 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA93 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA76 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA7 PUSH2 0x19FF JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xAD2 SWAP1 PUSH2 0x31C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB4F JUMPI PUSH1 0x40 MLOAD PUSH32 0xB7B785BF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB6E DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x10CE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB7B PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBAA DUP4 PUSH2 0x1A7D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC13 SWAP1 PUSH2 0x322A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC97 SWAP1 PUSH2 0x32BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEF PUSH2 0x19FF JUMP JUMPDEST PUSH2 0xCF9 PUSH1 0x0 PUSH2 0x1ABA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xD3E SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD6A SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDB7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD8C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDB7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD9A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDD3 PUSH2 0xDCC PUSH2 0x1410 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1B80 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0xE1B PUSH2 0xB73 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xEB4 JUMPI DUP3 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0xE5A JUMPI POP DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xE47 JUMPI PUSH2 0xE46 PUSH2 0x3169 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xE57 SWAP2 SWAP1 PUSH2 0x330B JUMP JUMPDEST DUP6 LT JUMPDEST ISZERO PUSH2 0xE7C JUMPI DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE72 JUMPI PUSH2 0xE71 PUSH2 0x2D1F JUMP JUMPDEST JUMPDEST SWAP4 POP POP POP POP PUSH2 0xEE7 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xE8F JUMPI PUSH2 0xE8E PUSH2 0x3169 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xE9F SWAP2 SWAP1 PUSH2 0x330B JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0xEAC SWAP1 PUSH2 0x3361 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE20 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x12806C9D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD CALLVALUE LT ISZERO PUSH2 0xF2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x5DA6D37500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFED SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1007 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x101B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x103F SWAP2 SWAP1 PUSH2 0x348A JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xF873236E6CC0ECC5BE1A9A35C95EE5B8D1AC4CC7BFEF0CC5060391D6CC98E26B CALLER PUSH1 0x40 MLOAD PUSH2 0x10C3 SWAP2 SWAP1 PUSH2 0x2918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x10DF PUSH2 0x10D9 PUSH2 0x1410 JUMP JUMPDEST DUP4 PUSH2 0x1670 JUMP JUMPDEST PUSH2 0x111E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1115 SWAP1 PUSH2 0x3149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x112A DUP5 DUP5 DUP5 DUP5 PUSH2 0x1CED JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x113B DUP3 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x115B SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1187 SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x11E5 PUSH2 0x1D49 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x11FB JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x123E JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1230 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1218 SWAP3 SWAP2 SWAP1 PUSH2 0x34F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x123E JUMP JUMPDEST PUSH2 0x1239 DUP5 PUSH2 0x1D60 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12DF PUSH2 0x19FF JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x134F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1346 SWAP1 PUSH2 0x3589 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1358 DUP2 PUSH2 0x1ABA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13CE DUP2 PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x140D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1404 SWAP1 PUSH2 0x322A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x148B DUP4 PUSH2 0xB9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1528 JUMPI PUSH2 0x1527 PUSH2 0x3169 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x153A SWAP2 SWAP1 PUSH2 0x35D8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1547 DUP3 PUSH2 0xE0A JUMP JUMPDEST SWAP1 POP PUSH2 0x1553 DUP5 DUP5 PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x1615 DUP4 PUSH1 0xA DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x156C JUMPI PUSH2 0x156B PUSH2 0x2D1F JUMP JUMPDEST JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x157D JUMPI PUSH2 0x157C PUSH2 0x3169 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x1592 SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15BE SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x160B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15E0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x160B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15EE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x1E27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1628 SWAP2 SWAP1 PUSH2 0x330B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x8A269F26B688E110E9CBD887D163DAB35CAE678FA353A0292DE532C0CAC1ECDC DUP2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1660 SWAP3 SWAP2 SWAP1 PUSH2 0x3609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x167C DUP4 PUSH2 0xB9E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x16BE JUMPI POP PUSH2 0x16BD DUP2 DUP6 PUSH2 0x1243 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x16FC JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16E4 DUP5 PUSH2 0x771 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1725 DUP3 PUSH2 0xB9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x177B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1772 SWAP1 PUSH2 0x36A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E2 SWAP1 PUSH2 0x3736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17F8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1E9B JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1818 DUP3 PUSH2 0xB9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x186E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1865 SWAP1 PUSH2 0x36A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x19FA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1FC1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A07 PUSH2 0x1410 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A25 PUSH2 0xD05 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A72 SWAP1 PUSH2 0x37A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE6 SWAP1 PUSH2 0x380E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CE0 SWAP2 SWAP1 PUSH2 0x279E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1CF8 DUP5 DUP5 DUP5 PUSH2 0x1705 JUMP JUMPDEST PUSH2 0x1D04 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1FC7 JUMP JUMPDEST PUSH2 0x1D43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3A SWAP1 PUSH2 0x38A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D6B DUP3 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D75 PUSH2 0x1D49 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1D95 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1DC0 JUMP JUMPDEST DUP1 PUSH2 0x1D9F DUP5 PUSH2 0x215E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DB0 SWAP3 SWAP2 SWAP1 PUSH2 0x34F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DEA DUP4 PUSH2 0x1A7D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E23 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2236 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1E30 DUP3 PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x1E6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E66 SWAP1 PUSH2 0x3932 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1E96 SWAP3 SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1FBB JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F2F JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1F27 SWAP2 SWAP1 PUSH2 0x3952 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FBA JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1FB2 SWAP2 SWAP1 PUSH2 0x330B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE8 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2291 JUMP JUMPDEST ISZERO PUSH2 0x2151 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x2011 PUSH2 0x1410 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2033 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39DB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x204D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x207E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x207B SWAP2 SWAP1 PUSH2 0x3A3C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2101 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x20AE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20B3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x20F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20F0 SWAP1 PUSH2 0x38A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x2156 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x216D DUP5 PUSH2 0x22B4 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x218C JUMPI PUSH2 0x218B PUSH2 0x29A4 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x21BE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x222B JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2215 JUMPI PUSH2 0x2214 PUSH2 0x35A9 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x2226 JUMPI PUSH2 0x222B JUMP JUMPDEST PUSH2 0x21CC JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2240 DUP4 DUP4 PUSH2 0x2407 JUMP JUMPDEST PUSH2 0x224D PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1FC7 JUMP JUMPDEST PUSH2 0x228C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2283 SWAP1 PUSH2 0x38A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x2312 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x2308 JUMPI PUSH2 0x2307 PUSH2 0x35A9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x234F JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x2345 JUMPI PUSH2 0x2344 PUSH2 0x35A9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x237E JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x2374 JUMPI PUSH2 0x2373 PUSH2 0x35A9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x23A7 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x239D JUMPI PUSH2 0x239C PUSH2 0x35A9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x23CC JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x23C2 JUMPI PUSH2 0x23C1 PUSH2 0x35A9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x23EF JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x23E5 JUMPI PUSH2 0x23E4 PUSH2 0x35A9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x23FE JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2477 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x246E SWAP1 PUSH2 0x3AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2480 DUP2 PUSH2 0x1DC8 JUMP JUMPDEST ISZERO PUSH2 0x24C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B7 SWAP1 PUSH2 0x3B21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24CE PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1E9B JUMP JUMPDEST PUSH2 0x24D7 DUP2 PUSH2 0x1DC8 JUMP JUMPDEST ISZERO PUSH2 0x2517 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250E SWAP1 PUSH2 0x3B21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2621 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1FC1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2653 SWAP1 PUSH2 0x2F58 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2675 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x26BC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x268E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x26BC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x26BC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x26BB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x26A0 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x26C9 SWAP2 SWAP1 PUSH2 0x26CD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x26E6 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x26CE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2733 DUP2 PUSH2 0x26FE JUMP JUMPDEST DUP2 EQ PUSH2 0x273E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2750 DUP2 PUSH2 0x272A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x276C JUMPI PUSH2 0x276B PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x277A DUP5 DUP3 DUP6 ADD PUSH2 0x2741 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2798 DUP2 PUSH2 0x2783 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x278F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27F3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x27D8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2802 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2824 DUP3 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x282E DUP2 DUP6 PUSH2 0x27C4 JUMP JUMPDEST SWAP4 POP PUSH2 0x283E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27D5 JUMP JUMPDEST PUSH2 0x2847 DUP2 PUSH2 0x2808 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x286C DUP2 DUP5 PUSH2 0x2819 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2887 DUP2 PUSH2 0x2874 JUMP JUMPDEST DUP2 EQ PUSH2 0x2892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28A4 DUP2 PUSH2 0x287E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28C0 JUMPI PUSH2 0x28BF PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28CE DUP5 DUP3 DUP6 ADD PUSH2 0x2895 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2902 DUP3 PUSH2 0x28D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2912 DUP2 PUSH2 0x28F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x292D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2909 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x293C DUP2 PUSH2 0x28F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x2947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2959 DUP2 PUSH2 0x2933 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2976 JUMPI PUSH2 0x2975 PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2984 DUP6 DUP3 DUP7 ADD PUSH2 0x294A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2995 DUP6 DUP3 DUP7 ADD PUSH2 0x2895 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x29DC DUP3 PUSH2 0x2808 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x29FB JUMPI PUSH2 0x29FA PUSH2 0x29A4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A0E PUSH2 0x26EA JUMP JUMPDEST SWAP1 POP PUSH2 0x2A1A DUP3 DUP3 PUSH2 0x29D3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A3A JUMPI PUSH2 0x2A39 PUSH2 0x29A4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2A63 PUSH2 0x2A5E DUP5 PUSH2 0x2A1F JUMP JUMPDEST PUSH2 0x2A04 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2A86 JUMPI PUSH2 0x2A85 PUSH2 0x2A4B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2AAF JUMPI DUP1 PUSH2 0x2A9B DUP9 DUP3 PUSH2 0x2895 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2A88 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2ACE JUMPI PUSH2 0x2ACD PUSH2 0x299F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2ADE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2A50 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AFE JUMPI PUSH2 0x2AFD PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B0C DUP6 DUP3 DUP7 ADD PUSH2 0x2895 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B2D JUMPI PUSH2 0x2B2C PUSH2 0x26F9 JUMP JUMPDEST JUMPDEST PUSH2 0x2B39 DUP6 DUP3 DUP7 ADD PUSH2 0x2AB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B5C JUMPI PUSH2 0x2B5B PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B6A DUP7 DUP3 DUP8 ADD PUSH2 0x294A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2B7B DUP7 DUP3 DUP8 ADD PUSH2 0x294A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2B8C DUP7 DUP3 DUP8 ADD PUSH2 0x2895 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BBF DUP2 PUSH2 0x2874 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD1 DUP4 DUP4 PUSH2 0x2BB6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BF3 DUP2 PUSH2 0x2B96 JUMP JUMPDEST PUSH2 0x2BFD DUP2 DUP5 PUSH2 0x2BA1 JUMP JUMPDEST SWAP3 POP PUSH2 0x2C08 DUP3 PUSH2 0x2BAC JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C39 JUMPI DUP2 MLOAD PUSH2 0x2C20 DUP8 DUP3 PUSH2 0x2BC5 JUMP JUMPDEST SWAP7 POP PUSH2 0x2C2B DUP4 PUSH2 0x2BDD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2C0C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C56 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C65 DUP2 PUSH2 0x2874 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C9C JUMPI PUSH2 0x2C9B PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CAA DUP5 DUP3 DUP6 ADD PUSH2 0x294A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CBC DUP2 PUSH2 0x2783 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CD9 DUP2 PUSH2 0x2CB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CF6 JUMPI PUSH2 0x2CF5 PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D04 DUP6 DUP3 DUP7 ADD PUSH2 0x294A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D15 DUP6 DUP3 DUP7 ADD PUSH2 0x2CCA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2D5F JUMPI PUSH2 0x2D5E PUSH2 0x2D1F JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2D70 DUP3 PUSH2 0x2D4E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D80 DUP3 PUSH2 0x2D62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D90 DUP2 PUSH2 0x2D75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DAB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2DD1 JUMPI PUSH2 0x2DD0 PUSH2 0x29A4 JUMP JUMPDEST JUMPDEST PUSH2 0x2DDA DUP3 PUSH2 0x2808 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E09 PUSH2 0x2E04 DUP5 PUSH2 0x2DB6 JUMP JUMPDEST PUSH2 0x2A04 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2E25 JUMPI PUSH2 0x2E24 PUSH2 0x2DB1 JUMP JUMPDEST JUMPDEST PUSH2 0x2E30 DUP5 DUP3 DUP6 PUSH2 0x2DE7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2E4D JUMPI PUSH2 0x2E4C PUSH2 0x299F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2E5D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2DF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E80 JUMPI PUSH2 0x2E7F PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E8E DUP8 DUP3 DUP9 ADD PUSH2 0x294A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2E9F DUP8 DUP3 DUP9 ADD PUSH2 0x294A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2EB0 DUP8 DUP3 DUP9 ADD PUSH2 0x2895 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2ED1 JUMPI PUSH2 0x2ED0 PUSH2 0x26F9 JUMP JUMPDEST JUMPDEST PUSH2 0x2EDD DUP8 DUP3 DUP9 ADD PUSH2 0x2E38 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F00 JUMPI PUSH2 0x2EFF PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F0E DUP6 DUP3 DUP7 ADD PUSH2 0x294A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F1F DUP6 DUP3 DUP7 ADD PUSH2 0x294A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2F70 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2F84 JUMPI PUSH2 0x2F83 PUSH2 0x2F29 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FE6 PUSH1 0x21 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FF1 DUP3 PUSH2 0x2F8A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3015 DUP2 PUSH2 0x2FD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3078 PUSH1 0x3D DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3083 DUP3 PUSH2 0x301C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30A7 DUP2 PUSH2 0x306B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x30C3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2909 JUMP JUMPDEST PUSH2 0x30D0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2909 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3133 PUSH1 0x2D DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x313E DUP3 PUSH2 0x30D7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3162 DUP2 PUSH2 0x3126 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31B3 PUSH1 0x0 DUP4 PUSH2 0x3198 JUMP JUMPDEST SWAP2 POP PUSH2 0x31BE DUP3 PUSH2 0x31A3 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31D4 DUP3 PUSH2 0x31A6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3214 PUSH1 0x18 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x321F DUP3 PUSH2 0x31DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3243 DUP2 PUSH2 0x3207 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32A6 PUSH1 0x29 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x32B1 DUP3 PUSH2 0x324A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32D5 DUP2 PUSH2 0x3299 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3316 DUP3 PUSH2 0x2874 JUMP JUMPDEST SWAP2 POP PUSH2 0x3321 DUP4 PUSH2 0x2874 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3356 JUMPI PUSH2 0x3355 PUSH2 0x32DC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x336C DUP3 PUSH2 0x2874 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x339F JUMPI PUSH2 0x339E PUSH2 0x32DC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33BD DUP2 PUSH2 0x33AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33E0 DUP2 PUSH2 0x33C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33FD DUP2 PUSH2 0x33E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x341C DUP2 PUSH2 0x3403 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3437 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x33B4 JUMP JUMPDEST PUSH2 0x3444 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x33D7 JUMP JUMPDEST PUSH2 0x3451 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x33F4 JUMP JUMPDEST PUSH2 0x345E PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x3413 JUMP JUMPDEST PUSH2 0x346B PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3413 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3484 DUP2 PUSH2 0x287E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34A0 JUMPI PUSH2 0x349F PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34AE DUP5 DUP3 DUP6 ADD PUSH2 0x3475 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34CD DUP3 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x34D7 DUP2 DUP6 PUSH2 0x34B7 JUMP JUMPDEST SWAP4 POP PUSH2 0x34E7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27D5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34FF DUP3 DUP6 PUSH2 0x34C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x350B DUP3 DUP5 PUSH2 0x34C2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3573 PUSH1 0x26 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x357E DUP3 PUSH2 0x3517 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35A2 DUP2 PUSH2 0x3566 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x35E3 DUP3 PUSH2 0x2874 JUMP JUMPDEST SWAP2 POP PUSH2 0x35EE DUP4 PUSH2 0x2874 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x35FE JUMPI PUSH2 0x35FD PUSH2 0x35A9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x361E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D87 JUMP JUMPDEST PUSH2 0x362B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2909 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x368E PUSH1 0x25 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3699 DUP3 PUSH2 0x3632 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36BD DUP2 PUSH2 0x3681 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3720 PUSH1 0x24 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x372B DUP3 PUSH2 0x36C4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x374F DUP2 PUSH2 0x3713 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x378C PUSH1 0x20 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3797 DUP3 PUSH2 0x3756 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37BB DUP2 PUSH2 0x377F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F8 PUSH1 0x19 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3803 DUP3 PUSH2 0x37C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3827 DUP2 PUSH2 0x37EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388A PUSH1 0x32 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3895 DUP3 PUSH2 0x382E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38B9 DUP2 PUSH2 0x387D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391C PUSH1 0x2E DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3927 DUP3 PUSH2 0x38C0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x394B DUP2 PUSH2 0x390F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x395D DUP3 PUSH2 0x2874 JUMP JUMPDEST SWAP2 POP PUSH2 0x3968 DUP4 PUSH2 0x2874 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x397B JUMPI PUSH2 0x397A PUSH2 0x32DC JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39AD DUP3 PUSH2 0x3986 JUMP JUMPDEST PUSH2 0x39B7 DUP2 DUP6 PUSH2 0x3991 JUMP JUMPDEST SWAP4 POP PUSH2 0x39C7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27D5 JUMP JUMPDEST PUSH2 0x39D0 DUP2 PUSH2 0x2808 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x39F0 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2909 JUMP JUMPDEST PUSH2 0x39FD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2909 JUMP JUMPDEST PUSH2 0x3A0A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2C5C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3A1C DUP2 DUP5 PUSH2 0x39A2 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3A36 DUP2 PUSH2 0x272A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A52 JUMPI PUSH2 0x3A51 PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A60 DUP5 DUP3 DUP6 ADD PUSH2 0x3A27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A9F PUSH1 0x20 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AAA DUP3 PUSH2 0x3A69 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ACE DUP2 PUSH2 0x3A92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B0B PUSH1 0x1C DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B16 DUP3 PUSH2 0x3AD5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B3A DUP2 PUSH2 0x3AFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xC2 MULMOD 0x49 CHAINID 0x1F EXTCODESIZE 0xB1 0xE6 0xD5 SGT 0x5C PUSH10 0xEFCD29F0F3971D35F9D7 PUSH26 0xF4DFE81814A38B3964736F6C6343000809003300000000000000 ","sourceMap":"541:3902:23:-:0;;;1436:618;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1689:17;1390:113:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;5616:15:2;5599:32;;;;;;;;;;5556:80;936:32:8;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1813:17:23::2;1768:63;;;;;;;;::::0;::::2;1853:7;1841:19;;;;::::0;::::2;1889:14;1870:33;;;;;;;;::::0;::::2;1934:16;1913:37;;;;;;;;::::0;::::2;1972:7;1960:9;:19;;;;2007:12;1990:14;:29;;;;;;;:::i;:::-;;2046:1;2029:14;:18;;;;1436:618:::0;;;;;;541:3902;;640:96:15;693:7;719:10;712:17;;640:96;:::o;2433:187:8:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;541:3902:23:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;7:75:25:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:101::-;1241:7;1281:18;1274:5;1270:30;1259:41;;1205:101;;;:::o;1312:120::-;1384:23;1401:5;1384:23;:::i;:::-;1377:5;1374:34;1364:62;;1422:1;1419;1412:12;1364:62;1312:120;:::o;1438:141::-;1494:5;1525:6;1519:13;1510:22;;1541:32;1567:5;1541:32;:::i;:::-;1438:141;;;;:::o;1585:93::-;1621:7;1661:10;1654:5;1650:22;1639:33;;1585:93;;;:::o;1684:120::-;1756:23;1773:5;1756:23;:::i;:::-;1749:5;1746:34;1736:62;;1794:1;1791;1784:12;1736:62;1684:120;:::o;1810:141::-;1866:5;1897:6;1891:13;1882:22;;1913:32;1939:5;1913:32;:::i;:::-;1810:141;;;;:::o;1957:117::-;2066:1;2063;2056:12;2080:102;2121:6;2172:2;2168:7;2163:2;2156:5;2152:14;2148:28;2138:38;;2080:102;;;:::o;2188:180::-;2236:77;2233:1;2226:88;2333:4;2330:1;2323:15;2357:4;2354:1;2347:15;2374:281;2457:27;2479:4;2457:27;:::i;:::-;2449:6;2445:40;2587:6;2575:10;2572:22;2551:18;2539:10;2536:34;2533:62;2530:88;;;2598:18;;:::i;:::-;2530:88;2638:10;2634:2;2627:22;2417:238;2374:281;;:::o;2661:129::-;2695:6;2722:20;;:::i;:::-;2712:30;;2751:33;2779:4;2771:6;2751:33;:::i;:::-;2661:129;;;:::o;2796:259::-;2881:4;2971:18;2963:6;2960:30;2957:56;;;2993:18;;:::i;:::-;2957:56;3043:4;3035:6;3031:17;3023:25;;2796:259;;;:::o;3061:117::-;3170:1;3167;3160:12;3184:117;3293:1;3290;3283:12;3307:308;3369:4;3459:18;3451:6;3448:30;3445:56;;;3481:18;;:::i;:::-;3445:56;3519:29;3541:6;3519:29;:::i;:::-;3511:37;;3603:4;3597;3593:15;3585:23;;3307:308;;;:::o;3621:307::-;3689:1;3699:113;3713:6;3710:1;3707:13;3699:113;;;3798:1;3793:3;3789:11;3783:18;3779:1;3774:3;3770:11;3763:39;3735:2;3732:1;3728:10;3723:15;;3699:113;;;3830:6;3827:1;3824:13;3821:101;;;3910:1;3901:6;3896:3;3892:16;3885:27;3821:101;3670:258;3621:307;;;:::o;3934:421::-;4023:5;4048:66;4064:49;4106:6;4064:49;:::i;:::-;4048:66;:::i;:::-;4039:75;;4137:6;4130:5;4123:21;4175:4;4168:5;4164:16;4213:3;4204:6;4199:3;4195:16;4192:25;4189:112;;;4220:79;;:::i;:::-;4189:112;4310:39;4342:6;4337:3;4332;4310:39;:::i;:::-;4029:326;3934:421;;;;;:::o;4375:355::-;4442:5;4491:3;4484:4;4476:6;4472:17;4468:27;4458:122;;4499:79;;:::i;:::-;4458:122;4609:6;4603:13;4634:90;4720:3;4712:6;4705:4;4697:6;4693:17;4634:90;:::i;:::-;4625:99;;4448:282;4375:355;;;;:::o;4753:893::-;4868:5;4893:89;4909:72;4974:6;4909:72;:::i;:::-;4893:89;:::i;:::-;4884:98;;5002:5;5055:4;5047:6;5043:17;5035:6;5031:30;5084:3;5076:6;5073:15;5070:122;;;5103:79;;:::i;:::-;5070:122;5218:6;5201:439;5235:6;5230:3;5227:15;5201:439;;;5317:3;5311:10;5353:18;5340:11;5337:35;5334:122;;;5375:79;;:::i;:::-;5334:122;5499:11;5491:6;5487:24;5537:58;5591:3;5579:10;5537:58;:::i;:::-;5532:3;5525:71;5625:4;5620:3;5616:14;5609:21;;5277:363;;5261:4;5256:3;5252:14;5245:21;;5201:439;;;5205:21;4874:772;;4753:893;;;;;:::o;5669:381::-;5759:5;5808:3;5801:4;5793:6;5789:17;5785:27;5775:122;;5816:79;;:::i;:::-;5775:122;5920:4;5942:102;6040:3;6032:6;6024;5942:102;:::i;:::-;5933:111;;5765:285;5669:381;;;;:::o;6056:77::-;6093:7;6122:5;6111:16;;6056:77;;;:::o;6139:122::-;6212:24;6230:5;6212:24;:::i;:::-;6205:5;6202:35;6192:63;;6251:1;6248;6241:12;6192:63;6139:122;:::o;6267:143::-;6324:5;6355:6;6349:13;6340:22;;6371:33;6398:5;6371:33;:::i;:::-;6267:143;;;;:::o;6416:1349::-;6562:6;6570;6578;6586;6594;6602;6651:3;6639:9;6630:7;6626:23;6622:33;6619:120;;;6658:79;;:::i;:::-;6619:120;6778:1;6803:64;6859:7;6850:6;6839:9;6835:22;6803:64;:::i;:::-;6793:74;;6749:128;6916:2;6942:64;6998:7;6989:6;6978:9;6974:22;6942:64;:::i;:::-;6932:74;;6887:129;7055:2;7081:63;7136:7;7127:6;7116:9;7112:22;7081:63;:::i;:::-;7071:73;;7026:128;7193:2;7219:63;7274:7;7265:6;7254:9;7250:22;7219:63;:::i;:::-;7209:73;;7164:128;7352:3;7341:9;7337:19;7331:26;7384:18;7376:6;7373:30;7370:117;;;7406:79;;:::i;:::-;7370:117;7511:97;7600:7;7591:6;7580:9;7576:22;7511:97;:::i;:::-;7501:107;;7302:316;7657:3;7684:64;7740:7;7731:6;7720:9;7716:22;7684:64;:::i;:::-;7674:74;;7628:130;6416:1349;;;;;;;;:::o;7771:180::-;7819:77;7816:1;7809:88;7916:4;7913:1;7906:15;7940:4;7937:1;7930:15;7957:320;8001:6;8038:1;8032:4;8028:12;8018:22;;8085:1;8079:4;8075:12;8106:18;8096:81;;8162:4;8154:6;8150:17;8140:27;;8096:81;8224:2;8216:6;8213:14;8193:18;8190:38;8187:84;;;8243:18;;:::i;:::-;8187:84;8008:269;7957:320;;;:::o;541:3902:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2121":{"entryPoint":8129,"id":2121,"parameterSlots":4,"returnSlots":0},"@_approve_1954":{"entryPoint":5144,"id":1954,"parameterSlots":2,"returnSlots":0},"@_baseURI_1391":{"entryPoint":7497,"id":1391,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2108":{"entryPoint":7835,"id":2108,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_2062":{"entryPoint":8135,"id":2062,"parameterSlots":4,"returnSlots":1},"@_checkOwner_1119":{"entryPoint":6655,"id":1119,"parameterSlots":0,"returnSlots":0},"@_exists_1623":{"entryPoint":7624,"id":1623,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1657":{"entryPoint":5744,"id":1657,"parameterSlots":2,"returnSlots":1},"@_mint_1778":{"entryPoint":9223,"id":1778,"parameterSlots":2,"returnSlots":0},"@_msgSender_2750":{"entryPoint":5136,"id":2750,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1605":{"entryPoint":6781,"id":1605,"parameterSlots":1,"returnSlots":1},"@_requireMinted_2000":{"entryPoint":5061,"id":2000,"parameterSlots":1,"returnSlots":0},"@_safeMint_1672":{"entryPoint":7689,"id":1672,"parameterSlots":2,"returnSlots":0},"@_safeMint_1701":{"entryPoint":8758,"id":1701,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_1592":{"entryPoint":7405,"id":1592,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1986":{"entryPoint":7040,"id":1986,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_2350":{"entryPoint":7719,"id":2350,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_1176":{"entryPoint":6842,"id":1176,"parameterSlots":1,"returnSlots":0},"@_transfer_1930":{"entryPoint":5893,"id":1930,"parameterSlots":3,"returnSlots":0},"@approve_1434":{"entryPoint":1975,"id":1434,"parameterSlots":2,"returnSlots":0},"@balanceOf_1295":{"entryPoint":3119,"id":1295,"parameterSlots":1,"returnSlots":1},"@fulfillRandomWords_4449":{"entryPoint":5329,"id":4449,"parameterSlots":2,"returnSlots":0},"@getApproved_1452":{"entryPoint":1905,"id":1452,"parameterSlots":1,"returnSlots":1},"@getBreedFromModdedRng_4544":{"entryPoint":3594,"id":4544,"parameterSlots":1,"returnSlots":1},"@getChanceArray_4557":{"entryPoint":2931,"id":4557,"parameterSlots":0,"returnSlots":1},"@getDogTokenUris_4585":{"entryPoint":2543,"id":4585,"parameterSlots":1,"returnSlots":1},"@getMintFee_4573":{"entryPoint":3323,"id":4573,"parameterSlots":0,"returnSlots":1},"@getTokenCounter_4565":{"entryPoint":3109,"id":4565,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_1487":{"entryPoint":4675,"id":1487,"parameterSlots":2,"returnSlots":1},"@isContract_2426":{"entryPoint":8849,"id":2426,"parameterSlots":1,"returnSlots":1},"@log10_3673":{"entryPoint":8884,"id":3673,"parameterSlots":1,"returnSlots":1},"@name_1333":{"entryPoint":1759,"id":1333,"parameterSlots":0,"returnSlots":1},"@ownerOf_1323":{"entryPoint":2974,"id":1323,"parameterSlots":1,"returnSlots":1},"@owner_1105":{"entryPoint":3333,"id":1105,"parameterSlots":0,"returnSlots":1},"@rawFulfillRandomWords_238":{"entryPoint":2255,"id":238,"parameterSlots":2,"returnSlots":0},"@renounceOwnership_1133":{"entryPoint":3303,"id":1133,"parameterSlots":0,"returnSlots":0},"@requestNft_4390":{"entryPoint":3820,"id":4390,"parameterSlots":0,"returnSlots":1},"@s_requestIdToSender_4273":{"entryPoint":3543,"id":4273,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1533":{"entryPoint":2899,"id":1533,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1563":{"entryPoint":4302,"id":1563,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1469":{"entryPoint":3521,"id":1469,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1271":{"entryPoint":1533,"id":1271,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2958":{"entryPoint":4955,"id":2958,"parameterSlots":1,"returnSlots":1},"@symbol_1343":{"entryPoint":3375,"id":1343,"parameterSlots":0,"returnSlots":1},"@toString_2818":{"entryPoint":8542,"id":2818,"parameterSlots":1,"returnSlots":1},"@tokenURI_1382":{"entryPoint":7520,"id":1382,"parameterSlots":1,"returnSlots":1},"@tokenURI_2328":{"entryPoint":4400,"id":2328,"parameterSlots":1,"returnSlots":1},"@transferFrom_1514":{"entryPoint":2447,"id":1514,"parameterSlots":3,"returnSlots":0},"@transferOwnership_1156":{"entryPoint":4823,"id":1156,"parameterSlots":1,"returnSlots":0},"@withdraw_4483":{"entryPoint":2719,"id":4483,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10832,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":11766,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":10570,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10937,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":11466,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":10049,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":14887,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":11832,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":10389,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":13429,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11398,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":12009,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":11075,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":11878,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":11487,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10591,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":10070,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":14908,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":10410,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":13450,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10983,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":11205,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":10505,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":11242,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":10127,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":13236,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":14754,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_Breed_$4254_to_t_uint8_fromStack":{"entryPoint":11655,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":10265,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13506,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":12582,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":14461,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":13670,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":13953,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":15102,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":14099,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":14315,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":12953,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack":{"entryPoint":14607,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":14994,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":14207,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":12807,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":12249,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12710,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":12395,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":13300,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":11190,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":11356,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":13331,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":13271,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":13555,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12745,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10520,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":12462,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":14811,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed":{"entryPoint":11329,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":10142,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":13346,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_enum$_Breed_$4254__to_t_uint8__fromStack_reversed":{"entryPoint":11670,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_Breed_$4254_t_address__to_t_uint8_t_address__fromStack_reversed":{"entryPoint":13833,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10322,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12617,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14496,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13705,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15137,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14134,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14350,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14642,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15029,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12284,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12430,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":11371,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":10756,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":9962,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10783,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":11702,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":11180,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":11158,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":14726,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":10169,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":11229,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":11169,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":14737,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12696,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":10180,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13495,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":13067,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":14674,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":10487,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":10115,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":13226,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":9982,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Breed_$4254":{"entryPoint":11618,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":13286,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":10455,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":10356,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":13315,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":13251,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_Breed_$4254_to_t_uint8":{"entryPoint":11637,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":11751,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":10197,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":12120,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":10707,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":13153,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":13784,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":13020,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":13737,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":11551,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":12073,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":12649,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10660,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":10655,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":10827,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":11697,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":9977,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":9972,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":10248,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":12503,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":14382,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":13591,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":13874,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":15061,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":14020,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":14274,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":12874,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4":{"entryPoint":14528,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":14953,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":14166,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":12766,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":12170,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":12707,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":12316,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_Breed_$4254":{"entryPoint":11598,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":10547,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":11443,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":10026,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":10366,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:38333:25","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:25","statements":[{"nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:25"},"nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:25"},"nodeType":"YulFunctionCall","src":"187:12:25"},"nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:25"},"nodeType":"YulFunctionCall","src":"310:12:25"},"nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nodeType":"YulBlock","src":"378:105:25","statements":[{"nodeType":"YulAssignment","src":"388:89:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:25","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:25"},"nodeType":"YulFunctionCall","src":"399:78:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:25"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:25","type":""}],"src":"334:149:25"},{"body":{"nodeType":"YulBlock","src":"531:78:25","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:25"},"nodeType":"YulFunctionCall","src":"589:12:25"},"nodeType":"YulExpressionStatement","src":"589:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:25"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:25"},"nodeType":"YulFunctionCall","src":"561:23:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:25"},"nodeType":"YulFunctionCall","src":"551:34:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:25"},"nodeType":"YulFunctionCall","src":"544:42:25"},"nodeType":"YulIf","src":"541:62:25"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:25","type":""}],"src":"489:120:25"},{"body":{"nodeType":"YulBlock","src":"666:86:25","statements":[{"nodeType":"YulAssignment","src":"676:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:25"},"nodeType":"YulFunctionCall","src":"685:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:25"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:25"},"nodeType":"YulFunctionCall","src":"714:32:25"},"nodeType":"YulExpressionStatement","src":"714:32:25"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:25","type":""}],"src":"615:137:25"},{"body":{"nodeType":"YulBlock","src":"823:262:25","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:25"},"nodeType":"YulFunctionCall","src":"871:79:25"},"nodeType":"YulExpressionStatement","src":"871:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:25"},"nodeType":"YulFunctionCall","src":"840:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:25"},"nodeType":"YulFunctionCall","src":"836:32:25"},"nodeType":"YulIf","src":"833:119:25"},{"nodeType":"YulBlock","src":"962:116:25","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:25"},"nodeType":"YulFunctionCall","src":"1036:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:25"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:25"},"nodeType":"YulFunctionCall","src":"1016:52:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:25","type":""}],"src":"758:327:25"},{"body":{"nodeType":"YulBlock","src":"1133:48:25","statements":[{"nodeType":"YulAssignment","src":"1143:32:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:25"},"nodeType":"YulFunctionCall","src":"1161:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:25"},"nodeType":"YulFunctionCall","src":"1154:21:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:25"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:25","type":""}],"src":"1091:90:25"},{"body":{"nodeType":"YulBlock","src":"1246:50:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:25"},"nodeType":"YulFunctionCall","src":"1268:21:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:25"},"nodeType":"YulFunctionCall","src":"1256:34:25"},"nodeType":"YulExpressionStatement","src":"1256:34:25"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:25","type":""}],"src":"1187:109:25"},{"body":{"nodeType":"YulBlock","src":"1394:118:25","statements":[{"nodeType":"YulAssignment","src":"1404:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:25"},"nodeType":"YulFunctionCall","src":"1412:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:25"},"nodeType":"YulFunctionCall","src":"1487:17:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:25"},"nodeType":"YulFunctionCall","src":"1440:65:25"},"nodeType":"YulExpressionStatement","src":"1440:65:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:25","type":""}],"src":"1302:210:25"},{"body":{"nodeType":"YulBlock","src":"1577:40:25","statements":[{"nodeType":"YulAssignment","src":"1588:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:25"},"nodeType":"YulFunctionCall","src":"1598:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:25","type":""}],"src":"1518:99:25"},{"body":{"nodeType":"YulBlock","src":"1719:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:25"},"nodeType":"YulFunctionCall","src":"1729:19:25"},"nodeType":"YulExpressionStatement","src":"1729:19:25"},{"nodeType":"YulAssignment","src":"1757:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:25"},"nodeType":"YulFunctionCall","src":"1772:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:25","type":""}],"src":"1623:169:25"},{"body":{"nodeType":"YulBlock","src":"1847:258:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:25"},"nodeType":"YulFunctionCall","src":"1947:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:25"},"nodeType":"YulFunctionCall","src":"1966:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:25"},"nodeType":"YulFunctionCall","src":"1960:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:25"},"nodeType":"YulFunctionCall","src":"1940:39:25"},"nodeType":"YulExpressionStatement","src":"1940:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:25"},"nodeType":"YulFunctionCall","src":"1884:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:25","statements":[{"nodeType":"YulAssignment","src":"1900:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:25"},"nodeType":"YulFunctionCall","src":"1905:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:25","statements":[]},"src":"1876:113:25"},{"body":{"nodeType":"YulBlock","src":"2023:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:25"},"nodeType":"YulFunctionCall","src":"2069:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:25"},"nodeType":"YulFunctionCall","src":"2062:27:25"},"nodeType":"YulExpressionStatement","src":"2062:27:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:25"},"nodeType":"YulFunctionCall","src":"2001:13:25"},"nodeType":"YulIf","src":"1998:101:25"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:25","type":""}],"src":"1798:307:25"},{"body":{"nodeType":"YulBlock","src":"2159:54:25","statements":[{"nodeType":"YulAssignment","src":"2169:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:25"},"nodeType":"YulFunctionCall","src":"2183:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:25"},"nodeType":"YulFunctionCall","src":"2199:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:25"},"nodeType":"YulFunctionCall","src":"2179:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:25","type":""}],"src":"2111:102:25"},{"body":{"nodeType":"YulBlock","src":"2311:272:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:25"},"nodeType":"YulFunctionCall","src":"2335:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:25","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:25"},"nodeType":"YulFunctionCall","src":"2390:71:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:25"},"nodeType":"YulFunctionCall","src":"2492:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:25"},"nodeType":"YulFunctionCall","src":"2470:52:25"},"nodeType":"YulExpressionStatement","src":"2470:52:25"},{"nodeType":"YulAssignment","src":"2531:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:25"},"nodeType":"YulFunctionCall","src":"2547:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:25"},"nodeType":"YulFunctionCall","src":"2538:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:25","type":""}],"src":"2219:364:25"},{"body":{"nodeType":"YulBlock","src":"2707:195:25","statements":[{"nodeType":"YulAssignment","src":"2717:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:25"},"nodeType":"YulFunctionCall","src":"2725:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:25"},"nodeType":"YulFunctionCall","src":"2760:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:25"},"nodeType":"YulFunctionCall","src":"2779:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:25"},"nodeType":"YulFunctionCall","src":"2753:47:25"},"nodeType":"YulExpressionStatement","src":"2753:47:25"},{"nodeType":"YulAssignment","src":"2809:86:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:25"},"nodeType":"YulFunctionCall","src":"2817:78:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:25","type":""}],"src":"2589:313:25"},{"body":{"nodeType":"YulBlock","src":"2953:32:25","statements":[{"nodeType":"YulAssignment","src":"2963:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:25","type":""}],"src":"2908:77:25"},{"body":{"nodeType":"YulBlock","src":"3034:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:25"},"nodeType":"YulFunctionCall","src":"3093:12:25"},"nodeType":"YulExpressionStatement","src":"3093:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:25"},"nodeType":"YulFunctionCall","src":"3064:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:25"},"nodeType":"YulFunctionCall","src":"3054:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:25"},"nodeType":"YulFunctionCall","src":"3047:43:25"},"nodeType":"YulIf","src":"3044:63:25"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:25","type":""}],"src":"2991:122:25"},{"body":{"nodeType":"YulBlock","src":"3171:87:25","statements":[{"nodeType":"YulAssignment","src":"3181:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:25"},"nodeType":"YulFunctionCall","src":"3190:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:25"},"nodeType":"YulFunctionCall","src":"3219:33:25"},"nodeType":"YulExpressionStatement","src":"3219:33:25"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:25","type":""}],"src":"3119:139:25"},{"body":{"nodeType":"YulBlock","src":"3330:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:25"},"nodeType":"YulFunctionCall","src":"3378:79:25"},"nodeType":"YulExpressionStatement","src":"3378:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:25"},"nodeType":"YulFunctionCall","src":"3347:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:25"},"nodeType":"YulFunctionCall","src":"3343:32:25"},"nodeType":"YulIf","src":"3340:119:25"},{"nodeType":"YulBlock","src":"3469:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:25","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:25"},"nodeType":"YulFunctionCall","src":"3544:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:25"},"nodeType":"YulFunctionCall","src":"3523:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:25","type":""}],"src":"3264:329:25"},{"body":{"nodeType":"YulBlock","src":"3644:81:25","statements":[{"nodeType":"YulAssignment","src":"3654:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:25"},"nodeType":"YulFunctionCall","src":"3665:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:25","type":""}],"src":"3599:126:25"},{"body":{"nodeType":"YulBlock","src":"3776:51:25","statements":[{"nodeType":"YulAssignment","src":"3786:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:25"},"nodeType":"YulFunctionCall","src":"3797:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:25","type":""}],"src":"3731:96:25"},{"body":{"nodeType":"YulBlock","src":"3898:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:25"},"nodeType":"YulFunctionCall","src":"3920:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:25"},"nodeType":"YulFunctionCall","src":"3908:37:25"},"nodeType":"YulExpressionStatement","src":"3908:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:25","type":""}],"src":"3833:118:25"},{"body":{"nodeType":"YulBlock","src":"4055:124:25","statements":[{"nodeType":"YulAssignment","src":"4065:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:25"},"nodeType":"YulFunctionCall","src":"4073:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:25"},"nodeType":"YulFunctionCall","src":"4154:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:25"},"nodeType":"YulFunctionCall","src":"4101:71:25"},"nodeType":"YulExpressionStatement","src":"4101:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:25","type":""}],"src":"3957:222:25"},{"body":{"nodeType":"YulBlock","src":"4228:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:25"},"nodeType":"YulFunctionCall","src":"4287:12:25"},"nodeType":"YulExpressionStatement","src":"4287:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:25"},"nodeType":"YulFunctionCall","src":"4258:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:25"},"nodeType":"YulFunctionCall","src":"4248:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:25"},"nodeType":"YulFunctionCall","src":"4241:43:25"},"nodeType":"YulIf","src":"4238:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:25","type":""}],"src":"4185:122:25"},{"body":{"nodeType":"YulBlock","src":"4365:87:25","statements":[{"nodeType":"YulAssignment","src":"4375:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:25"},"nodeType":"YulFunctionCall","src":"4384:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:25"},"nodeType":"YulFunctionCall","src":"4413:33:25"},"nodeType":"YulExpressionStatement","src":"4413:33:25"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:25","type":""}],"src":"4313:139:25"},{"body":{"nodeType":"YulBlock","src":"4541:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:25"},"nodeType":"YulFunctionCall","src":"4589:79:25"},"nodeType":"YulExpressionStatement","src":"4589:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:25"},"nodeType":"YulFunctionCall","src":"4558:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:25"},"nodeType":"YulFunctionCall","src":"4554:32:25"},"nodeType":"YulIf","src":"4551:119:25"},{"nodeType":"YulBlock","src":"4680:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:25"},"nodeType":"YulFunctionCall","src":"4755:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:25"},"nodeType":"YulFunctionCall","src":"4734:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:25"}]}]},{"nodeType":"YulBlock","src":"4807:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:25"},"nodeType":"YulFunctionCall","src":"4883:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:25"},"nodeType":"YulFunctionCall","src":"4862:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:25","type":""}],"src":"4458:474:25"},{"body":{"nodeType":"YulBlock","src":"5027:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5044:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5047:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5037:6:25"},"nodeType":"YulFunctionCall","src":"5037:12:25"},"nodeType":"YulExpressionStatement","src":"5037:12:25"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"4938:117:25"},{"body":{"nodeType":"YulBlock","src":"5089:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5106:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5109:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5099:6:25"},"nodeType":"YulFunctionCall","src":"5099:88:25"},"nodeType":"YulExpressionStatement","src":"5099:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5203:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5206:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5196:6:25"},"nodeType":"YulFunctionCall","src":"5196:15:25"},"nodeType":"YulExpressionStatement","src":"5196:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5227:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5230:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5220:6:25"},"nodeType":"YulFunctionCall","src":"5220:15:25"},"nodeType":"YulExpressionStatement","src":"5220:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5061:180:25"},{"body":{"nodeType":"YulBlock","src":"5290:238:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5300:58:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5322:6:25"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5352:4:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5330:21:25"},"nodeType":"YulFunctionCall","src":"5330:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5318:3:25"},"nodeType":"YulFunctionCall","src":"5318:40:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5304:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"5469:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5471:16:25"},"nodeType":"YulFunctionCall","src":"5471:18:25"},"nodeType":"YulExpressionStatement","src":"5471:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5412:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"5424:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5409:2:25"},"nodeType":"YulFunctionCall","src":"5409:34:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5448:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5460:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5445:2:25"},"nodeType":"YulFunctionCall","src":"5445:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5406:2:25"},"nodeType":"YulFunctionCall","src":"5406:62:25"},"nodeType":"YulIf","src":"5403:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5507:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5511:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5500:6:25"},"nodeType":"YulFunctionCall","src":"5500:22:25"},"nodeType":"YulExpressionStatement","src":"5500:22:25"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5276:6:25","type":""},{"name":"size","nodeType":"YulTypedName","src":"5284:4:25","type":""}],"src":"5247:281:25"},{"body":{"nodeType":"YulBlock","src":"5575:88:25","statements":[{"nodeType":"YulAssignment","src":"5585:30:25","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5595:18:25"},"nodeType":"YulFunctionCall","src":"5595:20:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5585:6:25"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5644:6:25"},{"name":"size","nodeType":"YulIdentifier","src":"5652:4:25"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5624:19:25"},"nodeType":"YulFunctionCall","src":"5624:33:25"},"nodeType":"YulExpressionStatement","src":"5624:33:25"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5559:4:25","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5568:6:25","type":""}],"src":"5534:129:25"},{"body":{"nodeType":"YulBlock","src":"5751:229:25","statements":[{"body":{"nodeType":"YulBlock","src":"5856:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5858:16:25"},"nodeType":"YulFunctionCall","src":"5858:18:25"},"nodeType":"YulExpressionStatement","src":"5858:18:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5828:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"5836:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5825:2:25"},"nodeType":"YulFunctionCall","src":"5825:30:25"},"nodeType":"YulIf","src":"5822:56:25"},{"nodeType":"YulAssignment","src":"5888:25:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5900:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"5908:4:25","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5896:3:25"},"nodeType":"YulFunctionCall","src":"5896:17:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5888:4:25"}]},{"nodeType":"YulAssignment","src":"5950:23:25","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5962:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"5968:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5958:3:25"},"nodeType":"YulFunctionCall","src":"5958:15:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5950:4:25"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5735:6:25","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5746:4:25","type":""}],"src":"5669:311:25"},{"body":{"nodeType":"YulBlock","src":"6075:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6092:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6095:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6085:6:25"},"nodeType":"YulFunctionCall","src":"6085:12:25"},"nodeType":"YulExpressionStatement","src":"6085:12:25"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"5986:117:25"},{"body":{"nodeType":"YulBlock","src":"6228:608:25","statements":[{"nodeType":"YulAssignment","src":"6238:90:25","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6320:6:25"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6263:56:25"},"nodeType":"YulFunctionCall","src":"6263:64:25"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6247:15:25"},"nodeType":"YulFunctionCall","src":"6247:81:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6238:5:25"}]},{"nodeType":"YulVariableDeclaration","src":"6337:16:25","value":{"name":"array","nodeType":"YulIdentifier","src":"6348:5:25"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6341:3:25","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6370:5:25"},{"name":"length","nodeType":"YulIdentifier","src":"6377:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6363:6:25"},"nodeType":"YulFunctionCall","src":"6363:21:25"},"nodeType":"YulExpressionStatement","src":"6363:21:25"},{"nodeType":"YulAssignment","src":"6393:23:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6404:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"6411:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6400:3:25"},"nodeType":"YulFunctionCall","src":"6400:16:25"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6393:3:25"}]},{"nodeType":"YulVariableDeclaration","src":"6426:44:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6444:6:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6456:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6464:4:25","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6452:3:25"},"nodeType":"YulFunctionCall","src":"6452:17:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6440:3:25"},"nodeType":"YulFunctionCall","src":"6440:30:25"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6430:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"6498:103:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6512:77:25"},"nodeType":"YulFunctionCall","src":"6512:79:25"},"nodeType":"YulExpressionStatement","src":"6512:79:25"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6485:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"6493:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6482:2:25"},"nodeType":"YulFunctionCall","src":"6482:15:25"},"nodeType":"YulIf","src":"6479:122:25"},{"body":{"nodeType":"YulBlock","src":"6686:144:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6701:21:25","value":{"name":"src","nodeType":"YulIdentifier","src":"6719:3:25"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"6705:10:25","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6743:3:25"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"6769:10:25"},{"name":"end","nodeType":"YulIdentifier","src":"6781:3:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6748:20:25"},"nodeType":"YulFunctionCall","src":"6748:37:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6736:6:25"},"nodeType":"YulFunctionCall","src":"6736:50:25"},"nodeType":"YulExpressionStatement","src":"6736:50:25"},{"nodeType":"YulAssignment","src":"6799:21:25","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6810:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"6815:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6806:3:25"},"nodeType":"YulFunctionCall","src":"6806:14:25"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6799:3:25"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6639:3:25"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6644:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6636:2:25"},"nodeType":"YulFunctionCall","src":"6636:15:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6652:25:25","statements":[{"nodeType":"YulAssignment","src":"6654:21:25","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6665:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"6670:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6661:3:25"},"nodeType":"YulFunctionCall","src":"6661:14:25"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6654:3:25"}]}]},"pre":{"nodeType":"YulBlock","src":"6614:21:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6616:17:25","value":{"name":"offset","nodeType":"YulIdentifier","src":"6627:6:25"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6620:3:25","type":""}]}]},"src":"6610:220:25"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6198:6:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"6206:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"6214:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6222:5:25","type":""}],"src":"6126:710:25"},{"body":{"nodeType":"YulBlock","src":"6936:293:25","statements":[{"body":{"nodeType":"YulBlock","src":"6985:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6987:77:25"},"nodeType":"YulFunctionCall","src":"6987:79:25"},"nodeType":"YulExpressionStatement","src":"6987:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6964:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6972:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6960:3:25"},"nodeType":"YulFunctionCall","src":"6960:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"6979:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6956:3:25"},"nodeType":"YulFunctionCall","src":"6956:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6949:6:25"},"nodeType":"YulFunctionCall","src":"6949:35:25"},"nodeType":"YulIf","src":"6946:122:25"},{"nodeType":"YulVariableDeclaration","src":"7077:34:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7104:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7091:12:25"},"nodeType":"YulFunctionCall","src":"7091:20:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7081:6:25","type":""}]},{"nodeType":"YulAssignment","src":"7120:103:25","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7196:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7204:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7192:3:25"},"nodeType":"YulFunctionCall","src":"7192:17:25"},{"name":"length","nodeType":"YulIdentifier","src":"7211:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"7219:3:25"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7129:62:25"},"nodeType":"YulFunctionCall","src":"7129:94:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7120:5:25"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6914:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"6922:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6930:5:25","type":""}],"src":"6859:370:25"},{"body":{"nodeType":"YulBlock","src":"7343:576:25","statements":[{"body":{"nodeType":"YulBlock","src":"7389:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7391:77:25"},"nodeType":"YulFunctionCall","src":"7391:79:25"},"nodeType":"YulExpressionStatement","src":"7391:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7364:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"7373:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7360:3:25"},"nodeType":"YulFunctionCall","src":"7360:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"7385:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7356:3:25"},"nodeType":"YulFunctionCall","src":"7356:32:25"},"nodeType":"YulIf","src":"7353:119:25"},{"nodeType":"YulBlock","src":"7482:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7497:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7511:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7501:6:25","type":""}]},{"nodeType":"YulAssignment","src":"7526:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7561:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"7572:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7557:3:25"},"nodeType":"YulFunctionCall","src":"7557:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7581:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7536:20:25"},"nodeType":"YulFunctionCall","src":"7536:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7526:6:25"}]}]},{"nodeType":"YulBlock","src":"7609:303:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7624:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7655:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7666:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7651:3:25"},"nodeType":"YulFunctionCall","src":"7651:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7638:12:25"},"nodeType":"YulFunctionCall","src":"7638:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7628:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"7717:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7719:77:25"},"nodeType":"YulFunctionCall","src":"7719:79:25"},"nodeType":"YulExpressionStatement","src":"7719:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7689:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7697:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7686:2:25"},"nodeType":"YulFunctionCall","src":"7686:30:25"},"nodeType":"YulIf","src":"7683:117:25"},{"nodeType":"YulAssignment","src":"7814:88:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7874:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"7885:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7870:3:25"},"nodeType":"YulFunctionCall","src":"7870:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7894:7:25"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7824:45:25"},"nodeType":"YulFunctionCall","src":"7824:78:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7814:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7305:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7316:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7328:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7336:6:25","type":""}],"src":"7235:684:25"},{"body":{"nodeType":"YulBlock","src":"8025:519:25","statements":[{"body":{"nodeType":"YulBlock","src":"8071:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8073:77:25"},"nodeType":"YulFunctionCall","src":"8073:79:25"},"nodeType":"YulExpressionStatement","src":"8073:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8046:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"8055:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8042:3:25"},"nodeType":"YulFunctionCall","src":"8042:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"8067:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8038:3:25"},"nodeType":"YulFunctionCall","src":"8038:32:25"},"nodeType":"YulIf","src":"8035:119:25"},{"nodeType":"YulBlock","src":"8164:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8179:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"8193:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8183:6:25","type":""}]},{"nodeType":"YulAssignment","src":"8208:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8243:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8254:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8239:3:25"},"nodeType":"YulFunctionCall","src":"8239:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8263:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8218:20:25"},"nodeType":"YulFunctionCall","src":"8218:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8208:6:25"}]}]},{"nodeType":"YulBlock","src":"8291:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8306:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"8320:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8310:6:25","type":""}]},{"nodeType":"YulAssignment","src":"8336:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8371:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8382:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8367:3:25"},"nodeType":"YulFunctionCall","src":"8367:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8391:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8346:20:25"},"nodeType":"YulFunctionCall","src":"8346:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8336:6:25"}]}]},{"nodeType":"YulBlock","src":"8419:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8434:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"8448:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8438:6:25","type":""}]},{"nodeType":"YulAssignment","src":"8464:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8499:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8510:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8495:3:25"},"nodeType":"YulFunctionCall","src":"8495:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8519:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8474:20:25"},"nodeType":"YulFunctionCall","src":"8474:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8464:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7979:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7990:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8002:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8010:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8018:6:25","type":""}],"src":"7925:619:25"},{"body":{"nodeType":"YulBlock","src":"8622:32:25","statements":[{"nodeType":"YulAssignment","src":"8633:14:25","value":{"kind":"number","nodeType":"YulLiteral","src":"8643:4:25","type":"","value":"0x03"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8633:6:25"}]}]},"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8605:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8615:6:25","type":""}],"src":"8550:104:25"},{"body":{"nodeType":"YulBlock","src":"8769:34:25","statements":[{"nodeType":"YulAssignment","src":"8779:18:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"8794:3:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8779:11:25"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8741:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"8746:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8757:11:25","type":""}],"src":"8660:143:25"},{"body":{"nodeType":"YulBlock","src":"8879:28:25","statements":[{"nodeType":"YulAssignment","src":"8889:11:25","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8897:3:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8889:4:25"}]}]},"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8866:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8874:4:25","type":""}],"src":"8809:98:25"},{"body":{"nodeType":"YulBlock","src":"8968:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8985:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9008:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8990:17:25"},"nodeType":"YulFunctionCall","src":"8990:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8978:6:25"},"nodeType":"YulFunctionCall","src":"8978:37:25"},"nodeType":"YulExpressionStatement","src":"8978:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8956:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8963:3:25","type":""}],"src":"8913:108:25"},{"body":{"nodeType":"YulBlock","src":"9107:99:25","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9151:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"9159:3:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9117:33:25"},"nodeType":"YulFunctionCall","src":"9117:46:25"},"nodeType":"YulExpressionStatement","src":"9117:46:25"},{"nodeType":"YulAssignment","src":"9172:28:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9190:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"9195:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9186:3:25"},"nodeType":"YulFunctionCall","src":"9186:14:25"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"9172:10:25"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"9080:6:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9088:3:25","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"9096:10:25","type":""}],"src":"9027:179:25"},{"body":{"nodeType":"YulBlock","src":"9285:38:25","statements":[{"nodeType":"YulAssignment","src":"9295:22:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9307:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"9312:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9303:3:25"},"nodeType":"YulFunctionCall","src":"9303:14:25"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"9295:4:25"}]}]},"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9272:3:25","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"9280:4:25","type":""}],"src":"9212:111:25"},{"body":{"nodeType":"YulBlock","src":"9473:582:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9483:66:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9543:5:25"}],"functionName":{"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"9497:45:25"},"nodeType":"YulFunctionCall","src":"9497:52:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9487:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9558:91:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9637:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"9642:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9565:71:25"},"nodeType":"YulFunctionCall","src":"9565:84:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9558:3:25"}]},{"nodeType":"YulVariableDeclaration","src":"9658:69:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9721:5:25"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"9673:47:25"},"nodeType":"YulFunctionCall","src":"9673:54:25"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"9662:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9736:21:25","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"9750:7:25"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"9740:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"9826:222:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9840:34:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9867:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9861:5:25"},"nodeType":"YulFunctionCall","src":"9861:13:25"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"9844:13:25","type":""}]},{"nodeType":"YulAssignment","src":"9887:70:25","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"9938:13:25"},{"name":"pos","nodeType":"YulIdentifier","src":"9953:3:25"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9894:43:25"},"nodeType":"YulFunctionCall","src":"9894:63:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9887:3:25"}]},{"nodeType":"YulAssignment","src":"9970:68:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10031:6:25"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"9980:50:25"},"nodeType":"YulFunctionCall","src":"9980:58:25"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9970:6:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9788:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"9791:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9785:2:25"},"nodeType":"YulFunctionCall","src":"9785:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9799:18:25","statements":[{"nodeType":"YulAssignment","src":"9801:14:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9810:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"9813:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9806:3:25"},"nodeType":"YulFunctionCall","src":"9806:9:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9801:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"9770:14:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9772:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9781:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9776:1:25","type":""}]}]},"src":"9766:282:25"}]},"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9460:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9467:3:25","type":""}],"src":"9361:694:25"},{"body":{"nodeType":"YulBlock","src":"10205:170:25","statements":[{"nodeType":"YulAssignment","src":"10215:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10227:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10238:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10223:3:25"},"nodeType":"YulFunctionCall","src":"10223:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10215:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10341:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10354:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10365:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10350:3:25"},"nodeType":"YulFunctionCall","src":"10350:17:25"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10251:89:25"},"nodeType":"YulFunctionCall","src":"10251:117:25"},"nodeType":"YulExpressionStatement","src":"10251:117:25"}]},"name":"abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10177:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10189:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10200:4:25","type":""}],"src":"10061:314:25"},{"body":{"nodeType":"YulBlock","src":"10446:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10463:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10486:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10468:17:25"},"nodeType":"YulFunctionCall","src":"10468:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10456:6:25"},"nodeType":"YulFunctionCall","src":"10456:37:25"},"nodeType":"YulExpressionStatement","src":"10456:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10434:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10441:3:25","type":""}],"src":"10381:118:25"},{"body":{"nodeType":"YulBlock","src":"10603:124:25","statements":[{"nodeType":"YulAssignment","src":"10613:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10625:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10636:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10621:3:25"},"nodeType":"YulFunctionCall","src":"10621:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10613:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10693:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10706:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10717:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10702:3:25"},"nodeType":"YulFunctionCall","src":"10702:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10649:43:25"},"nodeType":"YulFunctionCall","src":"10649:71:25"},"nodeType":"YulExpressionStatement","src":"10649:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10575:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10587:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10598:4:25","type":""}],"src":"10505:222:25"},{"body":{"nodeType":"YulBlock","src":"10799:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"10845:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10847:77:25"},"nodeType":"YulFunctionCall","src":"10847:79:25"},"nodeType":"YulExpressionStatement","src":"10847:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10820:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"10829:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10816:3:25"},"nodeType":"YulFunctionCall","src":"10816:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"10841:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10812:3:25"},"nodeType":"YulFunctionCall","src":"10812:32:25"},"nodeType":"YulIf","src":"10809:119:25"},{"nodeType":"YulBlock","src":"10938:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10953:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10967:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10957:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10982:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11017:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11028:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11013:3:25"},"nodeType":"YulFunctionCall","src":"11013:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11037:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10992:20:25"},"nodeType":"YulFunctionCall","src":"10992:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10982:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10769:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10780:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10792:6:25","type":""}],"src":"10733:329:25"},{"body":{"nodeType":"YulBlock","src":"11108:76:25","statements":[{"body":{"nodeType":"YulBlock","src":"11162:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11171:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11174:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11164:6:25"},"nodeType":"YulFunctionCall","src":"11164:12:25"},"nodeType":"YulExpressionStatement","src":"11164:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11131:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11153:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"11138:14:25"},"nodeType":"YulFunctionCall","src":"11138:21:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11128:2:25"},"nodeType":"YulFunctionCall","src":"11128:32:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11121:6:25"},"nodeType":"YulFunctionCall","src":"11121:40:25"},"nodeType":"YulIf","src":"11118:60:25"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11101:5:25","type":""}],"src":"11068:116:25"},{"body":{"nodeType":"YulBlock","src":"11239:84:25","statements":[{"nodeType":"YulAssignment","src":"11249:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11271:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11258:12:25"},"nodeType":"YulFunctionCall","src":"11258:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11249:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11311:5:25"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"11287:23:25"},"nodeType":"YulFunctionCall","src":"11287:30:25"},"nodeType":"YulExpressionStatement","src":"11287:30:25"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11217:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"11225:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11233:5:25","type":""}],"src":"11190:133:25"},{"body":{"nodeType":"YulBlock","src":"11409:388:25","statements":[{"body":{"nodeType":"YulBlock","src":"11455:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11457:77:25"},"nodeType":"YulFunctionCall","src":"11457:79:25"},"nodeType":"YulExpressionStatement","src":"11457:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11430:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"11439:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11426:3:25"},"nodeType":"YulFunctionCall","src":"11426:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"11451:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11422:3:25"},"nodeType":"YulFunctionCall","src":"11422:32:25"},"nodeType":"YulIf","src":"11419:119:25"},{"nodeType":"YulBlock","src":"11548:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11563:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11577:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11567:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11592:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11627:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11638:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11623:3:25"},"nodeType":"YulFunctionCall","src":"11623:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11647:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11602:20:25"},"nodeType":"YulFunctionCall","src":"11602:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11592:6:25"}]}]},{"nodeType":"YulBlock","src":"11675:115:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11690:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11704:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11694:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11720:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11752:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11763:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11748:3:25"},"nodeType":"YulFunctionCall","src":"11748:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11772:7:25"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"11730:17:25"},"nodeType":"YulFunctionCall","src":"11730:50:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11720:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11371:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11382:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11394:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11402:6:25","type":""}],"src":"11329:468:25"},{"body":{"nodeType":"YulBlock","src":"11831:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11848:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11851:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11841:6:25"},"nodeType":"YulFunctionCall","src":"11841:88:25"},"nodeType":"YulExpressionStatement","src":"11841:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11945:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11948:4:25","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11938:6:25"},"nodeType":"YulFunctionCall","src":"11938:15:25"},"nodeType":"YulExpressionStatement","src":"11938:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11969:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11972:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11962:6:25"},"nodeType":"YulFunctionCall","src":"11962:15:25"},"nodeType":"YulExpressionStatement","src":"11962:15:25"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"11803:180:25"},{"body":{"nodeType":"YulBlock","src":"12042:62:25","statements":[{"body":{"nodeType":"YulBlock","src":"12076:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"12078:16:25"},"nodeType":"YulFunctionCall","src":"12078:18:25"},"nodeType":"YulExpressionStatement","src":"12078:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12065:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"12072:1:25","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12062:2:25"},"nodeType":"YulFunctionCall","src":"12062:12:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12055:6:25"},"nodeType":"YulFunctionCall","src":"12055:20:25"},"nodeType":"YulIf","src":"12052:46:25"}]},"name":"validator_assert_t_enum$_Breed_$4254","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12035:5:25","type":""}],"src":"11989:115:25"},{"body":{"nodeType":"YulBlock","src":"12165:76:25","statements":[{"nodeType":"YulAssignment","src":"12175:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"12186:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12175:7:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12229:5:25"}],"functionName":{"name":"validator_assert_t_enum$_Breed_$4254","nodeType":"YulIdentifier","src":"12192:36:25"},"nodeType":"YulFunctionCall","src":"12192:43:25"},"nodeType":"YulExpressionStatement","src":"12192:43:25"}]},"name":"cleanup_t_enum$_Breed_$4254","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12147:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12157:7:25","type":""}],"src":"12110:131:25"},{"body":{"nodeType":"YulBlock","src":"12315:63:25","statements":[{"nodeType":"YulAssignment","src":"12325:47:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12366:5:25"}],"functionName":{"name":"cleanup_t_enum$_Breed_$4254","nodeType":"YulIdentifier","src":"12338:27:25"},"nodeType":"YulFunctionCall","src":"12338:34:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12325:9:25"}]}]},"name":"convert_t_enum$_Breed_$4254_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12295:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12305:9:25","type":""}],"src":"12247:131:25"},{"body":{"nodeType":"YulBlock","src":"12457:74:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12474:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12518:5:25"}],"functionName":{"name":"convert_t_enum$_Breed_$4254_to_t_uint8","nodeType":"YulIdentifier","src":"12479:38:25"},"nodeType":"YulFunctionCall","src":"12479:45:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12467:6:25"},"nodeType":"YulFunctionCall","src":"12467:58:25"},"nodeType":"YulExpressionStatement","src":"12467:58:25"}]},"name":"abi_encode_t_enum$_Breed_$4254_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12445:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12452:3:25","type":""}],"src":"12384:147:25"},{"body":{"nodeType":"YulBlock","src":"12643:132:25","statements":[{"nodeType":"YulAssignment","src":"12653:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12665:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12676:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12661:3:25"},"nodeType":"YulFunctionCall","src":"12661:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12653:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12741:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12754:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12765:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12750:3:25"},"nodeType":"YulFunctionCall","src":"12750:17:25"}],"functionName":{"name":"abi_encode_t_enum$_Breed_$4254_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"12689:51:25"},"nodeType":"YulFunctionCall","src":"12689:79:25"},"nodeType":"YulExpressionStatement","src":"12689:79:25"}]},"name":"abi_encode_tuple_t_enum$_Breed_$4254__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12615:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12627:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12638:4:25","type":""}],"src":"12537:238:25"},{"body":{"nodeType":"YulBlock","src":"12870:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12887:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12890:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12880:6:25"},"nodeType":"YulFunctionCall","src":"12880:12:25"},"nodeType":"YulExpressionStatement","src":"12880:12:25"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"12781:117:25"},{"body":{"nodeType":"YulBlock","src":"12970:241:25","statements":[{"body":{"nodeType":"YulBlock","src":"13075:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13077:16:25"},"nodeType":"YulFunctionCall","src":"13077:18:25"},"nodeType":"YulExpressionStatement","src":"13077:18:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13047:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13055:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13044:2:25"},"nodeType":"YulFunctionCall","src":"13044:30:25"},"nodeType":"YulIf","src":"13041:56:25"},{"nodeType":"YulAssignment","src":"13107:37:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13137:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13115:21:25"},"nodeType":"YulFunctionCall","src":"13115:29:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13107:4:25"}]},{"nodeType":"YulAssignment","src":"13181:23:25","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"13193:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"13199:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13189:3:25"},"nodeType":"YulFunctionCall","src":"13189:15:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13181:4:25"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"12954:6:25","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"12965:4:25","type":""}],"src":"12904:307:25"},{"body":{"nodeType":"YulBlock","src":"13268:103:25","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13291:3:25"},{"name":"src","nodeType":"YulIdentifier","src":"13296:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"13301:6:25"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"13278:12:25"},"nodeType":"YulFunctionCall","src":"13278:30:25"},"nodeType":"YulExpressionStatement","src":"13278:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13349:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"13354:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13345:3:25"},"nodeType":"YulFunctionCall","src":"13345:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"13363:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13338:6:25"},"nodeType":"YulFunctionCall","src":"13338:27:25"},"nodeType":"YulExpressionStatement","src":"13338:27:25"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13250:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"13255:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"13260:6:25","type":""}],"src":"13217:154:25"},{"body":{"nodeType":"YulBlock","src":"13460:327:25","statements":[{"nodeType":"YulAssignment","src":"13470:74:25","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13536:6:25"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13495:40:25"},"nodeType":"YulFunctionCall","src":"13495:48:25"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"13479:15:25"},"nodeType":"YulFunctionCall","src":"13479:65:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13470:5:25"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13560:5:25"},{"name":"length","nodeType":"YulIdentifier","src":"13567:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13553:6:25"},"nodeType":"YulFunctionCall","src":"13553:21:25"},"nodeType":"YulExpressionStatement","src":"13553:21:25"},{"nodeType":"YulVariableDeclaration","src":"13583:27:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13598:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"13605:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13594:3:25"},"nodeType":"YulFunctionCall","src":"13594:16:25"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"13587:3:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"13648:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"13650:77:25"},"nodeType":"YulFunctionCall","src":"13650:79:25"},"nodeType":"YulExpressionStatement","src":"13650:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13629:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"13634:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13625:3:25"},"nodeType":"YulFunctionCall","src":"13625:16:25"},{"name":"end","nodeType":"YulIdentifier","src":"13643:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13622:2:25"},"nodeType":"YulFunctionCall","src":"13622:25:25"},"nodeType":"YulIf","src":"13619:112:25"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13764:3:25"},{"name":"dst","nodeType":"YulIdentifier","src":"13769:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"13774:6:25"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"13740:23:25"},"nodeType":"YulFunctionCall","src":"13740:41:25"},"nodeType":"YulExpressionStatement","src":"13740:41:25"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13433:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"13438:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"13446:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13454:5:25","type":""}],"src":"13377:410:25"},{"body":{"nodeType":"YulBlock","src":"13867:277:25","statements":[{"body":{"nodeType":"YulBlock","src":"13916:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"13918:77:25"},"nodeType":"YulFunctionCall","src":"13918:79:25"},"nodeType":"YulExpressionStatement","src":"13918:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13895:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13903:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13891:3:25"},"nodeType":"YulFunctionCall","src":"13891:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"13910:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13887:3:25"},"nodeType":"YulFunctionCall","src":"13887:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13880:6:25"},"nodeType":"YulFunctionCall","src":"13880:35:25"},"nodeType":"YulIf","src":"13877:122:25"},{"nodeType":"YulVariableDeclaration","src":"14008:34:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14035:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14022:12:25"},"nodeType":"YulFunctionCall","src":"14022:20:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14012:6:25","type":""}]},{"nodeType":"YulAssignment","src":"14051:87:25","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14111:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"14119:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14107:3:25"},"nodeType":"YulFunctionCall","src":"14107:17:25"},{"name":"length","nodeType":"YulIdentifier","src":"14126:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"14134:3:25"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14060:46:25"},"nodeType":"YulFunctionCall","src":"14060:78:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"14051:5:25"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13845:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"13853:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13861:5:25","type":""}],"src":"13806:338:25"},{"body":{"nodeType":"YulBlock","src":"14276:817:25","statements":[{"body":{"nodeType":"YulBlock","src":"14323:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14325:77:25"},"nodeType":"YulFunctionCall","src":"14325:79:25"},"nodeType":"YulExpressionStatement","src":"14325:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14297:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"14306:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14293:3:25"},"nodeType":"YulFunctionCall","src":"14293:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"14318:3:25","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14289:3:25"},"nodeType":"YulFunctionCall","src":"14289:33:25"},"nodeType":"YulIf","src":"14286:120:25"},{"nodeType":"YulBlock","src":"14416:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"14431:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"14445:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14435:6:25","type":""}]},{"nodeType":"YulAssignment","src":"14460:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14495:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"14506:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14491:3:25"},"nodeType":"YulFunctionCall","src":"14491:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14515:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14470:20:25"},"nodeType":"YulFunctionCall","src":"14470:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14460:6:25"}]}]},{"nodeType":"YulBlock","src":"14543:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"14558:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"14572:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14562:6:25","type":""}]},{"nodeType":"YulAssignment","src":"14588:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14623:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"14634:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14619:3:25"},"nodeType":"YulFunctionCall","src":"14619:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14643:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14598:20:25"},"nodeType":"YulFunctionCall","src":"14598:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14588:6:25"}]}]},{"nodeType":"YulBlock","src":"14671:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"14686:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"14700:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14690:6:25","type":""}]},{"nodeType":"YulAssignment","src":"14716:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14751:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"14762:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14747:3:25"},"nodeType":"YulFunctionCall","src":"14747:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14771:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14726:20:25"},"nodeType":"YulFunctionCall","src":"14726:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14716:6:25"}]}]},{"nodeType":"YulBlock","src":"14799:287:25","statements":[{"nodeType":"YulVariableDeclaration","src":"14814:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14845:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14856:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14841:3:25"},"nodeType":"YulFunctionCall","src":"14841:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14828:12:25"},"nodeType":"YulFunctionCall","src":"14828:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14818:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"14907:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14909:77:25"},"nodeType":"YulFunctionCall","src":"14909:79:25"},"nodeType":"YulExpressionStatement","src":"14909:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14879:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"14887:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14876:2:25"},"nodeType":"YulFunctionCall","src":"14876:30:25"},"nodeType":"YulIf","src":"14873:117:25"},{"nodeType":"YulAssignment","src":"15004:72:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15048:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"15059:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15044:3:25"},"nodeType":"YulFunctionCall","src":"15044:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15068:7:25"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"15014:29:25"},"nodeType":"YulFunctionCall","src":"15014:62:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"15004:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14222:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14233:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14245:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14253:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14261:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14269:6:25","type":""}],"src":"14150:943:25"},{"body":{"nodeType":"YulBlock","src":"15182:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"15228:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15230:77:25"},"nodeType":"YulFunctionCall","src":"15230:79:25"},"nodeType":"YulExpressionStatement","src":"15230:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15203:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"15212:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15199:3:25"},"nodeType":"YulFunctionCall","src":"15199:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"15224:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15195:3:25"},"nodeType":"YulFunctionCall","src":"15195:32:25"},"nodeType":"YulIf","src":"15192:119:25"},{"nodeType":"YulBlock","src":"15321:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"15336:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"15350:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15340:6:25","type":""}]},{"nodeType":"YulAssignment","src":"15365:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15400:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"15411:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15396:3:25"},"nodeType":"YulFunctionCall","src":"15396:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15420:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15375:20:25"},"nodeType":"YulFunctionCall","src":"15375:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15365:6:25"}]}]},{"nodeType":"YulBlock","src":"15448:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"15463:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"15477:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15467:6:25","type":""}]},{"nodeType":"YulAssignment","src":"15493:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15528:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"15539:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15524:3:25"},"nodeType":"YulFunctionCall","src":"15524:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15548:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15503:20:25"},"nodeType":"YulFunctionCall","src":"15503:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15493:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15144:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15155:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15167:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15175:6:25","type":""}],"src":"15099:474:25"},{"body":{"nodeType":"YulBlock","src":"15607:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15624:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15627:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15617:6:25"},"nodeType":"YulFunctionCall","src":"15617:88:25"},"nodeType":"YulExpressionStatement","src":"15617:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15721:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15724:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15714:6:25"},"nodeType":"YulFunctionCall","src":"15714:15:25"},"nodeType":"YulExpressionStatement","src":"15714:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15745:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15748:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15738:6:25"},"nodeType":"YulFunctionCall","src":"15738:15:25"},"nodeType":"YulExpressionStatement","src":"15738:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"15579:180:25"},{"body":{"nodeType":"YulBlock","src":"15816:269:25","statements":[{"nodeType":"YulAssignment","src":"15826:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15840:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"15846:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15836:3:25"},"nodeType":"YulFunctionCall","src":"15836:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15826:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"15857:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15887:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"15893:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15883:3:25"},"nodeType":"YulFunctionCall","src":"15883:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"15861:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"15934:51:25","statements":[{"nodeType":"YulAssignment","src":"15948:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15962:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"15970:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15958:3:25"},"nodeType":"YulFunctionCall","src":"15958:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15948:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15914:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15907:6:25"},"nodeType":"YulFunctionCall","src":"15907:26:25"},"nodeType":"YulIf","src":"15904:81:25"},{"body":{"nodeType":"YulBlock","src":"16037:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"16051:16:25"},"nodeType":"YulFunctionCall","src":"16051:18:25"},"nodeType":"YulExpressionStatement","src":"16051:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16001:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16024:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"16032:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16021:2:25"},"nodeType":"YulFunctionCall","src":"16021:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15998:2:25"},"nodeType":"YulFunctionCall","src":"15998:38:25"},"nodeType":"YulIf","src":"15995:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15800:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15809:6:25","type":""}],"src":"15765:320:25"},{"body":{"nodeType":"YulBlock","src":"16197:114:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16219:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"16227:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16215:3:25"},"nodeType":"YulFunctionCall","src":"16215:14:25"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"16231:34:25","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16208:6:25"},"nodeType":"YulFunctionCall","src":"16208:58:25"},"nodeType":"YulExpressionStatement","src":"16208:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16287:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"16295:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16283:3:25"},"nodeType":"YulFunctionCall","src":"16283:15:25"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"16300:3:25","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16276:6:25"},"nodeType":"YulFunctionCall","src":"16276:28:25"},"nodeType":"YulExpressionStatement","src":"16276:28:25"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16189:6:25","type":""}],"src":"16091:220:25"},{"body":{"nodeType":"YulBlock","src":"16463:220:25","statements":[{"nodeType":"YulAssignment","src":"16473:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16539:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"16544:2:25","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16480:58:25"},"nodeType":"YulFunctionCall","src":"16480:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16473:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16645:3:25"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"16556:88:25"},"nodeType":"YulFunctionCall","src":"16556:93:25"},"nodeType":"YulExpressionStatement","src":"16556:93:25"},{"nodeType":"YulAssignment","src":"16658:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16669:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"16674:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16665:3:25"},"nodeType":"YulFunctionCall","src":"16665:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16658:3:25"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16451:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16459:3:25","type":""}],"src":"16317:366:25"},{"body":{"nodeType":"YulBlock","src":"16860:248:25","statements":[{"nodeType":"YulAssignment","src":"16870:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16882:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"16893:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16878:3:25"},"nodeType":"YulFunctionCall","src":"16878:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16870:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16917:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"16928:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16913:3:25"},"nodeType":"YulFunctionCall","src":"16913:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16936:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"16942:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16932:3:25"},"nodeType":"YulFunctionCall","src":"16932:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16906:6:25"},"nodeType":"YulFunctionCall","src":"16906:47:25"},"nodeType":"YulExpressionStatement","src":"16906:47:25"},{"nodeType":"YulAssignment","src":"16962:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17096:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16970:124:25"},"nodeType":"YulFunctionCall","src":"16970:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16962:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16840:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16855:4:25","type":""}],"src":"16689:419:25"},{"body":{"nodeType":"YulBlock","src":"17220:142:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17242:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"17250:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17238:3:25"},"nodeType":"YulFunctionCall","src":"17238:14:25"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"17254:34:25","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17231:6:25"},"nodeType":"YulFunctionCall","src":"17231:58:25"},"nodeType":"YulExpressionStatement","src":"17231:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17310:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"17318:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17306:3:25"},"nodeType":"YulFunctionCall","src":"17306:15:25"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"17323:31:25","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17299:6:25"},"nodeType":"YulFunctionCall","src":"17299:56:25"},"nodeType":"YulExpressionStatement","src":"17299:56:25"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17212:6:25","type":""}],"src":"17114:248:25"},{"body":{"nodeType":"YulBlock","src":"17514:220:25","statements":[{"nodeType":"YulAssignment","src":"17524:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17590:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"17595:2:25","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17531:58:25"},"nodeType":"YulFunctionCall","src":"17531:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17524:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17696:3:25"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"17607:88:25"},"nodeType":"YulFunctionCall","src":"17607:93:25"},"nodeType":"YulExpressionStatement","src":"17607:93:25"},{"nodeType":"YulAssignment","src":"17709:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17720:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"17725:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17716:3:25"},"nodeType":"YulFunctionCall","src":"17716:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17709:3:25"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17502:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17510:3:25","type":""}],"src":"17368:366:25"},{"body":{"nodeType":"YulBlock","src":"17911:248:25","statements":[{"nodeType":"YulAssignment","src":"17921:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17933:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"17944:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17929:3:25"},"nodeType":"YulFunctionCall","src":"17929:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17921:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17968:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"17979:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17964:3:25"},"nodeType":"YulFunctionCall","src":"17964:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17987:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"17993:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17983:3:25"},"nodeType":"YulFunctionCall","src":"17983:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17957:6:25"},"nodeType":"YulFunctionCall","src":"17957:47:25"},"nodeType":"YulExpressionStatement","src":"17957:47:25"},{"nodeType":"YulAssignment","src":"18013:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18147:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18021:124:25"},"nodeType":"YulFunctionCall","src":"18021:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18013:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17891:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17906:4:25","type":""}],"src":"17740:419:25"},{"body":{"nodeType":"YulBlock","src":"18291:206:25","statements":[{"nodeType":"YulAssignment","src":"18301:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18313:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"18324:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18309:3:25"},"nodeType":"YulFunctionCall","src":"18309:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18301:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18381:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18394:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"18405:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18390:3:25"},"nodeType":"YulFunctionCall","src":"18390:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18337:43:25"},"nodeType":"YulFunctionCall","src":"18337:71:25"},"nodeType":"YulExpressionStatement","src":"18337:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18462:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18475:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"18486:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18471:3:25"},"nodeType":"YulFunctionCall","src":"18471:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18418:43:25"},"nodeType":"YulFunctionCall","src":"18418:72:25"},"nodeType":"YulExpressionStatement","src":"18418:72:25"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18255:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18267:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18275:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18286:4:25","type":""}],"src":"18165:332:25"},{"body":{"nodeType":"YulBlock","src":"18609:126:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18631:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"18639:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18627:3:25"},"nodeType":"YulFunctionCall","src":"18627:14:25"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"18643:34:25","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18620:6:25"},"nodeType":"YulFunctionCall","src":"18620:58:25"},"nodeType":"YulExpressionStatement","src":"18620:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18699:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"18707:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18695:3:25"},"nodeType":"YulFunctionCall","src":"18695:15:25"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"18712:15:25","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18688:6:25"},"nodeType":"YulFunctionCall","src":"18688:40:25"},"nodeType":"YulExpressionStatement","src":"18688:40:25"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18601:6:25","type":""}],"src":"18503:232:25"},{"body":{"nodeType":"YulBlock","src":"18887:220:25","statements":[{"nodeType":"YulAssignment","src":"18897:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18963:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"18968:2:25","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18904:58:25"},"nodeType":"YulFunctionCall","src":"18904:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18897:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19069:3:25"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"18980:88:25"},"nodeType":"YulFunctionCall","src":"18980:93:25"},"nodeType":"YulExpressionStatement","src":"18980:93:25"},{"nodeType":"YulAssignment","src":"19082:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19093:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"19098:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19089:3:25"},"nodeType":"YulFunctionCall","src":"19089:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19082:3:25"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18875:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18883:3:25","type":""}],"src":"18741:366:25"},{"body":{"nodeType":"YulBlock","src":"19284:248:25","statements":[{"nodeType":"YulAssignment","src":"19294:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19306:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19317:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19302:3:25"},"nodeType":"YulFunctionCall","src":"19302:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19294:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19341:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19352:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19337:3:25"},"nodeType":"YulFunctionCall","src":"19337:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19360:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"19366:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19356:3:25"},"nodeType":"YulFunctionCall","src":"19356:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19330:6:25"},"nodeType":"YulFunctionCall","src":"19330:47:25"},"nodeType":"YulExpressionStatement","src":"19330:47:25"},{"nodeType":"YulAssignment","src":"19386:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19520:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19394:124:25"},"nodeType":"YulFunctionCall","src":"19394:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19386:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19264:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19279:4:25","type":""}],"src":"19113:419:25"},{"body":{"nodeType":"YulBlock","src":"19566:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19583:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19586:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19576:6:25"},"nodeType":"YulFunctionCall","src":"19576:88:25"},"nodeType":"YulExpressionStatement","src":"19576:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19680:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19683:4:25","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19673:6:25"},"nodeType":"YulFunctionCall","src":"19673:15:25"},"nodeType":"YulExpressionStatement","src":"19673:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19704:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19707:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19697:6:25"},"nodeType":"YulFunctionCall","src":"19697:15:25"},"nodeType":"YulExpressionStatement","src":"19697:15:25"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"19538:180:25"},{"body":{"nodeType":"YulBlock","src":"19837:34:25","statements":[{"nodeType":"YulAssignment","src":"19847:18:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"19862:3:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"19847:11:25"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19809:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"19814:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"19825:11:25","type":""}],"src":"19724:147:25"},{"body":{"nodeType":"YulBlock","src":"19983:8:25","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19975:6:25","type":""}],"src":"19877:114:25"},{"body":{"nodeType":"YulBlock","src":"20160:235:25","statements":[{"nodeType":"YulAssignment","src":"20170:90:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20253:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"20258:1:25","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20177:75:25"},"nodeType":"YulFunctionCall","src":"20177:83:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20170:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20358:3:25"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"20269:88:25"},"nodeType":"YulFunctionCall","src":"20269:93:25"},"nodeType":"YulExpressionStatement","src":"20269:93:25"},{"nodeType":"YulAssignment","src":"20371:18:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20382:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"20387:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20378:3:25"},"nodeType":"YulFunctionCall","src":"20378:11:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20371:3:25"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20148:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20156:3:25","type":""}],"src":"19997:398:25"},{"body":{"nodeType":"YulBlock","src":"20589:191:25","statements":[{"nodeType":"YulAssignment","src":"20600:154:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20750:3:25"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20607:141:25"},"nodeType":"YulFunctionCall","src":"20607:147:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20600:3:25"}]},{"nodeType":"YulAssignment","src":"20764:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"20771:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20764:3:25"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20576:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20585:3:25","type":""}],"src":"20401:379:25"},{"body":{"nodeType":"YulBlock","src":"20892:68:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20914:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"20922:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20910:3:25"},"nodeType":"YulFunctionCall","src":"20910:14:25"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"20926:26:25","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20903:6:25"},"nodeType":"YulFunctionCall","src":"20903:50:25"},"nodeType":"YulExpressionStatement","src":"20903:50:25"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20884:6:25","type":""}],"src":"20786:174:25"},{"body":{"nodeType":"YulBlock","src":"21112:220:25","statements":[{"nodeType":"YulAssignment","src":"21122:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21188:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"21193:2:25","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21129:58:25"},"nodeType":"YulFunctionCall","src":"21129:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21122:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21294:3:25"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"21205:88:25"},"nodeType":"YulFunctionCall","src":"21205:93:25"},"nodeType":"YulExpressionStatement","src":"21205:93:25"},{"nodeType":"YulAssignment","src":"21307:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21318:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"21323:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21314:3:25"},"nodeType":"YulFunctionCall","src":"21314:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21307:3:25"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21100:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21108:3:25","type":""}],"src":"20966:366:25"},{"body":{"nodeType":"YulBlock","src":"21509:248:25","statements":[{"nodeType":"YulAssignment","src":"21519:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21531:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21542:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21527:3:25"},"nodeType":"YulFunctionCall","src":"21527:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21519:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21566:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21577:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21562:3:25"},"nodeType":"YulFunctionCall","src":"21562:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21585:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"21591:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21581:3:25"},"nodeType":"YulFunctionCall","src":"21581:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21555:6:25"},"nodeType":"YulFunctionCall","src":"21555:47:25"},"nodeType":"YulExpressionStatement","src":"21555:47:25"},{"nodeType":"YulAssignment","src":"21611:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21745:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21619:124:25"},"nodeType":"YulFunctionCall","src":"21619:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21611:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21489:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21504:4:25","type":""}],"src":"21338:419:25"},{"body":{"nodeType":"YulBlock","src":"21869:122:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21891:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"21899:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21887:3:25"},"nodeType":"YulFunctionCall","src":"21887:14:25"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"21903:34:25","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21880:6:25"},"nodeType":"YulFunctionCall","src":"21880:58:25"},"nodeType":"YulExpressionStatement","src":"21880:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21959:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"21967:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21955:3:25"},"nodeType":"YulFunctionCall","src":"21955:15:25"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"21972:11:25","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21948:6:25"},"nodeType":"YulFunctionCall","src":"21948:36:25"},"nodeType":"YulExpressionStatement","src":"21948:36:25"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21861:6:25","type":""}],"src":"21763:228:25"},{"body":{"nodeType":"YulBlock","src":"22143:220:25","statements":[{"nodeType":"YulAssignment","src":"22153:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22219:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"22224:2:25","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22160:58:25"},"nodeType":"YulFunctionCall","src":"22160:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22153:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22325:3:25"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"22236:88:25"},"nodeType":"YulFunctionCall","src":"22236:93:25"},"nodeType":"YulExpressionStatement","src":"22236:93:25"},{"nodeType":"YulAssignment","src":"22338:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22349:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"22354:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22345:3:25"},"nodeType":"YulFunctionCall","src":"22345:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22338:3:25"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22131:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22139:3:25","type":""}],"src":"21997:366:25"},{"body":{"nodeType":"YulBlock","src":"22540:248:25","statements":[{"nodeType":"YulAssignment","src":"22550:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22562:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22573:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22558:3:25"},"nodeType":"YulFunctionCall","src":"22558:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22550:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22597:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22608:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22593:3:25"},"nodeType":"YulFunctionCall","src":"22593:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22616:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"22622:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22612:3:25"},"nodeType":"YulFunctionCall","src":"22612:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22586:6:25"},"nodeType":"YulFunctionCall","src":"22586:47:25"},"nodeType":"YulExpressionStatement","src":"22586:47:25"},{"nodeType":"YulAssignment","src":"22642:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22776:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22650:124:25"},"nodeType":"YulFunctionCall","src":"22650:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22642:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22520:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22535:4:25","type":""}],"src":"22369:419:25"},{"body":{"nodeType":"YulBlock","src":"22822:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22839:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22842:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22832:6:25"},"nodeType":"YulFunctionCall","src":"22832:88:25"},"nodeType":"YulExpressionStatement","src":"22832:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22936:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22939:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22929:6:25"},"nodeType":"YulFunctionCall","src":"22929:15:25"},"nodeType":"YulExpressionStatement","src":"22929:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22960:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22963:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22953:6:25"},"nodeType":"YulFunctionCall","src":"22953:15:25"},"nodeType":"YulExpressionStatement","src":"22953:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"22794:180:25"},{"body":{"nodeType":"YulBlock","src":"23024:261:25","statements":[{"nodeType":"YulAssignment","src":"23034:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23057:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23039:17:25"},"nodeType":"YulFunctionCall","src":"23039:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23034:1:25"}]},{"nodeType":"YulAssignment","src":"23068:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23091:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23073:17:25"},"nodeType":"YulFunctionCall","src":"23073:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23068:1:25"}]},{"body":{"nodeType":"YulBlock","src":"23231:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23233:16:25"},"nodeType":"YulFunctionCall","src":"23233:18:25"},"nodeType":"YulExpressionStatement","src":"23233:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23152:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23159:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"23227:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23155:3:25"},"nodeType":"YulFunctionCall","src":"23155:74:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23149:2:25"},"nodeType":"YulFunctionCall","src":"23149:81:25"},"nodeType":"YulIf","src":"23146:107:25"},{"nodeType":"YulAssignment","src":"23263:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23274:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"23277:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23270:3:25"},"nodeType":"YulFunctionCall","src":"23270:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"23263:3:25"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23011:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"23014:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"23020:3:25","type":""}],"src":"22980:305:25"},{"body":{"nodeType":"YulBlock","src":"23334:190:25","statements":[{"nodeType":"YulAssignment","src":"23344:33:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23371:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23353:17:25"},"nodeType":"YulFunctionCall","src":"23353:24:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23344:5:25"}]},{"body":{"nodeType":"YulBlock","src":"23467:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23469:16:25"},"nodeType":"YulFunctionCall","src":"23469:18:25"},"nodeType":"YulExpressionStatement","src":"23469:18:25"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23392:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"23399:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23389:2:25"},"nodeType":"YulFunctionCall","src":"23389:77:25"},"nodeType":"YulIf","src":"23386:103:25"},{"nodeType":"YulAssignment","src":"23498:20:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23509:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"23516:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23505:3:25"},"nodeType":"YulFunctionCall","src":"23505:13:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23498:3:25"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23320:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"23330:3:25","type":""}],"src":"23291:233:25"},{"body":{"nodeType":"YulBlock","src":"23575:32:25","statements":[{"nodeType":"YulAssignment","src":"23585:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"23596:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"23585:7:25"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23557:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"23567:7:25","type":""}],"src":"23530:77:25"},{"body":{"nodeType":"YulBlock","src":"23678:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23695:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23718:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"23700:17:25"},"nodeType":"YulFunctionCall","src":"23700:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23688:6:25"},"nodeType":"YulFunctionCall","src":"23688:37:25"},"nodeType":"YulExpressionStatement","src":"23688:37:25"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23666:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23673:3:25","type":""}],"src":"23613:118:25"},{"body":{"nodeType":"YulBlock","src":"23781:57:25","statements":[{"nodeType":"YulAssignment","src":"23791:41:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23806:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"23813:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23802:3:25"},"nodeType":"YulFunctionCall","src":"23802:30:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"23791:7:25"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23763:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"23773:7:25","type":""}],"src":"23737:101:25"},{"body":{"nodeType":"YulBlock","src":"23907:52:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23924:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23946:5:25"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"23929:16:25"},"nodeType":"YulFunctionCall","src":"23929:23:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23917:6:25"},"nodeType":"YulFunctionCall","src":"23917:36:25"},"nodeType":"YulExpressionStatement","src":"23917:36:25"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23895:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23902:3:25","type":""}],"src":"23844:115:25"},{"body":{"nodeType":"YulBlock","src":"24009:45:25","statements":[{"nodeType":"YulAssignment","src":"24019:29:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24034:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"24041:6:25","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24030:3:25"},"nodeType":"YulFunctionCall","src":"24030:18:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24019:7:25"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23991:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24001:7:25","type":""}],"src":"23965:89:25"},{"body":{"nodeType":"YulBlock","src":"24123:52:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24140:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24162:5:25"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"24145:16:25"},"nodeType":"YulFunctionCall","src":"24145:23:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24133:6:25"},"nodeType":"YulFunctionCall","src":"24133:36:25"},"nodeType":"YulExpressionStatement","src":"24133:36:25"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24111:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24118:3:25","type":""}],"src":"24060:115:25"},{"body":{"nodeType":"YulBlock","src":"24225:49:25","statements":[{"nodeType":"YulAssignment","src":"24235:33:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24250:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"24257:10:25","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24246:3:25"},"nodeType":"YulFunctionCall","src":"24246:22:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24235:7:25"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24207:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24217:7:25","type":""}],"src":"24181:93:25"},{"body":{"nodeType":"YulBlock","src":"24343:52:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24360:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24382:5:25"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"24365:16:25"},"nodeType":"YulFunctionCall","src":"24365:23:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24353:6:25"},"nodeType":"YulFunctionCall","src":"24353:36:25"},"nodeType":"YulExpressionStatement","src":"24353:36:25"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24331:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24338:3:25","type":""}],"src":"24280:115:25"},{"body":{"nodeType":"YulBlock","src":"24603:446:25","statements":[{"nodeType":"YulAssignment","src":"24613:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24625:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24636:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24621:3:25"},"nodeType":"YulFunctionCall","src":"24621:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24613:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24694:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24707:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24718:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24703:3:25"},"nodeType":"YulFunctionCall","src":"24703:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"24650:43:25"},"nodeType":"YulFunctionCall","src":"24650:71:25"},"nodeType":"YulExpressionStatement","src":"24650:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24773:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24786:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24797:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24782:3:25"},"nodeType":"YulFunctionCall","src":"24782:18:25"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"24731:41:25"},"nodeType":"YulFunctionCall","src":"24731:70:25"},"nodeType":"YulExpressionStatement","src":"24731:70:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24853:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24866:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24877:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24862:3:25"},"nodeType":"YulFunctionCall","src":"24862:18:25"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"24811:41:25"},"nodeType":"YulFunctionCall","src":"24811:70:25"},"nodeType":"YulExpressionStatement","src":"24811:70:25"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24933:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24946:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24957:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24942:3:25"},"nodeType":"YulFunctionCall","src":"24942:18:25"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"24891:41:25"},"nodeType":"YulFunctionCall","src":"24891:70:25"},"nodeType":"YulExpressionStatement","src":"24891:70:25"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"25013:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25026:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"25037:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25022:3:25"},"nodeType":"YulFunctionCall","src":"25022:19:25"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"24971:41:25"},"nodeType":"YulFunctionCall","src":"24971:71:25"},"nodeType":"YulExpressionStatement","src":"24971:71:25"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24543:9:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24555:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24563:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24571:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24579:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24587:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24598:4:25","type":""}],"src":"24401:648:25"},{"body":{"nodeType":"YulBlock","src":"25118:80:25","statements":[{"nodeType":"YulAssignment","src":"25128:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25143:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25137:5:25"},"nodeType":"YulFunctionCall","src":"25137:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25128:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25186:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"25159:26:25"},"nodeType":"YulFunctionCall","src":"25159:33:25"},"nodeType":"YulExpressionStatement","src":"25159:33:25"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"25096:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"25104:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"25112:5:25","type":""}],"src":"25055:143:25"},{"body":{"nodeType":"YulBlock","src":"25281:274:25","statements":[{"body":{"nodeType":"YulBlock","src":"25327:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"25329:77:25"},"nodeType":"YulFunctionCall","src":"25329:79:25"},"nodeType":"YulExpressionStatement","src":"25329:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"25302:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"25311:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25298:3:25"},"nodeType":"YulFunctionCall","src":"25298:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"25323:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25294:3:25"},"nodeType":"YulFunctionCall","src":"25294:32:25"},"nodeType":"YulIf","src":"25291:119:25"},{"nodeType":"YulBlock","src":"25420:128:25","statements":[{"nodeType":"YulVariableDeclaration","src":"25435:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"25449:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25439:6:25","type":""}]},{"nodeType":"YulAssignment","src":"25464:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25510:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"25521:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25506:3:25"},"nodeType":"YulFunctionCall","src":"25506:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25530:7:25"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"25474:31:25"},"nodeType":"YulFunctionCall","src":"25474:64:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25464:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25251:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25262:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"25274:6:25","type":""}],"src":"25204:351:25"},{"body":{"nodeType":"YulBlock","src":"25675:34:25","statements":[{"nodeType":"YulAssignment","src":"25685:18:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"25700:3:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"25685:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25647:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"25652:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"25663:11:25","type":""}],"src":"25561:148:25"},{"body":{"nodeType":"YulBlock","src":"25825:267:25","statements":[{"nodeType":"YulVariableDeclaration","src":"25835:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25882:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25849:32:25"},"nodeType":"YulFunctionCall","src":"25849:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"25839:6:25","type":""}]},{"nodeType":"YulAssignment","src":"25897:96:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25981:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"25986:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25904:76:25"},"nodeType":"YulFunctionCall","src":"25904:89:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25897:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26028:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"26035:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26024:3:25"},"nodeType":"YulFunctionCall","src":"26024:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"26042:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"26047:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"26002:21:25"},"nodeType":"YulFunctionCall","src":"26002:52:25"},"nodeType":"YulExpressionStatement","src":"26002:52:25"},{"nodeType":"YulAssignment","src":"26063:23:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26074:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"26079:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26070:3:25"},"nodeType":"YulFunctionCall","src":"26070:16:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26063:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25806:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"25813:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25821:3:25","type":""}],"src":"25715:377:25"},{"body":{"nodeType":"YulBlock","src":"26282:251:25","statements":[{"nodeType":"YulAssignment","src":"26293:102:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26382:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"26391:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26300:81:25"},"nodeType":"YulFunctionCall","src":"26300:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26293:3:25"}]},{"nodeType":"YulAssignment","src":"26405:102:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26494:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"26503:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26412:81:25"},"nodeType":"YulFunctionCall","src":"26412:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26405:3:25"}]},{"nodeType":"YulAssignment","src":"26517:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"26524:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26517:3:25"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26253:3:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26259:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26267:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26278:3:25","type":""}],"src":"26098:435:25"},{"body":{"nodeType":"YulBlock","src":"26645:119:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26667:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"26675:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26663:3:25"},"nodeType":"YulFunctionCall","src":"26663:14:25"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"26679:34:25","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26656:6:25"},"nodeType":"YulFunctionCall","src":"26656:58:25"},"nodeType":"YulExpressionStatement","src":"26656:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26735:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"26743:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26731:3:25"},"nodeType":"YulFunctionCall","src":"26731:15:25"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"26748:8:25","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26724:6:25"},"nodeType":"YulFunctionCall","src":"26724:33:25"},"nodeType":"YulExpressionStatement","src":"26724:33:25"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26637:6:25","type":""}],"src":"26539:225:25"},{"body":{"nodeType":"YulBlock","src":"26916:220:25","statements":[{"nodeType":"YulAssignment","src":"26926:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26992:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"26997:2:25","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26933:58:25"},"nodeType":"YulFunctionCall","src":"26933:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26926:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27098:3:25"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"27009:88:25"},"nodeType":"YulFunctionCall","src":"27009:93:25"},"nodeType":"YulExpressionStatement","src":"27009:93:25"},{"nodeType":"YulAssignment","src":"27111:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27122:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"27127:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27118:3:25"},"nodeType":"YulFunctionCall","src":"27118:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27111:3:25"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26904:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26912:3:25","type":""}],"src":"26770:366:25"},{"body":{"nodeType":"YulBlock","src":"27313:248:25","statements":[{"nodeType":"YulAssignment","src":"27323:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27335:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27346:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27331:3:25"},"nodeType":"YulFunctionCall","src":"27331:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27323:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27370:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27381:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27366:3:25"},"nodeType":"YulFunctionCall","src":"27366:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27389:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"27395:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27385:3:25"},"nodeType":"YulFunctionCall","src":"27385:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27359:6:25"},"nodeType":"YulFunctionCall","src":"27359:47:25"},"nodeType":"YulExpressionStatement","src":"27359:47:25"},{"nodeType":"YulAssignment","src":"27415:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27549:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27423:124:25"},"nodeType":"YulFunctionCall","src":"27423:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27415:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27293:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27308:4:25","type":""}],"src":"27142:419:25"},{"body":{"nodeType":"YulBlock","src":"27595:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27612:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27615:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27605:6:25"},"nodeType":"YulFunctionCall","src":"27605:88:25"},"nodeType":"YulExpressionStatement","src":"27605:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27709:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27712:4:25","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27702:6:25"},"nodeType":"YulFunctionCall","src":"27702:15:25"},"nodeType":"YulExpressionStatement","src":"27702:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27733:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27736:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27726:6:25"},"nodeType":"YulFunctionCall","src":"27726:15:25"},"nodeType":"YulExpressionStatement","src":"27726:15:25"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"27567:180:25"},{"body":{"nodeType":"YulBlock","src":"27787:142:25","statements":[{"nodeType":"YulAssignment","src":"27797:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27820:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27802:17:25"},"nodeType":"YulFunctionCall","src":"27802:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"27797:1:25"}]},{"nodeType":"YulAssignment","src":"27831:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27854:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27836:17:25"},"nodeType":"YulFunctionCall","src":"27836:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"27831:1:25"}]},{"body":{"nodeType":"YulBlock","src":"27878:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"27880:16:25"},"nodeType":"YulFunctionCall","src":"27880:18:25"},"nodeType":"YulExpressionStatement","src":"27880:18:25"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27875:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27868:6:25"},"nodeType":"YulFunctionCall","src":"27868:9:25"},"nodeType":"YulIf","src":"27865:35:25"},{"nodeType":"YulAssignment","src":"27909:14:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27918:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"27921:1:25"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"27914:3:25"},"nodeType":"YulFunctionCall","src":"27914:9:25"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"27909:1:25"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27776:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"27779:1:25","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"27785:1:25","type":""}],"src":"27753:176:25"},{"body":{"nodeType":"YulBlock","src":"28069:214:25","statements":[{"nodeType":"YulAssignment","src":"28079:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28091:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"28102:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28087:3:25"},"nodeType":"YulFunctionCall","src":"28087:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28079:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28167:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28180:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"28191:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28176:3:25"},"nodeType":"YulFunctionCall","src":"28176:17:25"}],"functionName":{"name":"abi_encode_t_enum$_Breed_$4254_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"28115:51:25"},"nodeType":"YulFunctionCall","src":"28115:79:25"},"nodeType":"YulExpressionStatement","src":"28115:79:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28248:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28261:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"28272:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28257:3:25"},"nodeType":"YulFunctionCall","src":"28257:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28204:43:25"},"nodeType":"YulFunctionCall","src":"28204:72:25"},"nodeType":"YulExpressionStatement","src":"28204:72:25"}]},"name":"abi_encode_tuple_t_enum$_Breed_$4254_t_address__to_t_uint8_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28033:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28045:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28053:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28064:4:25","type":""}],"src":"27935:348:25"},{"body":{"nodeType":"YulBlock","src":"28395:118:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28417:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"28425:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28413:3:25"},"nodeType":"YulFunctionCall","src":"28413:14:25"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"28429:34:25","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28406:6:25"},"nodeType":"YulFunctionCall","src":"28406:58:25"},"nodeType":"YulExpressionStatement","src":"28406:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28485:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"28493:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28481:3:25"},"nodeType":"YulFunctionCall","src":"28481:15:25"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"28498:7:25","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28474:6:25"},"nodeType":"YulFunctionCall","src":"28474:32:25"},"nodeType":"YulExpressionStatement","src":"28474:32:25"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28387:6:25","type":""}],"src":"28289:224:25"},{"body":{"nodeType":"YulBlock","src":"28665:220:25","statements":[{"nodeType":"YulAssignment","src":"28675:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28741:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"28746:2:25","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28682:58:25"},"nodeType":"YulFunctionCall","src":"28682:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28675:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28847:3:25"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"28758:88:25"},"nodeType":"YulFunctionCall","src":"28758:93:25"},"nodeType":"YulExpressionStatement","src":"28758:93:25"},{"nodeType":"YulAssignment","src":"28860:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28871:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"28876:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28867:3:25"},"nodeType":"YulFunctionCall","src":"28867:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28860:3:25"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28653:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28661:3:25","type":""}],"src":"28519:366:25"},{"body":{"nodeType":"YulBlock","src":"29062:248:25","statements":[{"nodeType":"YulAssignment","src":"29072:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29084:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"29095:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29080:3:25"},"nodeType":"YulFunctionCall","src":"29080:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29072:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29119:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"29130:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29115:3:25"},"nodeType":"YulFunctionCall","src":"29115:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29138:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"29144:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29134:3:25"},"nodeType":"YulFunctionCall","src":"29134:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29108:6:25"},"nodeType":"YulFunctionCall","src":"29108:47:25"},"nodeType":"YulExpressionStatement","src":"29108:47:25"},{"nodeType":"YulAssignment","src":"29164:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29298:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29172:124:25"},"nodeType":"YulFunctionCall","src":"29172:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29164:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29042:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29057:4:25","type":""}],"src":"28891:419:25"},{"body":{"nodeType":"YulBlock","src":"29422:117:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29444:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"29452:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29440:3:25"},"nodeType":"YulFunctionCall","src":"29440:14:25"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"29456:34:25","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29433:6:25"},"nodeType":"YulFunctionCall","src":"29433:58:25"},"nodeType":"YulExpressionStatement","src":"29433:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29512:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"29520:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29508:3:25"},"nodeType":"YulFunctionCall","src":"29508:15:25"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"29525:6:25","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29501:6:25"},"nodeType":"YulFunctionCall","src":"29501:31:25"},"nodeType":"YulExpressionStatement","src":"29501:31:25"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29414:6:25","type":""}],"src":"29316:223:25"},{"body":{"nodeType":"YulBlock","src":"29691:220:25","statements":[{"nodeType":"YulAssignment","src":"29701:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29767:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"29772:2:25","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29708:58:25"},"nodeType":"YulFunctionCall","src":"29708:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29701:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29873:3:25"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"29784:88:25"},"nodeType":"YulFunctionCall","src":"29784:93:25"},"nodeType":"YulExpressionStatement","src":"29784:93:25"},{"nodeType":"YulAssignment","src":"29886:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29897:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"29902:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29893:3:25"},"nodeType":"YulFunctionCall","src":"29893:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29886:3:25"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29679:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29687:3:25","type":""}],"src":"29545:366:25"},{"body":{"nodeType":"YulBlock","src":"30088:248:25","statements":[{"nodeType":"YulAssignment","src":"30098:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30110:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"30121:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30106:3:25"},"nodeType":"YulFunctionCall","src":"30106:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30098:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30145:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"30156:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30141:3:25"},"nodeType":"YulFunctionCall","src":"30141:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30164:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"30170:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30160:3:25"},"nodeType":"YulFunctionCall","src":"30160:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30134:6:25"},"nodeType":"YulFunctionCall","src":"30134:47:25"},"nodeType":"YulExpressionStatement","src":"30134:47:25"},{"nodeType":"YulAssignment","src":"30190:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30324:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30198:124:25"},"nodeType":"YulFunctionCall","src":"30198:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30190:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30068:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30083:4:25","type":""}],"src":"29917:419:25"},{"body":{"nodeType":"YulBlock","src":"30448:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30470:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"30478:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30466:3:25"},"nodeType":"YulFunctionCall","src":"30466:14:25"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"30482:34:25","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30459:6:25"},"nodeType":"YulFunctionCall","src":"30459:58:25"},"nodeType":"YulExpressionStatement","src":"30459:58:25"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30440:6:25","type":""}],"src":"30342:182:25"},{"body":{"nodeType":"YulBlock","src":"30676:220:25","statements":[{"nodeType":"YulAssignment","src":"30686:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30752:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"30757:2:25","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30693:58:25"},"nodeType":"YulFunctionCall","src":"30693:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30686:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30858:3:25"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"30769:88:25"},"nodeType":"YulFunctionCall","src":"30769:93:25"},"nodeType":"YulExpressionStatement","src":"30769:93:25"},{"nodeType":"YulAssignment","src":"30871:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30882:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"30887:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30878:3:25"},"nodeType":"YulFunctionCall","src":"30878:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30871:3:25"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30664:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30672:3:25","type":""}],"src":"30530:366:25"},{"body":{"nodeType":"YulBlock","src":"31073:248:25","statements":[{"nodeType":"YulAssignment","src":"31083:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31095:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"31106:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31091:3:25"},"nodeType":"YulFunctionCall","src":"31091:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31083:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31130:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"31141:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31126:3:25"},"nodeType":"YulFunctionCall","src":"31126:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31149:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"31155:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31145:3:25"},"nodeType":"YulFunctionCall","src":"31145:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31119:6:25"},"nodeType":"YulFunctionCall","src":"31119:47:25"},"nodeType":"YulExpressionStatement","src":"31119:47:25"},{"nodeType":"YulAssignment","src":"31175:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31309:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31183:124:25"},"nodeType":"YulFunctionCall","src":"31183:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31175:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31053:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31068:4:25","type":""}],"src":"30902:419:25"},{"body":{"nodeType":"YulBlock","src":"31433:69:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31455:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"31463:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31451:3:25"},"nodeType":"YulFunctionCall","src":"31451:14:25"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"31467:27:25","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31444:6:25"},"nodeType":"YulFunctionCall","src":"31444:51:25"},"nodeType":"YulExpressionStatement","src":"31444:51:25"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31425:6:25","type":""}],"src":"31327:175:25"},{"body":{"nodeType":"YulBlock","src":"31654:220:25","statements":[{"nodeType":"YulAssignment","src":"31664:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31730:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"31735:2:25","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31671:58:25"},"nodeType":"YulFunctionCall","src":"31671:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31664:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31836:3:25"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"31747:88:25"},"nodeType":"YulFunctionCall","src":"31747:93:25"},"nodeType":"YulExpressionStatement","src":"31747:93:25"},{"nodeType":"YulAssignment","src":"31849:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31860:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"31865:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31856:3:25"},"nodeType":"YulFunctionCall","src":"31856:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31849:3:25"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31642:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31650:3:25","type":""}],"src":"31508:366:25"},{"body":{"nodeType":"YulBlock","src":"32051:248:25","statements":[{"nodeType":"YulAssignment","src":"32061:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32073:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"32084:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32069:3:25"},"nodeType":"YulFunctionCall","src":"32069:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32061:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32108:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"32119:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32104:3:25"},"nodeType":"YulFunctionCall","src":"32104:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32127:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"32133:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32123:3:25"},"nodeType":"YulFunctionCall","src":"32123:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32097:6:25"},"nodeType":"YulFunctionCall","src":"32097:47:25"},"nodeType":"YulExpressionStatement","src":"32097:47:25"},{"nodeType":"YulAssignment","src":"32153:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32287:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32161:124:25"},"nodeType":"YulFunctionCall","src":"32161:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32153:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32031:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32046:4:25","type":""}],"src":"31880:419:25"},{"body":{"nodeType":"YulBlock","src":"32411:131:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32433:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"32441:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32429:3:25"},"nodeType":"YulFunctionCall","src":"32429:14:25"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"32445:34:25","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32422:6:25"},"nodeType":"YulFunctionCall","src":"32422:58:25"},"nodeType":"YulExpressionStatement","src":"32422:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32501:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"32509:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32497:3:25"},"nodeType":"YulFunctionCall","src":"32497:15:25"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"32514:20:25","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32490:6:25"},"nodeType":"YulFunctionCall","src":"32490:45:25"},"nodeType":"YulExpressionStatement","src":"32490:45:25"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32403:6:25","type":""}],"src":"32305:237:25"},{"body":{"nodeType":"YulBlock","src":"32694:220:25","statements":[{"nodeType":"YulAssignment","src":"32704:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32770:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"32775:2:25","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32711:58:25"},"nodeType":"YulFunctionCall","src":"32711:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32704:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32876:3:25"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"32787:88:25"},"nodeType":"YulFunctionCall","src":"32787:93:25"},"nodeType":"YulExpressionStatement","src":"32787:93:25"},{"nodeType":"YulAssignment","src":"32889:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32900:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"32905:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32896:3:25"},"nodeType":"YulFunctionCall","src":"32896:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32889:3:25"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32682:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32690:3:25","type":""}],"src":"32548:366:25"},{"body":{"nodeType":"YulBlock","src":"33091:248:25","statements":[{"nodeType":"YulAssignment","src":"33101:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33113:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"33124:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33109:3:25"},"nodeType":"YulFunctionCall","src":"33109:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33101:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33148:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"33159:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33144:3:25"},"nodeType":"YulFunctionCall","src":"33144:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33167:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"33173:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33163:3:25"},"nodeType":"YulFunctionCall","src":"33163:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33137:6:25"},"nodeType":"YulFunctionCall","src":"33137:47:25"},"nodeType":"YulExpressionStatement","src":"33137:47:25"},{"nodeType":"YulAssignment","src":"33193:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33327:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33201:124:25"},"nodeType":"YulFunctionCall","src":"33201:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33193:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33071:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33086:4:25","type":""}],"src":"32920:419:25"},{"body":{"nodeType":"YulBlock","src":"33451:127:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33473:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"33481:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33469:3:25"},"nodeType":"YulFunctionCall","src":"33469:14:25"},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e","kind":"string","nodeType":"YulLiteral","src":"33485:34:25","type":"","value":"ERC721URIStorage: URI set of non"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33462:6:25"},"nodeType":"YulFunctionCall","src":"33462:58:25"},"nodeType":"YulExpressionStatement","src":"33462:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33541:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"33549:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33537:3:25"},"nodeType":"YulFunctionCall","src":"33537:15:25"},{"hexValue":"6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"33554:16:25","type":"","value":"existent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33530:6:25"},"nodeType":"YulFunctionCall","src":"33530:41:25"},"nodeType":"YulExpressionStatement","src":"33530:41:25"}]},"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33443:6:25","type":""}],"src":"33345:233:25"},{"body":{"nodeType":"YulBlock","src":"33730:220:25","statements":[{"nodeType":"YulAssignment","src":"33740:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33806:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"33811:2:25","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33747:58:25"},"nodeType":"YulFunctionCall","src":"33747:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33740:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33912:3:25"}],"functionName":{"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulIdentifier","src":"33823:88:25"},"nodeType":"YulFunctionCall","src":"33823:93:25"},"nodeType":"YulExpressionStatement","src":"33823:93:25"},{"nodeType":"YulAssignment","src":"33925:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33936:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"33941:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33932:3:25"},"nodeType":"YulFunctionCall","src":"33932:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33925:3:25"}]}]},"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33718:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33726:3:25","type":""}],"src":"33584:366:25"},{"body":{"nodeType":"YulBlock","src":"34127:248:25","statements":[{"nodeType":"YulAssignment","src":"34137:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34149:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"34160:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34145:3:25"},"nodeType":"YulFunctionCall","src":"34145:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34137:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34184:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"34195:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34180:3:25"},"nodeType":"YulFunctionCall","src":"34180:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34203:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"34209:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34199:3:25"},"nodeType":"YulFunctionCall","src":"34199:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34173:6:25"},"nodeType":"YulFunctionCall","src":"34173:47:25"},"nodeType":"YulExpressionStatement","src":"34173:47:25"},{"nodeType":"YulAssignment","src":"34229:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34363:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34237:124:25"},"nodeType":"YulFunctionCall","src":"34237:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34229:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34107:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34122:4:25","type":""}],"src":"33956:419:25"},{"body":{"nodeType":"YulBlock","src":"34426:146:25","statements":[{"nodeType":"YulAssignment","src":"34436:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34459:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34441:17:25"},"nodeType":"YulFunctionCall","src":"34441:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"34436:1:25"}]},{"nodeType":"YulAssignment","src":"34470:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34493:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34475:17:25"},"nodeType":"YulFunctionCall","src":"34475:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"34470:1:25"}]},{"body":{"nodeType":"YulBlock","src":"34517:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"34519:16:25"},"nodeType":"YulFunctionCall","src":"34519:18:25"},"nodeType":"YulExpressionStatement","src":"34519:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34511:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"34514:1:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"34508:2:25"},"nodeType":"YulFunctionCall","src":"34508:8:25"},"nodeType":"YulIf","src":"34505:34:25"},{"nodeType":"YulAssignment","src":"34549:17:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34561:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"34564:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34557:3:25"},"nodeType":"YulFunctionCall","src":"34557:9:25"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"34549:4:25"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34412:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"34415:1:25","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"34421:4:25","type":""}],"src":"34381:191:25"},{"body":{"nodeType":"YulBlock","src":"34636:40:25","statements":[{"nodeType":"YulAssignment","src":"34647:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34663:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34657:5:25"},"nodeType":"YulFunctionCall","src":"34657:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"34647:6:25"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34619:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"34629:6:25","type":""}],"src":"34578:98:25"},{"body":{"nodeType":"YulBlock","src":"34777:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34794:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"34799:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34787:6:25"},"nodeType":"YulFunctionCall","src":"34787:19:25"},"nodeType":"YulExpressionStatement","src":"34787:19:25"},{"nodeType":"YulAssignment","src":"34815:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34834:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"34839:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34830:3:25"},"nodeType":"YulFunctionCall","src":"34830:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"34815:11:25"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34749:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"34754:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"34765:11:25","type":""}],"src":"34682:168:25"},{"body":{"nodeType":"YulBlock","src":"34946:270:25","statements":[{"nodeType":"YulVariableDeclaration","src":"34956:52:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35002:5:25"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"34970:31:25"},"nodeType":"YulFunctionCall","src":"34970:38:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"34960:6:25","type":""}]},{"nodeType":"YulAssignment","src":"35017:77:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35082:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"35087:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35024:57:25"},"nodeType":"YulFunctionCall","src":"35024:70:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35017:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35129:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"35136:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35125:3:25"},"nodeType":"YulFunctionCall","src":"35125:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"35143:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"35148:6:25"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"35103:21:25"},"nodeType":"YulFunctionCall","src":"35103:52:25"},"nodeType":"YulExpressionStatement","src":"35103:52:25"},{"nodeType":"YulAssignment","src":"35164:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35175:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"35202:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"35180:21:25"},"nodeType":"YulFunctionCall","src":"35180:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35171:3:25"},"nodeType":"YulFunctionCall","src":"35171:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35164:3:25"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34927:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34934:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34942:3:25","type":""}],"src":"34856:360:25"},{"body":{"nodeType":"YulBlock","src":"35422:440:25","statements":[{"nodeType":"YulAssignment","src":"35432:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35444:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"35455:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35440:3:25"},"nodeType":"YulFunctionCall","src":"35440:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35432:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35513:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35526:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"35537:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35522:3:25"},"nodeType":"YulFunctionCall","src":"35522:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35469:43:25"},"nodeType":"YulFunctionCall","src":"35469:71:25"},"nodeType":"YulExpressionStatement","src":"35469:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35594:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35607:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"35618:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35603:3:25"},"nodeType":"YulFunctionCall","src":"35603:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35550:43:25"},"nodeType":"YulFunctionCall","src":"35550:72:25"},"nodeType":"YulExpressionStatement","src":"35550:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"35676:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35689:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"35700:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35685:3:25"},"nodeType":"YulFunctionCall","src":"35685:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"35632:43:25"},"nodeType":"YulFunctionCall","src":"35632:72:25"},"nodeType":"YulExpressionStatement","src":"35632:72:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35725:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"35736:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35721:3:25"},"nodeType":"YulFunctionCall","src":"35721:18:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35745:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"35751:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35741:3:25"},"nodeType":"YulFunctionCall","src":"35741:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35714:6:25"},"nodeType":"YulFunctionCall","src":"35714:48:25"},"nodeType":"YulExpressionStatement","src":"35714:48:25"},{"nodeType":"YulAssignment","src":"35771:84:25","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"35841:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"35850:4:25"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35779:61:25"},"nodeType":"YulFunctionCall","src":"35779:76:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35771:4:25"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35370:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"35382:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"35390:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35398:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35406:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35417:4:25","type":""}],"src":"35222:640:25"},{"body":{"nodeType":"YulBlock","src":"35930:79:25","statements":[{"nodeType":"YulAssignment","src":"35940:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"35955:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35949:5:25"},"nodeType":"YulFunctionCall","src":"35949:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"35940:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35997:5:25"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"35971:25:25"},"nodeType":"YulFunctionCall","src":"35971:32:25"},"nodeType":"YulExpressionStatement","src":"35971:32:25"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"35908:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"35916:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"35924:5:25","type":""}],"src":"35868:141:25"},{"body":{"nodeType":"YulBlock","src":"36091:273:25","statements":[{"body":{"nodeType":"YulBlock","src":"36137:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"36139:77:25"},"nodeType":"YulFunctionCall","src":"36139:79:25"},"nodeType":"YulExpressionStatement","src":"36139:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"36112:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"36121:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36108:3:25"},"nodeType":"YulFunctionCall","src":"36108:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"36133:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"36104:3:25"},"nodeType":"YulFunctionCall","src":"36104:32:25"},"nodeType":"YulIf","src":"36101:119:25"},{"nodeType":"YulBlock","src":"36230:127:25","statements":[{"nodeType":"YulVariableDeclaration","src":"36245:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"36259:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"36249:6:25","type":""}]},{"nodeType":"YulAssignment","src":"36274:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36319:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"36330:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36315:3:25"},"nodeType":"YulFunctionCall","src":"36315:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"36339:7:25"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"36284:30:25"},"nodeType":"YulFunctionCall","src":"36284:63:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"36274:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36061:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"36072:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"36084:6:25","type":""}],"src":"36015:349:25"},{"body":{"nodeType":"YulBlock","src":"36476:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36498:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"36506:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36494:3:25"},"nodeType":"YulFunctionCall","src":"36494:14:25"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"36510:34:25","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36487:6:25"},"nodeType":"YulFunctionCall","src":"36487:58:25"},"nodeType":"YulExpressionStatement","src":"36487:58:25"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36468:6:25","type":""}],"src":"36370:182:25"},{"body":{"nodeType":"YulBlock","src":"36704:220:25","statements":[{"nodeType":"YulAssignment","src":"36714:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36780:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"36785:2:25","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36721:58:25"},"nodeType":"YulFunctionCall","src":"36721:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36714:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36886:3:25"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"36797:88:25"},"nodeType":"YulFunctionCall","src":"36797:93:25"},"nodeType":"YulExpressionStatement","src":"36797:93:25"},{"nodeType":"YulAssignment","src":"36899:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36910:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"36915:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36906:3:25"},"nodeType":"YulFunctionCall","src":"36906:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36899:3:25"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36692:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36700:3:25","type":""}],"src":"36558:366:25"},{"body":{"nodeType":"YulBlock","src":"37101:248:25","statements":[{"nodeType":"YulAssignment","src":"37111:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37123:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"37134:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37119:3:25"},"nodeType":"YulFunctionCall","src":"37119:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37111:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37158:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"37169:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37154:3:25"},"nodeType":"YulFunctionCall","src":"37154:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37177:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"37183:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37173:3:25"},"nodeType":"YulFunctionCall","src":"37173:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37147:6:25"},"nodeType":"YulFunctionCall","src":"37147:47:25"},"nodeType":"YulExpressionStatement","src":"37147:47:25"},{"nodeType":"YulAssignment","src":"37203:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37337:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37211:124:25"},"nodeType":"YulFunctionCall","src":"37211:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37203:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37081:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37096:4:25","type":""}],"src":"36930:419:25"},{"body":{"nodeType":"YulBlock","src":"37461:72:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37483:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"37491:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37479:3:25"},"nodeType":"YulFunctionCall","src":"37479:14:25"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"37495:30:25","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37472:6:25"},"nodeType":"YulFunctionCall","src":"37472:54:25"},"nodeType":"YulExpressionStatement","src":"37472:54:25"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37453:6:25","type":""}],"src":"37355:178:25"},{"body":{"nodeType":"YulBlock","src":"37685:220:25","statements":[{"nodeType":"YulAssignment","src":"37695:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37761:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"37766:2:25","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37702:58:25"},"nodeType":"YulFunctionCall","src":"37702:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37695:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37867:3:25"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"37778:88:25"},"nodeType":"YulFunctionCall","src":"37778:93:25"},"nodeType":"YulExpressionStatement","src":"37778:93:25"},{"nodeType":"YulAssignment","src":"37880:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37891:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"37896:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37887:3:25"},"nodeType":"YulFunctionCall","src":"37887:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37880:3:25"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37673:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37681:3:25","type":""}],"src":"37539:366:25"},{"body":{"nodeType":"YulBlock","src":"38082:248:25","statements":[{"nodeType":"YulAssignment","src":"38092:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38104:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"38115:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38100:3:25"},"nodeType":"YulFunctionCall","src":"38100:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38092:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38139:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"38150:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38135:3:25"},"nodeType":"YulFunctionCall","src":"38135:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38158:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"38164:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38154:3:25"},"nodeType":"YulFunctionCall","src":"38154:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38128:6:25"},"nodeType":"YulFunctionCall","src":"38128:47:25"},"nodeType":"YulExpressionStatement","src":"38128:47:25"},{"nodeType":"YulAssignment","src":"38184:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38318:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38192:124:25"},"nodeType":"YulFunctionCall","src":"38192:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38184:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38062:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38077:4:25","type":""}],"src":"37911:419:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$3_memory_ptr(value) -> length {\n\n        length := 0x03\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$3_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$3_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[3] -> uint256[3]\n    function abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$3_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$3_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$3_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Breed_$4254(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Breed_$4254(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Breed_$4254(value)\n    }\n\n    function convert_t_enum$_Breed_$4254_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Breed_$4254(value)\n    }\n\n    function abi_encode_t_enum$_Breed_$4254_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Breed_$4254_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Breed_$4254__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Breed_$4254_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function abi_encode_tuple_t_enum$_Breed_$4254_t_address__to_t_uint8_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_enum$_Breed_$4254_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721URIStorage: URI set of non\")\n\n        mstore(add(memPtr, 32), \"existent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"192":[{"length":32,"start":2257},{"length":32,"start":2341}],"4257":[{"length":32,"start":3884}],"4259":[{"length":32,"start":3944}],"4261":[{"length":32,"start":3977}],"4266":[{"length":32,"start":4012}]},"linkReferences":{},"object":"6080604052600436106101665760003560e01c806370a08231116100d1578063a36f573b1161008a578063b88d4fde11610064578063b88d4fde14610531578063c87b56dd1461055a578063e985e9c514610597578063f2fde38b146105d457610166565b8063a36f573b14610499578063a51cccf3146104d6578063aa1524911461051357610166565b806370a082311461039b578063715018a6146103d85780637a5caab3146103ef5780638da5cb5b1461041a57806395d89b4114610445578063a22cb4651461047057610166565b80633af25975116101235780633af259751461028b5780633ccfd60b146102c857806342842e0e146102df5780635dacf5f4146103085780636352211e146103335780636e02007d1461037057610166565b806301ffc9a71461016b57806306fdde03146101a8578063081812fc146101d3578063095ea7b3146102105780631fe543e31461023957806323b872dd14610262575b600080fd5b34801561017757600080fd5b50610192600480360381019061018d9190612756565b6105fd565b60405161019f919061279e565b60405180910390f35b3480156101b457600080fd5b506101bd6106df565b6040516101ca9190612852565b60405180910390f35b3480156101df57600080fd5b506101fa60048036038101906101f591906128aa565b610771565b6040516102079190612918565b60405180910390f35b34801561021c57600080fd5b506102376004803603810190610232919061295f565b6107b7565b005b34801561024557600080fd5b50610260600480360381019061025b9190612ae7565b6108cf565b005b34801561026e57600080fd5b5061028960048036038101906102849190612b43565b61098f565b005b34801561029757600080fd5b506102b260048036038101906102ad91906128aa565b6109ef565b6040516102bf9190612852565b60405180910390f35b3480156102d457600080fd5b506102dd610a9f565b005b3480156102eb57600080fd5b5061030660048036038101906103019190612b43565b610b53565b005b34801561031457600080fd5b5061031d610b73565b60405161032a9190612c41565b60405180910390f35b34801561033f57600080fd5b5061035a600480360381019061035591906128aa565b610b9e565b6040516103679190612918565b60405180910390f35b34801561037c57600080fd5b50610385610c25565b6040516103929190612c6b565b60405180910390f35b3480156103a757600080fd5b506103c260048036038101906103bd9190612c86565b610c2f565b6040516103cf9190612c6b565b60405180910390f35b3480156103e457600080fd5b506103ed610ce7565b005b3480156103fb57600080fd5b50610404610cfb565b6040516104119190612c6b565b60405180910390f35b34801561042657600080fd5b5061042f610d05565b60405161043c9190612918565b60405180910390f35b34801561045157600080fd5b5061045a610d2f565b6040516104679190612852565b60405180910390f35b34801561047c57600080fd5b5061049760048036038101906104929190612cdf565b610dc1565b005b3480156104a557600080fd5b506104c060048036038101906104bb91906128aa565b610dd7565b6040516104cd9190612918565b60405180910390f35b3480156104e257600080fd5b506104fd60048036038101906104f891906128aa565b610e0a565b60405161050a9190612d96565b60405180910390f35b61051b610eec565b6040516105289190612c6b565b60405180910390f35b34801561053d57600080fd5b5061055860048036038101906105539190612e66565b6110ce565b005b34801561056657600080fd5b50610581600480360381019061057c91906128aa565b611130565b60405161058e9190612852565b60405180910390f35b3480156105a357600080fd5b506105be60048036038101906105b99190612ee9565b611243565b6040516105cb919061279e565b60405180910390f35b3480156105e057600080fd5b506105fb60048036038101906105f69190612c86565b6112d7565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806106c857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806106d857506106d78261135b565b5b9050919050565b6060600080546106ee90612f58565b80601f016020809104026020016040519081016040528092919081815260200182805461071a90612f58565b80156107675780601f1061073c57610100808354040283529160200191610767565b820191906000526020600020905b81548152906001019060200180831161074a57829003601f168201915b5050505050905090565b600061077c826113c5565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006107c282610b9e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610833576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082a90612ffc565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610852611410565b73ffffffffffffffffffffffffffffffffffffffff16148061088157506108808161087b611410565b611243565b5b6108c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b79061308e565b60405180910390fd5b6108ca8383611418565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461098157337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016109789291906130ae565b60405180910390fd5b61098b82826114d1565b5050565b6109a061099a611410565b82611670565b6109df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d690613149565b60405180910390fd5b6109ea838383611705565b505050565b6060600a8281548110610a0557610a04613169565b5b906000526020600020018054610a1a90612f58565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4690612f58565b8015610a935780601f10610a6857610100808354040283529160200191610a93565b820191906000526020600020905b815481529060010190602001808311610a7657829003601f168201915b50505050509050919050565b610aa76119ff565b600047905060003373ffffffffffffffffffffffffffffffffffffffff1682604051610ad2906131c9565b60006040518083038185875af1925050503d8060008114610b0f576040519150601f19603f3d011682016040523d82523d6000602084013e610b14565b606091505b5050905080610b4f576040517fb7b785bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610b6e838383604051806020016040528060008152506110ce565b505050565b610b7b612625565b6040518060600160405280600a8152602001601e81526020016064815250905090565b600080610baa83611a7d565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c139061322a565b60405180910390fd5b80915050919050565b6000600954905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ca0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c97906132bc565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610cef6119ff565b610cf96000611aba565b565b6000600b54905090565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054610d3e90612f58565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6a90612f58565b8015610db75780601f10610d8c57610100808354040283529160200191610db7565b820191906000526020600020905b815481529060010190602001808311610d9a57829003601f168201915b5050505050905090565b610dd3610dcc611410565b8383611b80565b5050565b60086020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600090506000610e1b610b73565b905060005b6003811015610eb457828510158015610e5a5750818160038110610e4757610e46613169565b5b602002015183610e57919061330b565b85105b15610e7c57806002811115610e7257610e71612d1f565b5b9350505050610ee7565b818160038110610e8f57610e8e613169565b5b602002015183610e9f919061330b565b92508080610eac90613361565b915050610e20565b506040517f12806c9d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000600b54341015610f2a576040517f5da6d37500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f000000000000000000000000000000000000000000000000000000000000000060016040518663ffffffff1660e01b8152600401610fed959493929190613422565b602060405180830381600087803b15801561100757600080fd5b505af115801561101b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103f919061348a565b9050336008600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550807ff873236e6cc0ecc5be1a9a35c95ee5b8d1ac4cc7bfef0cc5060391d6cc98e26b336040516110c39190612918565b60405180910390a290565b6110df6110d9611410565b83611670565b61111e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111590613149565b60405180910390fd5b61112a84848484611ced565b50505050565b606061113b826113c5565b600060066000848152602001908152602001600020805461115b90612f58565b80601f016020809104026020016040519081016040528092919081815260200182805461118790612f58565b80156111d45780601f106111a9576101008083540402835291602001916111d4565b820191906000526020600020905b8154815290600101906020018083116111b757829003601f168201915b5050505050905060006111e5611d49565b90506000815114156111fb57819250505061123e565b6000825111156112305780826040516020016112189291906134f3565b6040516020818303038152906040529250505061123e565b61123984611d60565b925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6112df6119ff565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561134f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134690613589565b60405180910390fd5b61135881611aba565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6113ce81611dc8565b61140d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114049061322a565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661148b83610b9e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006008600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006009549050600060648460008151811061152857611527613169565b5b602002602001015161153a91906135d8565b9050600061154782610e0a565b90506115538484611e09565b61161583600a83600281111561156c5761156b612d1f565b5b8154811061157d5761157c613169565b5b90600052602060002001805461159290612f58565b80601f01602080910402602001604051908101604052809291908181526020018280546115be90612f58565b801561160b5780601f106115e05761010080835404028352916020019161160b565b820191906000526020600020905b8154815290600101906020018083116115ee57829003601f168201915b5050505050611e27565b600160096000828254611628919061330b565b925050819055507f8a269f26b688e110e9cbd887d163dab35cae678fa353a0292de532c0cac1ecdc8185604051611660929190613609565b60405180910390a1505050505050565b60008061167c83610b9e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806116be57506116bd8185611243565b5b806116fc57508373ffffffffffffffffffffffffffffffffffffffff166116e484610771565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661172582610b9e565b73ffffffffffffffffffffffffffffffffffffffff161461177b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611772906136a4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156117eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e290613736565b60405180910390fd5b6117f88383836001611e9b565b8273ffffffffffffffffffffffffffffffffffffffff1661181882610b9e565b73ffffffffffffffffffffffffffffffffffffffff161461186e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611865906136a4565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46119fa8383836001611fc1565b505050565b611a07611410565b73ffffffffffffffffffffffffffffffffffffffff16611a25610d05565b73ffffffffffffffffffffffffffffffffffffffff1614611a7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a72906137a2565b60405180910390fd5b565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611bef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611be69061380e565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611ce0919061279e565b60405180910390a3505050565b611cf8848484611705565b611d0484848484611fc7565b611d43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3a906138a0565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060611d6b826113c5565b6000611d75611d49565b90506000815111611d955760405180602001604052806000815250611dc0565b80611d9f8461215e565b604051602001611db09291906134f3565b6040516020818303038152906040525b915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16611dea83611a7d565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b611e23828260405180602001604052806000815250612236565b5050565b611e3082611dc8565b611e6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e6690613932565b60405180910390fd5b80600660008481526020019081526020016000209080519060200190611e96929190612647565b505050565b6001811115611fbb57600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611f2f5780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611f279190613952565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611fba5780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611fb2919061330b565b925050819055505b5b50505050565b50505050565b6000611fe88473ffffffffffffffffffffffffffffffffffffffff16612291565b15612151578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02612011611410565b8786866040518563ffffffff1660e01b815260040161203394939291906139db565b602060405180830381600087803b15801561204d57600080fd5b505af192505050801561207e57506040513d601f19601f8201168201806040525081019061207b9190613a3c565b60015b612101573d80600081146120ae576040519150601f19603f3d011682016040523d82523d6000602084013e6120b3565b606091505b506000815114156120f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120f0906138a0565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050612156565b600190505b949350505050565b60606000600161216d846122b4565b01905060008167ffffffffffffffff81111561218c5761218b6129a4565b5b6040519080825280601f01601f1916602001820160405280156121be5781602001600182028036833780820191505090505b509050600082602001820190505b60011561222b578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581612215576122146135a9565b5b04945060008514156122265761222b565b6121cc565b819350505050919050565b6122408383612407565b61224d6000848484611fc7565b61228c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612283906138a0565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612312577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381612308576123076135a9565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061234f576d04ee2d6d415b85acef81000000008381612345576123446135a9565b5b0492506020810190505b662386f26fc10000831061237e57662386f26fc100008381612374576123736135a9565b5b0492506010810190505b6305f5e10083106123a7576305f5e100838161239d5761239c6135a9565b5b0492506008810190505b61271083106123cc5761271083816123c2576123c16135a9565b5b0492506004810190505b606483106123ef57606483816123e5576123e46135a9565b5b0492506002810190505b600a83106123fe576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612477576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161246e90613ab5565b60405180910390fd5b61248081611dc8565b156124c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124b790613b21565b60405180910390fd5b6124ce600083836001611e9b565b6124d781611dc8565b15612517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161250e90613b21565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4612621600083836001611fc1565b5050565b6040518060600160405280600390602082028036833780820191505090505090565b82805461265390612f58565b90600052602060002090601f01602090048101928261267557600085556126bc565b82601f1061268e57805160ff19168380011785556126bc565b828001600101855582156126bc579182015b828111156126bb5782518255916020019190600101906126a0565b5b5090506126c991906126cd565b5090565b5b808211156126e65760008160009055506001016126ce565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612733816126fe565b811461273e57600080fd5b50565b6000813590506127508161272a565b92915050565b60006020828403121561276c5761276b6126f4565b5b600061277a84828501612741565b91505092915050565b60008115159050919050565b61279881612783565b82525050565b60006020820190506127b3600083018461278f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156127f35780820151818401526020810190506127d8565b83811115612802576000848401525b50505050565b6000601f19601f8301169050919050565b6000612824826127b9565b61282e81856127c4565b935061283e8185602086016127d5565b61284781612808565b840191505092915050565b6000602082019050818103600083015261286c8184612819565b905092915050565b6000819050919050565b61288781612874565b811461289257600080fd5b50565b6000813590506128a48161287e565b92915050565b6000602082840312156128c0576128bf6126f4565b5b60006128ce84828501612895565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612902826128d7565b9050919050565b612912816128f7565b82525050565b600060208201905061292d6000830184612909565b92915050565b61293c816128f7565b811461294757600080fd5b50565b60008135905061295981612933565b92915050565b60008060408385031215612976576129756126f4565b5b60006129848582860161294a565b925050602061299585828601612895565b9150509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6129dc82612808565b810181811067ffffffffffffffff821117156129fb576129fa6129a4565b5b80604052505050565b6000612a0e6126ea565b9050612a1a82826129d3565b919050565b600067ffffffffffffffff821115612a3a57612a396129a4565b5b602082029050602081019050919050565b600080fd5b6000612a63612a5e84612a1f565b612a04565b90508083825260208201905060208402830185811115612a8657612a85612a4b565b5b835b81811015612aaf5780612a9b8882612895565b845260208401935050602081019050612a88565b5050509392505050565b600082601f830112612ace57612acd61299f565b5b8135612ade848260208601612a50565b91505092915050565b60008060408385031215612afe57612afd6126f4565b5b6000612b0c85828601612895565b925050602083013567ffffffffffffffff811115612b2d57612b2c6126f9565b5b612b3985828601612ab9565b9150509250929050565b600080600060608486031215612b5c57612b5b6126f4565b5b6000612b6a8682870161294a565b9350506020612b7b8682870161294a565b9250506040612b8c86828701612895565b9150509250925092565b600060039050919050565b600081905092915050565b6000819050919050565b612bbf81612874565b82525050565b6000612bd18383612bb6565b60208301905092915050565b6000602082019050919050565b612bf381612b96565b612bfd8184612ba1565b9250612c0882612bac565b8060005b83811015612c39578151612c208782612bc5565b9650612c2b83612bdd565b925050600181019050612c0c565b505050505050565b6000606082019050612c566000830184612bea565b92915050565b612c6581612874565b82525050565b6000602082019050612c806000830184612c5c565b92915050565b600060208284031215612c9c57612c9b6126f4565b5b6000612caa8482850161294a565b91505092915050565b612cbc81612783565b8114612cc757600080fd5b50565b600081359050612cd981612cb3565b92915050565b60008060408385031215612cf657612cf56126f4565b5b6000612d048582860161294a565b9250506020612d1585828601612cca565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110612d5f57612d5e612d1f565b5b50565b6000819050612d7082612d4e565b919050565b6000612d8082612d62565b9050919050565b612d9081612d75565b82525050565b6000602082019050612dab6000830184612d87565b92915050565b600080fd5b600067ffffffffffffffff821115612dd157612dd06129a4565b5b612dda82612808565b9050602081019050919050565b82818337600083830152505050565b6000612e09612e0484612db6565b612a04565b905082815260208101848484011115612e2557612e24612db1565b5b612e30848285612de7565b509392505050565b600082601f830112612e4d57612e4c61299f565b5b8135612e5d848260208601612df6565b91505092915050565b60008060008060808587031215612e8057612e7f6126f4565b5b6000612e8e8782880161294a565b9450506020612e9f8782880161294a565b9350506040612eb087828801612895565b925050606085013567ffffffffffffffff811115612ed157612ed06126f9565b5b612edd87828801612e38565b91505092959194509250565b60008060408385031215612f0057612eff6126f4565b5b6000612f0e8582860161294a565b9250506020612f1f8582860161294a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612f7057607f821691505b60208210811415612f8457612f83612f29565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000612fe66021836127c4565b9150612ff182612f8a565b604082019050919050565b6000602082019050818103600083015261301581612fd9565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000613078603d836127c4565b91506130838261301c565b604082019050919050565b600060208201905081810360008301526130a78161306b565b9050919050565b60006040820190506130c36000830185612909565b6130d06020830184612909565b9392505050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000613133602d836127c4565b915061313e826130d7565b604082019050919050565b6000602082019050818103600083015261316281613126565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b50565b60006131b3600083613198565b91506131be826131a3565b600082019050919050565b60006131d4826131a6565b9150819050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b60006132146018836127c4565b915061321f826131de565b602082019050919050565b6000602082019050818103600083015261324381613207565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b60006132a66029836127c4565b91506132b18261324a565b604082019050919050565b600060208201905081810360008301526132d581613299565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061331682612874565b915061332183612874565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613356576133556132dc565b5b828201905092915050565b600061336c82612874565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561339f5761339e6132dc565b5b600182019050919050565b6000819050919050565b6133bd816133aa565b82525050565b600067ffffffffffffffff82169050919050565b6133e0816133c3565b82525050565b600061ffff82169050919050565b6133fd816133e6565b82525050565b600063ffffffff82169050919050565b61341c81613403565b82525050565b600060a08201905061343760008301886133b4565b61344460208301876133d7565b61345160408301866133f4565b61345e6060830185613413565b61346b6080830184613413565b9695505050505050565b6000815190506134848161287e565b92915050565b6000602082840312156134a05761349f6126f4565b5b60006134ae84828501613475565b91505092915050565b600081905092915050565b60006134cd826127b9565b6134d781856134b7565b93506134e78185602086016127d5565b80840191505092915050565b60006134ff82856134c2565b915061350b82846134c2565b91508190509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006135736026836127c4565b915061357e82613517565b604082019050919050565b600060208201905081810360008301526135a281613566565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006135e382612874565b91506135ee83612874565b9250826135fe576135fd6135a9565b5b828206905092915050565b600060408201905061361e6000830185612d87565b61362b6020830184612909565b9392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b600061368e6025836127c4565b915061369982613632565b604082019050919050565b600060208201905081810360008301526136bd81613681565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006137206024836127c4565b915061372b826136c4565b604082019050919050565b6000602082019050818103600083015261374f81613713565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061378c6020836127c4565b915061379782613756565b602082019050919050565b600060208201905081810360008301526137bb8161377f565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006137f86019836127c4565b9150613803826137c2565b602082019050919050565b60006020820190508181036000830152613827816137eb565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b600061388a6032836127c4565b91506138958261382e565b604082019050919050565b600060208201905081810360008301526138b98161387d565b9050919050565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b600061391c602e836127c4565b9150613927826138c0565b604082019050919050565b6000602082019050818103600083015261394b8161390f565b9050919050565b600061395d82612874565b915061396883612874565b92508282101561397b5761397a6132dc565b5b828203905092915050565b600081519050919050565b600082825260208201905092915050565b60006139ad82613986565b6139b78185613991565b93506139c78185602086016127d5565b6139d081612808565b840191505092915050565b60006080820190506139f06000830187612909565b6139fd6020830186612909565b613a0a6040830185612c5c565b8181036060830152613a1c81846139a2565b905095945050505050565b600081519050613a368161272a565b92915050565b600060208284031215613a5257613a516126f4565b5b6000613a6084828501613a27565b91505092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000613a9f6020836127c4565b9150613aaa82613a69565b602082019050919050565b60006020820190508181036000830152613ace81613a92565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000613b0b601c836127c4565b9150613b1682613ad5565b602082019050919050565b60006020820190508181036000830152613b3a81613afe565b905091905056fea2646970667358221220a0c20949461f3bb1e6d5135c69efcd29f0f3971d35f9d779f4dfe81814a38b3964736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x166 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA36F573B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x597 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5D4 JUMPI PUSH2 0x166 JUMP JUMPDEST DUP1 PUSH4 0xA36F573B EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xA51CCCF3 EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0xAA152491 EQ PUSH2 0x513 JUMPI PUSH2 0x166 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x7A5CAAB3 EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x470 JUMPI PUSH2 0x166 JUMP JUMPDEST DUP1 PUSH4 0x3AF25975 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x3AF25975 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x5DACF5F4 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x370 JUMPI PUSH2 0x166 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x262 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x2756 JUMP JUMPDEST PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x279E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x2918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x295F JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST PUSH2 0x8CF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x2B43 JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH2 0xA9F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x2B43 JUMP JUMPDEST PUSH2 0xB53 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x2C41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x2918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x2C6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x2C86 JUMP JUMPDEST PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x2C6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3ED PUSH2 0xCE7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x404 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x2C6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42F PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x2918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45A PUSH2 0xD2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x2CDF JUMP JUMPDEST PUSH2 0xDC1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x2918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x2D96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51B PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x2C6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x558 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST PUSH2 0x10CE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x581 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57C SWAP2 SWAP1 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58E SWAP2 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x2EE9 JUMP JUMPDEST PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CB SWAP2 SWAP1 PUSH2 0x279E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x2C86 JUMP JUMPDEST PUSH2 0x12D7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x6C8 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x6D8 JUMPI POP PUSH2 0x6D7 DUP3 PUSH2 0x135B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x6EE SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x71A SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x767 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x767 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP3 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C2 DUP3 PUSH2 0xB9E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x2FFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x852 PUSH2 0x1410 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x881 JUMPI POP PUSH2 0x880 DUP2 PUSH2 0x87B PUSH2 0x1410 JUMP JUMPDEST PUSH2 0x1243 JUMP JUMPDEST JUMPDEST PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B7 SWAP1 PUSH2 0x308E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CA DUP4 DUP4 PUSH2 0x1418 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x981 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP3 SWAP2 SWAP1 PUSH2 0x30AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x98B DUP3 DUP3 PUSH2 0x14D1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9A0 PUSH2 0x99A PUSH2 0x1410 JUMP JUMPDEST DUP3 PUSH2 0x1670 JUMP JUMPDEST PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D6 SWAP1 PUSH2 0x3149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9EA DUP4 DUP4 DUP4 PUSH2 0x1705 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA05 JUMPI PUSH2 0xA04 PUSH2 0x3169 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xA1A SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA46 SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA93 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA68 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA93 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA76 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA7 PUSH2 0x19FF JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xAD2 SWAP1 PUSH2 0x31C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB4F JUMPI PUSH1 0x40 MLOAD PUSH32 0xB7B785BF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB6E DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x10CE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB7B PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBAA DUP4 PUSH2 0x1A7D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC13 SWAP1 PUSH2 0x322A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC97 SWAP1 PUSH2 0x32BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEF PUSH2 0x19FF JUMP JUMPDEST PUSH2 0xCF9 PUSH1 0x0 PUSH2 0x1ABA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xD3E SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD6A SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDB7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD8C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDB7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD9A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDD3 PUSH2 0xDCC PUSH2 0x1410 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1B80 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0xE1B PUSH2 0xB73 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xEB4 JUMPI DUP3 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0xE5A JUMPI POP DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xE47 JUMPI PUSH2 0xE46 PUSH2 0x3169 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xE57 SWAP2 SWAP1 PUSH2 0x330B JUMP JUMPDEST DUP6 LT JUMPDEST ISZERO PUSH2 0xE7C JUMPI DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE72 JUMPI PUSH2 0xE71 PUSH2 0x2D1F JUMP JUMPDEST JUMPDEST SWAP4 POP POP POP POP PUSH2 0xEE7 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xE8F JUMPI PUSH2 0xE8E PUSH2 0x3169 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xE9F SWAP2 SWAP1 PUSH2 0x330B JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0xEAC SWAP1 PUSH2 0x3361 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE20 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x12806C9D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD CALLVALUE LT ISZERO PUSH2 0xF2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x5DA6D37500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFED SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1007 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x101B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x103F SWAP2 SWAP1 PUSH2 0x348A JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xF873236E6CC0ECC5BE1A9A35C95EE5B8D1AC4CC7BFEF0CC5060391D6CC98E26B CALLER PUSH1 0x40 MLOAD PUSH2 0x10C3 SWAP2 SWAP1 PUSH2 0x2918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x10DF PUSH2 0x10D9 PUSH2 0x1410 JUMP JUMPDEST DUP4 PUSH2 0x1670 JUMP JUMPDEST PUSH2 0x111E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1115 SWAP1 PUSH2 0x3149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x112A DUP5 DUP5 DUP5 DUP5 PUSH2 0x1CED JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x113B DUP3 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x115B SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1187 SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x11E5 PUSH2 0x1D49 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x11FB JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x123E JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1230 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1218 SWAP3 SWAP2 SWAP1 PUSH2 0x34F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x123E JUMP JUMPDEST PUSH2 0x1239 DUP5 PUSH2 0x1D60 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12DF PUSH2 0x19FF JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x134F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1346 SWAP1 PUSH2 0x3589 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1358 DUP2 PUSH2 0x1ABA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13CE DUP2 PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x140D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1404 SWAP1 PUSH2 0x322A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x148B DUP4 PUSH2 0xB9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1528 JUMPI PUSH2 0x1527 PUSH2 0x3169 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x153A SWAP2 SWAP1 PUSH2 0x35D8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1547 DUP3 PUSH2 0xE0A JUMP JUMPDEST SWAP1 POP PUSH2 0x1553 DUP5 DUP5 PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x1615 DUP4 PUSH1 0xA DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x156C JUMPI PUSH2 0x156B PUSH2 0x2D1F JUMP JUMPDEST JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x157D JUMPI PUSH2 0x157C PUSH2 0x3169 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x1592 SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15BE SWAP1 PUSH2 0x2F58 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x160B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15E0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x160B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15EE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x1E27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1628 SWAP2 SWAP1 PUSH2 0x330B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x8A269F26B688E110E9CBD887D163DAB35CAE678FA353A0292DE532C0CAC1ECDC DUP2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1660 SWAP3 SWAP2 SWAP1 PUSH2 0x3609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x167C DUP4 PUSH2 0xB9E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x16BE JUMPI POP PUSH2 0x16BD DUP2 DUP6 PUSH2 0x1243 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x16FC JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16E4 DUP5 PUSH2 0x771 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1725 DUP3 PUSH2 0xB9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x177B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1772 SWAP1 PUSH2 0x36A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E2 SWAP1 PUSH2 0x3736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17F8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1E9B JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1818 DUP3 PUSH2 0xB9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x186E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1865 SWAP1 PUSH2 0x36A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x19FA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1FC1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A07 PUSH2 0x1410 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A25 PUSH2 0xD05 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A72 SWAP1 PUSH2 0x37A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE6 SWAP1 PUSH2 0x380E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CE0 SWAP2 SWAP1 PUSH2 0x279E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1CF8 DUP5 DUP5 DUP5 PUSH2 0x1705 JUMP JUMPDEST PUSH2 0x1D04 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1FC7 JUMP JUMPDEST PUSH2 0x1D43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3A SWAP1 PUSH2 0x38A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D6B DUP3 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D75 PUSH2 0x1D49 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1D95 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1DC0 JUMP JUMPDEST DUP1 PUSH2 0x1D9F DUP5 PUSH2 0x215E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DB0 SWAP3 SWAP2 SWAP1 PUSH2 0x34F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DEA DUP4 PUSH2 0x1A7D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E23 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2236 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1E30 DUP3 PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x1E6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E66 SWAP1 PUSH2 0x3932 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1E96 SWAP3 SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1FBB JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F2F JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1F27 SWAP2 SWAP1 PUSH2 0x3952 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FBA JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1FB2 SWAP2 SWAP1 PUSH2 0x330B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE8 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2291 JUMP JUMPDEST ISZERO PUSH2 0x2151 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x2011 PUSH2 0x1410 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2033 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39DB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x204D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x207E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x207B SWAP2 SWAP1 PUSH2 0x3A3C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2101 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x20AE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20B3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x20F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20F0 SWAP1 PUSH2 0x38A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x2156 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x216D DUP5 PUSH2 0x22B4 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x218C JUMPI PUSH2 0x218B PUSH2 0x29A4 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x21BE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x222B JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2215 JUMPI PUSH2 0x2214 PUSH2 0x35A9 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x2226 JUMPI PUSH2 0x222B JUMP JUMPDEST PUSH2 0x21CC JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2240 DUP4 DUP4 PUSH2 0x2407 JUMP JUMPDEST PUSH2 0x224D PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1FC7 JUMP JUMPDEST PUSH2 0x228C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2283 SWAP1 PUSH2 0x38A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x2312 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x2308 JUMPI PUSH2 0x2307 PUSH2 0x35A9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x234F JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x2345 JUMPI PUSH2 0x2344 PUSH2 0x35A9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x237E JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x2374 JUMPI PUSH2 0x2373 PUSH2 0x35A9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x23A7 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x239D JUMPI PUSH2 0x239C PUSH2 0x35A9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x23CC JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x23C2 JUMPI PUSH2 0x23C1 PUSH2 0x35A9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x23EF JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x23E5 JUMPI PUSH2 0x23E4 PUSH2 0x35A9 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x23FE JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2477 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x246E SWAP1 PUSH2 0x3AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2480 DUP2 PUSH2 0x1DC8 JUMP JUMPDEST ISZERO PUSH2 0x24C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B7 SWAP1 PUSH2 0x3B21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24CE PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1E9B JUMP JUMPDEST PUSH2 0x24D7 DUP2 PUSH2 0x1DC8 JUMP JUMPDEST ISZERO PUSH2 0x2517 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250E SWAP1 PUSH2 0x3B21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2621 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1FC1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2653 SWAP1 PUSH2 0x2F58 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2675 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x26BC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x268E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x26BC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x26BC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x26BB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x26A0 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x26C9 SWAP2 SWAP1 PUSH2 0x26CD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x26E6 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x26CE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2733 DUP2 PUSH2 0x26FE JUMP JUMPDEST DUP2 EQ PUSH2 0x273E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2750 DUP2 PUSH2 0x272A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x276C JUMPI PUSH2 0x276B PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x277A DUP5 DUP3 DUP6 ADD PUSH2 0x2741 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2798 DUP2 PUSH2 0x2783 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x278F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27F3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x27D8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2802 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2824 DUP3 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x282E DUP2 DUP6 PUSH2 0x27C4 JUMP JUMPDEST SWAP4 POP PUSH2 0x283E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27D5 JUMP JUMPDEST PUSH2 0x2847 DUP2 PUSH2 0x2808 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x286C DUP2 DUP5 PUSH2 0x2819 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2887 DUP2 PUSH2 0x2874 JUMP JUMPDEST DUP2 EQ PUSH2 0x2892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28A4 DUP2 PUSH2 0x287E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28C0 JUMPI PUSH2 0x28BF PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28CE DUP5 DUP3 DUP6 ADD PUSH2 0x2895 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2902 DUP3 PUSH2 0x28D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2912 DUP2 PUSH2 0x28F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x292D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2909 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x293C DUP2 PUSH2 0x28F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x2947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2959 DUP2 PUSH2 0x2933 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2976 JUMPI PUSH2 0x2975 PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2984 DUP6 DUP3 DUP7 ADD PUSH2 0x294A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2995 DUP6 DUP3 DUP7 ADD PUSH2 0x2895 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x29DC DUP3 PUSH2 0x2808 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x29FB JUMPI PUSH2 0x29FA PUSH2 0x29A4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A0E PUSH2 0x26EA JUMP JUMPDEST SWAP1 POP PUSH2 0x2A1A DUP3 DUP3 PUSH2 0x29D3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A3A JUMPI PUSH2 0x2A39 PUSH2 0x29A4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2A63 PUSH2 0x2A5E DUP5 PUSH2 0x2A1F JUMP JUMPDEST PUSH2 0x2A04 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2A86 JUMPI PUSH2 0x2A85 PUSH2 0x2A4B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2AAF JUMPI DUP1 PUSH2 0x2A9B DUP9 DUP3 PUSH2 0x2895 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2A88 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2ACE JUMPI PUSH2 0x2ACD PUSH2 0x299F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2ADE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2A50 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AFE JUMPI PUSH2 0x2AFD PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B0C DUP6 DUP3 DUP7 ADD PUSH2 0x2895 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B2D JUMPI PUSH2 0x2B2C PUSH2 0x26F9 JUMP JUMPDEST JUMPDEST PUSH2 0x2B39 DUP6 DUP3 DUP7 ADD PUSH2 0x2AB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B5C JUMPI PUSH2 0x2B5B PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B6A DUP7 DUP3 DUP8 ADD PUSH2 0x294A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2B7B DUP7 DUP3 DUP8 ADD PUSH2 0x294A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2B8C DUP7 DUP3 DUP8 ADD PUSH2 0x2895 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BBF DUP2 PUSH2 0x2874 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD1 DUP4 DUP4 PUSH2 0x2BB6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BF3 DUP2 PUSH2 0x2B96 JUMP JUMPDEST PUSH2 0x2BFD DUP2 DUP5 PUSH2 0x2BA1 JUMP JUMPDEST SWAP3 POP PUSH2 0x2C08 DUP3 PUSH2 0x2BAC JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C39 JUMPI DUP2 MLOAD PUSH2 0x2C20 DUP8 DUP3 PUSH2 0x2BC5 JUMP JUMPDEST SWAP7 POP PUSH2 0x2C2B DUP4 PUSH2 0x2BDD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2C0C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C56 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C65 DUP2 PUSH2 0x2874 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C9C JUMPI PUSH2 0x2C9B PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CAA DUP5 DUP3 DUP6 ADD PUSH2 0x294A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CBC DUP2 PUSH2 0x2783 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CD9 DUP2 PUSH2 0x2CB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CF6 JUMPI PUSH2 0x2CF5 PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D04 DUP6 DUP3 DUP7 ADD PUSH2 0x294A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D15 DUP6 DUP3 DUP7 ADD PUSH2 0x2CCA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2D5F JUMPI PUSH2 0x2D5E PUSH2 0x2D1F JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2D70 DUP3 PUSH2 0x2D4E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D80 DUP3 PUSH2 0x2D62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D90 DUP2 PUSH2 0x2D75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DAB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2DD1 JUMPI PUSH2 0x2DD0 PUSH2 0x29A4 JUMP JUMPDEST JUMPDEST PUSH2 0x2DDA DUP3 PUSH2 0x2808 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E09 PUSH2 0x2E04 DUP5 PUSH2 0x2DB6 JUMP JUMPDEST PUSH2 0x2A04 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2E25 JUMPI PUSH2 0x2E24 PUSH2 0x2DB1 JUMP JUMPDEST JUMPDEST PUSH2 0x2E30 DUP5 DUP3 DUP6 PUSH2 0x2DE7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2E4D JUMPI PUSH2 0x2E4C PUSH2 0x299F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2E5D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2DF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E80 JUMPI PUSH2 0x2E7F PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E8E DUP8 DUP3 DUP9 ADD PUSH2 0x294A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2E9F DUP8 DUP3 DUP9 ADD PUSH2 0x294A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2EB0 DUP8 DUP3 DUP9 ADD PUSH2 0x2895 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2ED1 JUMPI PUSH2 0x2ED0 PUSH2 0x26F9 JUMP JUMPDEST JUMPDEST PUSH2 0x2EDD DUP8 DUP3 DUP9 ADD PUSH2 0x2E38 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F00 JUMPI PUSH2 0x2EFF PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F0E DUP6 DUP3 DUP7 ADD PUSH2 0x294A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F1F DUP6 DUP3 DUP7 ADD PUSH2 0x294A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2F70 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2F84 JUMPI PUSH2 0x2F83 PUSH2 0x2F29 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FE6 PUSH1 0x21 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FF1 DUP3 PUSH2 0x2F8A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3015 DUP2 PUSH2 0x2FD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3078 PUSH1 0x3D DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3083 DUP3 PUSH2 0x301C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30A7 DUP2 PUSH2 0x306B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x30C3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2909 JUMP JUMPDEST PUSH2 0x30D0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2909 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3133 PUSH1 0x2D DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x313E DUP3 PUSH2 0x30D7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3162 DUP2 PUSH2 0x3126 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31B3 PUSH1 0x0 DUP4 PUSH2 0x3198 JUMP JUMPDEST SWAP2 POP PUSH2 0x31BE DUP3 PUSH2 0x31A3 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31D4 DUP3 PUSH2 0x31A6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3214 PUSH1 0x18 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x321F DUP3 PUSH2 0x31DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3243 DUP2 PUSH2 0x3207 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32A6 PUSH1 0x29 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x32B1 DUP3 PUSH2 0x324A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32D5 DUP2 PUSH2 0x3299 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3316 DUP3 PUSH2 0x2874 JUMP JUMPDEST SWAP2 POP PUSH2 0x3321 DUP4 PUSH2 0x2874 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3356 JUMPI PUSH2 0x3355 PUSH2 0x32DC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x336C DUP3 PUSH2 0x2874 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x339F JUMPI PUSH2 0x339E PUSH2 0x32DC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33BD DUP2 PUSH2 0x33AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33E0 DUP2 PUSH2 0x33C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33FD DUP2 PUSH2 0x33E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x341C DUP2 PUSH2 0x3403 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3437 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x33B4 JUMP JUMPDEST PUSH2 0x3444 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x33D7 JUMP JUMPDEST PUSH2 0x3451 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x33F4 JUMP JUMPDEST PUSH2 0x345E PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x3413 JUMP JUMPDEST PUSH2 0x346B PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3413 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3484 DUP2 PUSH2 0x287E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34A0 JUMPI PUSH2 0x349F PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34AE DUP5 DUP3 DUP6 ADD PUSH2 0x3475 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34CD DUP3 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x34D7 DUP2 DUP6 PUSH2 0x34B7 JUMP JUMPDEST SWAP4 POP PUSH2 0x34E7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27D5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34FF DUP3 DUP6 PUSH2 0x34C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x350B DUP3 DUP5 PUSH2 0x34C2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3573 PUSH1 0x26 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x357E DUP3 PUSH2 0x3517 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35A2 DUP2 PUSH2 0x3566 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x35E3 DUP3 PUSH2 0x2874 JUMP JUMPDEST SWAP2 POP PUSH2 0x35EE DUP4 PUSH2 0x2874 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x35FE JUMPI PUSH2 0x35FD PUSH2 0x35A9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x361E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D87 JUMP JUMPDEST PUSH2 0x362B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2909 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x368E PUSH1 0x25 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3699 DUP3 PUSH2 0x3632 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36BD DUP2 PUSH2 0x3681 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3720 PUSH1 0x24 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x372B DUP3 PUSH2 0x36C4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x374F DUP2 PUSH2 0x3713 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x378C PUSH1 0x20 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3797 DUP3 PUSH2 0x3756 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37BB DUP2 PUSH2 0x377F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F8 PUSH1 0x19 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3803 DUP3 PUSH2 0x37C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3827 DUP2 PUSH2 0x37EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388A PUSH1 0x32 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3895 DUP3 PUSH2 0x382E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38B9 DUP2 PUSH2 0x387D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391C PUSH1 0x2E DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3927 DUP3 PUSH2 0x38C0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x394B DUP2 PUSH2 0x390F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x395D DUP3 PUSH2 0x2874 JUMP JUMPDEST SWAP2 POP PUSH2 0x3968 DUP4 PUSH2 0x2874 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x397B JUMPI PUSH2 0x397A PUSH2 0x32DC JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39AD DUP3 PUSH2 0x3986 JUMP JUMPDEST PUSH2 0x39B7 DUP2 DUP6 PUSH2 0x3991 JUMP JUMPDEST SWAP4 POP PUSH2 0x39C7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x27D5 JUMP JUMPDEST PUSH2 0x39D0 DUP2 PUSH2 0x2808 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x39F0 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2909 JUMP JUMPDEST PUSH2 0x39FD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2909 JUMP JUMPDEST PUSH2 0x3A0A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2C5C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3A1C DUP2 DUP5 PUSH2 0x39A2 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3A36 DUP2 PUSH2 0x272A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A52 JUMPI PUSH2 0x3A51 PUSH2 0x26F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A60 DUP5 DUP3 DUP6 ADD PUSH2 0x3A27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A9F PUSH1 0x20 DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AAA DUP3 PUSH2 0x3A69 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ACE DUP2 PUSH2 0x3A92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B0B PUSH1 0x1C DUP4 PUSH2 0x27C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B16 DUP3 PUSH2 0x3AD5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B3A DUP2 PUSH2 0x3AFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xC2 MULMOD 0x49 CHAINID 0x1F EXTCODESIZE 0xB1 0xE6 0xD5 SGT 0x5C PUSH10 0xEFCD29F0F3971D35F9D7 PUSH26 0xF4DFE81814A38B3964736F6C6343000809003300000000000000 ","sourceMap":"541:3902:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6618:256:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4320:121:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3287:240;;;;;;;;;;;;;:::i;:::-;;5004:179:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4011:114:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2190:219:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4131:94:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:8;;;;;;;;;;;;;:::i;:::-;;4231:83:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1055:54:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3533:472;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2060:512;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5249:314:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;482:608:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1570:300:9;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;6618:256:2:-;6731:14;6717:28;;:10;:28;;;6713:109;;6788:10;6800:14;6762:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;4612:326:9:-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;4320:121:23:-;4381:13;4413:14;4428:5;4413:21;;;;;;;;:::i;:::-;;;;;;;;;4406:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4320:121;;;:::o;3287:240::-;1094:13:8;:11;:13::i;:::-;3334:14:23::1;3351:21;3334:38;;3383:12;3408:10;3400:24;;3432:6;3400:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3382:61;;;3457:7;3453:68;;3473:46;;;;;;;;;;;;;;3453:68;3324:203;;3287:240::o:0;5004:179:9:-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;4011:114:23:-;4057:17;;:::i;:::-;4086:32;;;;;;;;4094:2;4086:32;;;;4097:2;4086:32;;;;1218:3;4086:32;;;;;4011:114;:::o;2190:219:9:-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;4131:94:23:-;4179:7;4204:14;;4197:21;;4131:94;:::o;1929:204:9:-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;1831:101:8:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4231:83:23:-;4273:7;4298:9;;4291:16;;4231:83;:::o;1201:85:8:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2633:102:9:-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;1055:54:23:-;;;;;;;;;;;;;;;;;;;;;;:::o;3533:472::-;3603:5;3619:21;3643:1;3619:25;;3654:29;3686:16;:14;:16::i;:::-;3654:48;;3716:9;3712:236;3731:18;3729:1;:20;3712:236;;;3785:13;3772:9;:26;;:72;;;;;3830:11;3842:1;3830:14;;;;;;;:::i;:::-;;;;;;3814:13;:30;;;;:::i;:::-;3802:9;:42;3772:72;3769:124;;;3876:1;3870:8;;;;;;;;:::i;:::-;;3863:15;;;;;;;3769:124;3923:11;3935:1;3923:14;;;;;;;:::i;:::-;;;;;;3906:31;;;;;:::i;:::-;;;3751:3;;;;;:::i;:::-;;;;3712:236;;;;3965:33;;;;;;;;;;;;;;3533:472;;;;:::o;2060:512::-;2105:17;2148:9;;2136;:21;2133:91;;;2179:43;;;;;;;;;;;;;;2133:91;2245:16;:35;;;2294:9;2345:16;932:1;2410:18;1024:1;2245:216;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2233:228;;2505:10;2472:19;:30;2492:9;2472:30;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;2543:9;2530:35;2554:10;2530:35;;;;;;:::i;:::-;;;;;;;;2060:512;:::o;5249:314:9:-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;482:608:12:-;555:13;580:23;595:7;580:14;:23::i;:::-;614;640:10;:19;651:7;640:19;;;;;;;;;;;614:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:18;690:10;:8;:10::i;:::-;669:31;;795:1;779:4;773:18;:23;769:70;;;819:9;812:16;;;;;;769:70;967:1;947:9;941:23;:27;937:106;;;1015:4;1021:9;998:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;984:48;;;;;;937:106;1060:23;1075:7;1060:14;:23::i;:::-;1053:30;;;;482:608;;;;:::o;4388:162:9:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;2081:198:8:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;829:155:17:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:9:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:15:-;693:7;719:10;712:17;;640:96;:::o;12768:171:9:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;2578:703:23:-;2683:16;2702:19;:30;2722:9;2702:30;;;;;;;;;;;;;;;;;;;;;2683:49;;2742:18;2763:14;;2742:35;;2787:17;1218:3;2807:11;2819:1;2807:14;;;;;;;;:::i;:::-;;;;;;;;:33;;;;:::i;:::-;2787:53;;3039:14;3056:32;3078:9;3056:21;:32::i;:::-;3039:49;;3098:31;3108:8;3118:10;3098:9;:31::i;:::-;3139:58;3152:10;3163:14;3186:8;3178:17;;;;;;;;:::i;:::-;;3163:33;;;;;;;;:::i;:::-;;;;;;;;;3139:58;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:58::i;:::-;3225:1;3207:14;;:19;;;;;;;:::i;:::-;;;;;;;;3241:29;3251:8;3261;3241:29;;;;;;;:::i;:::-;;;;;;;;2673:608;;;;2578:703;;:::o;7540:261:9:-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;1359:130:8:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;6838:115:9:-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;2433:187:8:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;13075:307:9:-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;7256:126::-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;8131:108::-;8206:26;8216:2;8220:7;8206:26;;;;;;;;;;;;:9;:26::i;:::-;8131:108;;:::o;1237:214:12:-;1336:16;1344:7;1336;:16::i;:::-;1328:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1435:9;1413:10;:19;1424:7;1413:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;1237:214;;:::o;15698:396:9:-;15882:1;15870:9;:13;15866:222;;;15919:1;15903:18;;:4;:18;;;15899:85;;15960:9;15941;:15;15951:4;15941:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;15899:85;16015:1;16001:16;;:2;:16;;;15997:81;;16054:9;16037;:13;16047:2;16037:13;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;15997:81;15866:222;15698:396;;;;:::o;16800:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;415:696:16:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;1032:21;;;1048:5;;1032:21;788:280;;;1088:6;1081:13;;;;;415:696;;;:::o;8460:309:9:-;8584:18;8590:2;8594:7;8584:5;:18::i;:::-;8633:53;8664:1;8668:2;8672:7;8681:4;8633:22;:53::i;:::-;8612:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8460:309;;;:::o;1175:320:14:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;9889:890:19:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;9091:920:9:-;9184:1;9170:16;;:2;:16;;;;9162:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9242:16;9250:7;9242;:16::i;:::-;9241:17;9233:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9302:48;9331:1;9335:2;9339:7;9348:1;9302:20;:48::i;:::-;9446:16;9454:7;9446;:16::i;:::-;9445:17;9437:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9854:1;9837:9;:13;9847:2;9837:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9895:2;9876:7;:16;9884:7;9876:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9938:7;9934:2;9913:33;;9930:1;9913:33;;;;;;;;;;;;9957:47;9985:1;9989:2;9993:7;10002:1;9957:19;:47::i;:::-;9091:920;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:25:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:117::-;5047:1;5044;5037:12;5061:180;5109:77;5106:1;5099:88;5206:4;5203:1;5196:15;5230:4;5227:1;5220:15;5247:281;5330:27;5352:4;5330:27;:::i;:::-;5322:6;5318:40;5460:6;5448:10;5445:22;5424:18;5412:10;5409:34;5406:62;5403:88;;;5471:18;;:::i;:::-;5403:88;5511:10;5507:2;5500:22;5290:238;5247:281;;:::o;5534:129::-;5568:6;5595:20;;:::i;:::-;5585:30;;5624:33;5652:4;5644:6;5624:33;:::i;:::-;5534:129;;;:::o;5669:311::-;5746:4;5836:18;5828:6;5825:30;5822:56;;;5858:18;;:::i;:::-;5822:56;5908:4;5900:6;5896:17;5888:25;;5968:4;5962;5958:15;5950:23;;5669:311;;;:::o;5986:117::-;6095:1;6092;6085:12;6126:710;6222:5;6247:81;6263:64;6320:6;6263:64;:::i;:::-;6247:81;:::i;:::-;6238:90;;6348:5;6377:6;6370:5;6363:21;6411:4;6404:5;6400:16;6393:23;;6464:4;6456:6;6452:17;6444:6;6440:30;6493:3;6485:6;6482:15;6479:122;;;6512:79;;:::i;:::-;6479:122;6627:6;6610:220;6644:6;6639:3;6636:15;6610:220;;;6719:3;6748:37;6781:3;6769:10;6748:37;:::i;:::-;6743:3;6736:50;6815:4;6810:3;6806:14;6799:21;;6686:144;6670:4;6665:3;6661:14;6654:21;;6610:220;;;6614:21;6228:608;;6126:710;;;;;:::o;6859:370::-;6930:5;6979:3;6972:4;6964:6;6960:17;6956:27;6946:122;;6987:79;;:::i;:::-;6946:122;7104:6;7091:20;7129:94;7219:3;7211:6;7204:4;7196:6;7192:17;7129:94;:::i;:::-;7120:103;;6936:293;6859:370;;;;:::o;7235:684::-;7328:6;7336;7385:2;7373:9;7364:7;7360:23;7356:32;7353:119;;;7391:79;;:::i;:::-;7353:119;7511:1;7536:53;7581:7;7572:6;7561:9;7557:22;7536:53;:::i;:::-;7526:63;;7482:117;7666:2;7655:9;7651:18;7638:32;7697:18;7689:6;7686:30;7683:117;;;7719:79;;:::i;:::-;7683:117;7824:78;7894:7;7885:6;7874:9;7870:22;7824:78;:::i;:::-;7814:88;;7609:303;7235:684;;;;;:::o;7925:619::-;8002:6;8010;8018;8067:2;8055:9;8046:7;8042:23;8038:32;8035:119;;;8073:79;;:::i;:::-;8035:119;8193:1;8218:53;8263:7;8254:6;8243:9;8239:22;8218:53;:::i;:::-;8208:63;;8164:117;8320:2;8346:53;8391:7;8382:6;8371:9;8367:22;8346:53;:::i;:::-;8336:63;;8291:118;8448:2;8474:53;8519:7;8510:6;8499:9;8495:22;8474:53;:::i;:::-;8464:63;;8419:118;7925:619;;;;;:::o;8550:104::-;8615:6;8643:4;8633:14;;8550:104;;;:::o;8660:143::-;8757:11;8794:3;8779:18;;8660:143;;;;:::o;8809:98::-;8874:4;8897:3;8889:11;;8809:98;;;:::o;8913:108::-;8990:24;9008:5;8990:24;:::i;:::-;8985:3;8978:37;8913:108;;:::o;9027:179::-;9096:10;9117:46;9159:3;9151:6;9117:46;:::i;:::-;9195:4;9190:3;9186:14;9172:28;;9027:179;;;;:::o;9212:111::-;9280:4;9312;9307:3;9303:14;9295:22;;9212:111;;;:::o;9361:694::-;9497:52;9543:5;9497:52;:::i;:::-;9565:84;9642:6;9637:3;9565:84;:::i;:::-;9558:91;;9673:54;9721:5;9673:54;:::i;:::-;9750:7;9781:1;9766:282;9791:6;9788:1;9785:13;9766:282;;;9867:6;9861:13;9894:63;9953:3;9938:13;9894:63;:::i;:::-;9887:70;;9980:58;10031:6;9980:58;:::i;:::-;9970:68;;9826:222;9813:1;9810;9806:9;9801:14;;9766:282;;;9770:14;9473:582;;;9361:694;;:::o;10061:314::-;10200:4;10238:2;10227:9;10223:18;10215:26;;10251:117;10365:1;10354:9;10350:17;10341:6;10251:117;:::i;:::-;10061:314;;;;:::o;10381:118::-;10468:24;10486:5;10468:24;:::i;:::-;10463:3;10456:37;10381:118;;:::o;10505:222::-;10598:4;10636:2;10625:9;10621:18;10613:26;;10649:71;10717:1;10706:9;10702:17;10693:6;10649:71;:::i;:::-;10505:222;;;;:::o;10733:329::-;10792:6;10841:2;10829:9;10820:7;10816:23;10812:32;10809:119;;;10847:79;;:::i;:::-;10809:119;10967:1;10992:53;11037:7;11028:6;11017:9;11013:22;10992:53;:::i;:::-;10982:63;;10938:117;10733:329;;;;:::o;11068:116::-;11138:21;11153:5;11138:21;:::i;:::-;11131:5;11128:32;11118:60;;11174:1;11171;11164:12;11118:60;11068:116;:::o;11190:133::-;11233:5;11271:6;11258:20;11249:29;;11287:30;11311:5;11287:30;:::i;:::-;11190:133;;;;:::o;11329:468::-;11394:6;11402;11451:2;11439:9;11430:7;11426:23;11422:32;11419:119;;;11457:79;;:::i;:::-;11419:119;11577:1;11602:53;11647:7;11638:6;11627:9;11623:22;11602:53;:::i;:::-;11592:63;;11548:117;11704:2;11730:50;11772:7;11763:6;11752:9;11748:22;11730:50;:::i;:::-;11720:60;;11675:115;11329:468;;;;;:::o;11803:180::-;11851:77;11848:1;11841:88;11948:4;11945:1;11938:15;11972:4;11969:1;11962:15;11989:115;12072:1;12065:5;12062:12;12052:46;;12078:18;;:::i;:::-;12052:46;11989:115;:::o;12110:131::-;12157:7;12186:5;12175:16;;12192:43;12229:5;12192:43;:::i;:::-;12110:131;;;:::o;12247:::-;12305:9;12338:34;12366:5;12338:34;:::i;:::-;12325:47;;12247:131;;;:::o;12384:147::-;12479:45;12518:5;12479:45;:::i;:::-;12474:3;12467:58;12384:147;;:::o;12537:238::-;12638:4;12676:2;12665:9;12661:18;12653:26;;12689:79;12765:1;12754:9;12750:17;12741:6;12689:79;:::i;:::-;12537:238;;;;:::o;12781:117::-;12890:1;12887;12880:12;12904:307;12965:4;13055:18;13047:6;13044:30;13041:56;;;13077:18;;:::i;:::-;13041:56;13115:29;13137:6;13115:29;:::i;:::-;13107:37;;13199:4;13193;13189:15;13181:23;;12904:307;;;:::o;13217:154::-;13301:6;13296:3;13291;13278:30;13363:1;13354:6;13349:3;13345:16;13338:27;13217:154;;;:::o;13377:410::-;13454:5;13479:65;13495:48;13536:6;13495:48;:::i;:::-;13479:65;:::i;:::-;13470:74;;13567:6;13560:5;13553:21;13605:4;13598:5;13594:16;13643:3;13634:6;13629:3;13625:16;13622:25;13619:112;;;13650:79;;:::i;:::-;13619:112;13740:41;13774:6;13769:3;13764;13740:41;:::i;:::-;13460:327;13377:410;;;;;:::o;13806:338::-;13861:5;13910:3;13903:4;13895:6;13891:17;13887:27;13877:122;;13918:79;;:::i;:::-;13877:122;14035:6;14022:20;14060:78;14134:3;14126:6;14119:4;14111:6;14107:17;14060:78;:::i;:::-;14051:87;;13867:277;13806:338;;;;:::o;14150:943::-;14245:6;14253;14261;14269;14318:3;14306:9;14297:7;14293:23;14289:33;14286:120;;;14325:79;;:::i;:::-;14286:120;14445:1;14470:53;14515:7;14506:6;14495:9;14491:22;14470:53;:::i;:::-;14460:63;;14416:117;14572:2;14598:53;14643:7;14634:6;14623:9;14619:22;14598:53;:::i;:::-;14588:63;;14543:118;14700:2;14726:53;14771:7;14762:6;14751:9;14747:22;14726:53;:::i;:::-;14716:63;;14671:118;14856:2;14845:9;14841:18;14828:32;14887:18;14879:6;14876:30;14873:117;;;14909:79;;:::i;:::-;14873:117;15014:62;15068:7;15059:6;15048:9;15044:22;15014:62;:::i;:::-;15004:72;;14799:287;14150:943;;;;;;;:::o;15099:474::-;15167:6;15175;15224:2;15212:9;15203:7;15199:23;15195:32;15192:119;;;15230:79;;:::i;:::-;15192:119;15350:1;15375:53;15420:7;15411:6;15400:9;15396:22;15375:53;:::i;:::-;15365:63;;15321:117;15477:2;15503:53;15548:7;15539:6;15528:9;15524:22;15503:53;:::i;:::-;15493:63;;15448:118;15099:474;;;;;:::o;15579:180::-;15627:77;15624:1;15617:88;15724:4;15721:1;15714:15;15748:4;15745:1;15738:15;15765:320;15809:6;15846:1;15840:4;15836:12;15826:22;;15893:1;15887:4;15883:12;15914:18;15904:81;;15970:4;15962:6;15958:17;15948:27;;15904:81;16032:2;16024:6;16021:14;16001:18;15998:38;15995:84;;;16051:18;;:::i;:::-;15995:84;15816:269;15765:320;;;:::o;16091:220::-;16231:34;16227:1;16219:6;16215:14;16208:58;16300:3;16295:2;16287:6;16283:15;16276:28;16091:220;:::o;16317:366::-;16459:3;16480:67;16544:2;16539:3;16480:67;:::i;:::-;16473:74;;16556:93;16645:3;16556:93;:::i;:::-;16674:2;16669:3;16665:12;16658:19;;16317:366;;;:::o;16689:419::-;16855:4;16893:2;16882:9;16878:18;16870:26;;16942:9;16936:4;16932:20;16928:1;16917:9;16913:17;16906:47;16970:131;17096:4;16970:131;:::i;:::-;16962:139;;16689:419;;;:::o;17114:248::-;17254:34;17250:1;17242:6;17238:14;17231:58;17323:31;17318:2;17310:6;17306:15;17299:56;17114:248;:::o;17368:366::-;17510:3;17531:67;17595:2;17590:3;17531:67;:::i;:::-;17524:74;;17607:93;17696:3;17607:93;:::i;:::-;17725:2;17720:3;17716:12;17709:19;;17368:366;;;:::o;17740:419::-;17906:4;17944:2;17933:9;17929:18;17921:26;;17993:9;17987:4;17983:20;17979:1;17968:9;17964:17;17957:47;18021:131;18147:4;18021:131;:::i;:::-;18013:139;;17740:419;;;:::o;18165:332::-;18286:4;18324:2;18313:9;18309:18;18301:26;;18337:71;18405:1;18394:9;18390:17;18381:6;18337:71;:::i;:::-;18418:72;18486:2;18475:9;18471:18;18462:6;18418:72;:::i;:::-;18165:332;;;;;:::o;18503:232::-;18643:34;18639:1;18631:6;18627:14;18620:58;18712:15;18707:2;18699:6;18695:15;18688:40;18503:232;:::o;18741:366::-;18883:3;18904:67;18968:2;18963:3;18904:67;:::i;:::-;18897:74;;18980:93;19069:3;18980:93;:::i;:::-;19098:2;19093:3;19089:12;19082:19;;18741:366;;;:::o;19113:419::-;19279:4;19317:2;19306:9;19302:18;19294:26;;19366:9;19360:4;19356:20;19352:1;19341:9;19337:17;19330:47;19394:131;19520:4;19394:131;:::i;:::-;19386:139;;19113:419;;;:::o;19538:180::-;19586:77;19583:1;19576:88;19683:4;19680:1;19673:15;19707:4;19704:1;19697:15;19724:147;19825:11;19862:3;19847:18;;19724:147;;;;:::o;19877:114::-;;:::o;19997:398::-;20156:3;20177:83;20258:1;20253:3;20177:83;:::i;:::-;20170:90;;20269:93;20358:3;20269:93;:::i;:::-;20387:1;20382:3;20378:11;20371:18;;19997:398;;;:::o;20401:379::-;20585:3;20607:147;20750:3;20607:147;:::i;:::-;20600:154;;20771:3;20764:10;;20401:379;;;:::o;20786:174::-;20926:26;20922:1;20914:6;20910:14;20903:50;20786:174;:::o;20966:366::-;21108:3;21129:67;21193:2;21188:3;21129:67;:::i;:::-;21122:74;;21205:93;21294:3;21205:93;:::i;:::-;21323:2;21318:3;21314:12;21307:19;;20966:366;;;:::o;21338:419::-;21504:4;21542:2;21531:9;21527:18;21519:26;;21591:9;21585:4;21581:20;21577:1;21566:9;21562:17;21555:47;21619:131;21745:4;21619:131;:::i;:::-;21611:139;;21338:419;;;:::o;21763:228::-;21903:34;21899:1;21891:6;21887:14;21880:58;21972:11;21967:2;21959:6;21955:15;21948:36;21763:228;:::o;21997:366::-;22139:3;22160:67;22224:2;22219:3;22160:67;:::i;:::-;22153:74;;22236:93;22325:3;22236:93;:::i;:::-;22354:2;22349:3;22345:12;22338:19;;21997:366;;;:::o;22369:419::-;22535:4;22573:2;22562:9;22558:18;22550:26;;22622:9;22616:4;22612:20;22608:1;22597:9;22593:17;22586:47;22650:131;22776:4;22650:131;:::i;:::-;22642:139;;22369:419;;;:::o;22794:180::-;22842:77;22839:1;22832:88;22939:4;22936:1;22929:15;22963:4;22960:1;22953:15;22980:305;23020:3;23039:20;23057:1;23039:20;:::i;:::-;23034:25;;23073:20;23091:1;23073:20;:::i;:::-;23068:25;;23227:1;23159:66;23155:74;23152:1;23149:81;23146:107;;;23233:18;;:::i;:::-;23146:107;23277:1;23274;23270:9;23263:16;;22980:305;;;;:::o;23291:233::-;23330:3;23353:24;23371:5;23353:24;:::i;:::-;23344:33;;23399:66;23392:5;23389:77;23386:103;;;23469:18;;:::i;:::-;23386:103;23516:1;23509:5;23505:13;23498:20;;23291:233;;;:::o;23530:77::-;23567:7;23596:5;23585:16;;23530:77;;;:::o;23613:118::-;23700:24;23718:5;23700:24;:::i;:::-;23695:3;23688:37;23613:118;;:::o;23737:101::-;23773:7;23813:18;23806:5;23802:30;23791:41;;23737:101;;;:::o;23844:115::-;23929:23;23946:5;23929:23;:::i;:::-;23924:3;23917:36;23844:115;;:::o;23965:89::-;24001:7;24041:6;24034:5;24030:18;24019:29;;23965:89;;;:::o;24060:115::-;24145:23;24162:5;24145:23;:::i;:::-;24140:3;24133:36;24060:115;;:::o;24181:93::-;24217:7;24257:10;24250:5;24246:22;24235:33;;24181:93;;;:::o;24280:115::-;24365:23;24382:5;24365:23;:::i;:::-;24360:3;24353:36;24280:115;;:::o;24401:648::-;24598:4;24636:3;24625:9;24621:19;24613:27;;24650:71;24718:1;24707:9;24703:17;24694:6;24650:71;:::i;:::-;24731:70;24797:2;24786:9;24782:18;24773:6;24731:70;:::i;:::-;24811;24877:2;24866:9;24862:18;24853:6;24811:70;:::i;:::-;24891;24957:2;24946:9;24942:18;24933:6;24891:70;:::i;:::-;24971:71;25037:3;25026:9;25022:19;25013:6;24971:71;:::i;:::-;24401:648;;;;;;;;:::o;25055:143::-;25112:5;25143:6;25137:13;25128:22;;25159:33;25186:5;25159:33;:::i;:::-;25055:143;;;;:::o;25204:351::-;25274:6;25323:2;25311:9;25302:7;25298:23;25294:32;25291:119;;;25329:79;;:::i;:::-;25291:119;25449:1;25474:64;25530:7;25521:6;25510:9;25506:22;25474:64;:::i;:::-;25464:74;;25420:128;25204:351;;;;:::o;25561:148::-;25663:11;25700:3;25685:18;;25561:148;;;;:::o;25715:377::-;25821:3;25849:39;25882:5;25849:39;:::i;:::-;25904:89;25986:6;25981:3;25904:89;:::i;:::-;25897:96;;26002:52;26047:6;26042:3;26035:4;26028:5;26024:16;26002:52;:::i;:::-;26079:6;26074:3;26070:16;26063:23;;25825:267;25715:377;;;;:::o;26098:435::-;26278:3;26300:95;26391:3;26382:6;26300:95;:::i;:::-;26293:102;;26412:95;26503:3;26494:6;26412:95;:::i;:::-;26405:102;;26524:3;26517:10;;26098:435;;;;;:::o;26539:225::-;26679:34;26675:1;26667:6;26663:14;26656:58;26748:8;26743:2;26735:6;26731:15;26724:33;26539:225;:::o;26770:366::-;26912:3;26933:67;26997:2;26992:3;26933:67;:::i;:::-;26926:74;;27009:93;27098:3;27009:93;:::i;:::-;27127:2;27122:3;27118:12;27111:19;;26770:366;;;:::o;27142:419::-;27308:4;27346:2;27335:9;27331:18;27323:26;;27395:9;27389:4;27385:20;27381:1;27370:9;27366:17;27359:47;27423:131;27549:4;27423:131;:::i;:::-;27415:139;;27142:419;;;:::o;27567:180::-;27615:77;27612:1;27605:88;27712:4;27709:1;27702:15;27736:4;27733:1;27726:15;27753:176;27785:1;27802:20;27820:1;27802:20;:::i;:::-;27797:25;;27836:20;27854:1;27836:20;:::i;:::-;27831:25;;27875:1;27865:35;;27880:18;;:::i;:::-;27865:35;27921:1;27918;27914:9;27909:14;;27753:176;;;;:::o;27935:348::-;28064:4;28102:2;28091:9;28087:18;28079:26;;28115:79;28191:1;28180:9;28176:17;28167:6;28115:79;:::i;:::-;28204:72;28272:2;28261:9;28257:18;28248:6;28204:72;:::i;:::-;27935:348;;;;;:::o;28289:224::-;28429:34;28425:1;28417:6;28413:14;28406:58;28498:7;28493:2;28485:6;28481:15;28474:32;28289:224;:::o;28519:366::-;28661:3;28682:67;28746:2;28741:3;28682:67;:::i;:::-;28675:74;;28758:93;28847:3;28758:93;:::i;:::-;28876:2;28871:3;28867:12;28860:19;;28519:366;;;:::o;28891:419::-;29057:4;29095:2;29084:9;29080:18;29072:26;;29144:9;29138:4;29134:20;29130:1;29119:9;29115:17;29108:47;29172:131;29298:4;29172:131;:::i;:::-;29164:139;;28891:419;;;:::o;29316:223::-;29456:34;29452:1;29444:6;29440:14;29433:58;29525:6;29520:2;29512:6;29508:15;29501:31;29316:223;:::o;29545:366::-;29687:3;29708:67;29772:2;29767:3;29708:67;:::i;:::-;29701:74;;29784:93;29873:3;29784:93;:::i;:::-;29902:2;29897:3;29893:12;29886:19;;29545:366;;;:::o;29917:419::-;30083:4;30121:2;30110:9;30106:18;30098:26;;30170:9;30164:4;30160:20;30156:1;30145:9;30141:17;30134:47;30198:131;30324:4;30198:131;:::i;:::-;30190:139;;29917:419;;;:::o;30342:182::-;30482:34;30478:1;30470:6;30466:14;30459:58;30342:182;:::o;30530:366::-;30672:3;30693:67;30757:2;30752:3;30693:67;:::i;:::-;30686:74;;30769:93;30858:3;30769:93;:::i;:::-;30887:2;30882:3;30878:12;30871:19;;30530:366;;;:::o;30902:419::-;31068:4;31106:2;31095:9;31091:18;31083:26;;31155:9;31149:4;31145:20;31141:1;31130:9;31126:17;31119:47;31183:131;31309:4;31183:131;:::i;:::-;31175:139;;30902:419;;;:::o;31327:175::-;31467:27;31463:1;31455:6;31451:14;31444:51;31327:175;:::o;31508:366::-;31650:3;31671:67;31735:2;31730:3;31671:67;:::i;:::-;31664:74;;31747:93;31836:3;31747:93;:::i;:::-;31865:2;31860:3;31856:12;31849:19;;31508:366;;;:::o;31880:419::-;32046:4;32084:2;32073:9;32069:18;32061:26;;32133:9;32127:4;32123:20;32119:1;32108:9;32104:17;32097:47;32161:131;32287:4;32161:131;:::i;:::-;32153:139;;31880:419;;;:::o;32305:237::-;32445:34;32441:1;32433:6;32429:14;32422:58;32514:20;32509:2;32501:6;32497:15;32490:45;32305:237;:::o;32548:366::-;32690:3;32711:67;32775:2;32770:3;32711:67;:::i;:::-;32704:74;;32787:93;32876:3;32787:93;:::i;:::-;32905:2;32900:3;32896:12;32889:19;;32548:366;;;:::o;32920:419::-;33086:4;33124:2;33113:9;33109:18;33101:26;;33173:9;33167:4;33163:20;33159:1;33148:9;33144:17;33137:47;33201:131;33327:4;33201:131;:::i;:::-;33193:139;;32920:419;;;:::o;33345:233::-;33485:34;33481:1;33473:6;33469:14;33462:58;33554:16;33549:2;33541:6;33537:15;33530:41;33345:233;:::o;33584:366::-;33726:3;33747:67;33811:2;33806:3;33747:67;:::i;:::-;33740:74;;33823:93;33912:3;33823:93;:::i;:::-;33941:2;33936:3;33932:12;33925:19;;33584:366;;;:::o;33956:419::-;34122:4;34160:2;34149:9;34145:18;34137:26;;34209:9;34203:4;34199:20;34195:1;34184:9;34180:17;34173:47;34237:131;34363:4;34237:131;:::i;:::-;34229:139;;33956:419;;;:::o;34381:191::-;34421:4;34441:20;34459:1;34441:20;:::i;:::-;34436:25;;34475:20;34493:1;34475:20;:::i;:::-;34470:25;;34514:1;34511;34508:8;34505:34;;;34519:18;;:::i;:::-;34505:34;34564:1;34561;34557:9;34549:17;;34381:191;;;;:::o;34578:98::-;34629:6;34663:5;34657:12;34647:22;;34578:98;;;:::o;34682:168::-;34765:11;34799:6;34794:3;34787:19;34839:4;34834:3;34830:14;34815:29;;34682:168;;;;:::o;34856:360::-;34942:3;34970:38;35002:5;34970:38;:::i;:::-;35024:70;35087:6;35082:3;35024:70;:::i;:::-;35017:77;;35103:52;35148:6;35143:3;35136:4;35129:5;35125:16;35103:52;:::i;:::-;35180:29;35202:6;35180:29;:::i;:::-;35175:3;35171:39;35164:46;;34946:270;34856:360;;;;:::o;35222:640::-;35417:4;35455:3;35444:9;35440:19;35432:27;;35469:71;35537:1;35526:9;35522:17;35513:6;35469:71;:::i;:::-;35550:72;35618:2;35607:9;35603:18;35594:6;35550:72;:::i;:::-;35632;35700:2;35689:9;35685:18;35676:6;35632:72;:::i;:::-;35751:9;35745:4;35741:20;35736:2;35725:9;35721:18;35714:48;35779:76;35850:4;35841:6;35779:76;:::i;:::-;35771:84;;35222:640;;;;;;;:::o;35868:141::-;35924:5;35955:6;35949:13;35940:22;;35971:32;35997:5;35971:32;:::i;:::-;35868:141;;;;:::o;36015:349::-;36084:6;36133:2;36121:9;36112:7;36108:23;36104:32;36101:119;;;36139:79;;:::i;:::-;36101:119;36259:1;36284:63;36339:7;36330:6;36319:9;36315:22;36284:63;:::i;:::-;36274:73;;36230:127;36015:349;;;;:::o;36370:182::-;36510:34;36506:1;36498:6;36494:14;36487:58;36370:182;:::o;36558:366::-;36700:3;36721:67;36785:2;36780:3;36721:67;:::i;:::-;36714:74;;36797:93;36886:3;36797:93;:::i;:::-;36915:2;36910:3;36906:12;36899:19;;36558:366;;;:::o;36930:419::-;37096:4;37134:2;37123:9;37119:18;37111:26;;37183:9;37177:4;37173:20;37169:1;37158:9;37154:17;37147:47;37211:131;37337:4;37211:131;:::i;:::-;37203:139;;36930:419;;;:::o;37355:178::-;37495:30;37491:1;37483:6;37479:14;37472:54;37355:178;:::o;37539:366::-;37681:3;37702:67;37766:2;37761:3;37702:67;:::i;:::-;37695:74;;37778:93;37867:3;37778:93;:::i;:::-;37896:2;37891:3;37887:12;37880:19;;37539:366;;;:::o;37911:419::-;38077:4;38115:2;38104:9;38100:18;38092:26;;38164:9;38158:4;38154:20;38150:1;38139:9;38135:17;38128:47;38192:131;38318:4;38192:131;:::i;:::-;38184:139;;37911:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3044600","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2902","getApproved(uint256)":"5300","getBreedFromModdedRng(uint256)":"infinite","getChanceArray()":"infinite","getDogTokenUris(uint256)":"infinite","getMintFee()":"2504","getTokenCounter()":"2570","isApprovedForAll(address,address)":"infinite","name()":"infinite","owner()":"2611","ownerOf(uint256)":"3113","rawFulfillRandomWords(uint256,uint256[])":"infinite","renounceOwnership()":"30443","requestNft()":"infinite","s_requestIdToSender(uint256)":"2884","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"30857","withdraw()":"infinite"},"internal":{"fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getBreedFromModdedRng(uint256)":"a51cccf3","getChanceArray()":"5dacf5f4","getDogTokenUris(uint256)":"3af25975","getMintFee()":"7a5caab3","getTokenCounter()":"6e02007d","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","renounceOwnership()":"715018a6","requestNft()":"aa152491","s_requestIdToSender(uint256)":"a36f573b","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoodrindatorV2\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"keyhash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"string[3]\",\"name\":\"dogTokenUris\",\"type\":\"string[3]\"},{\"internalType\":\"uint256\",\"name\":\"mintFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RandomIpfsNft__ContractBalanceTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RandomIpfsNft__NotEnoughETHToCoverMintFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RandomIpfsNft__RangeOutOfBounds\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum RandomIpfsNft.Breed\",\"name\":\"dogBreed\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"NftMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"NftRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moddedRng\",\"type\":\"uint256\"}],\"name\":\"getBreedFromModdedRng\",\"outputs\":[{\"internalType\":\"enum RandomIpfsNft.Breed\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChanceArray\",\"outputs\":[{\"internalType\":\"uint256[3]\",\"name\":\"\",\"type\":\"uint256[3]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDogTokenUris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestNft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_requestIdToSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RandomIpfsNft.sol\":\"RandomIpfsNft\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/OwnableInterface.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwnerWithProposal is OwnableInterface {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /**\\n   * @notice Allows an owner to begin transferring ownership to a new address,\\n   * pending.\\n   */\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /**\\n   * @notice Allows an ownership transfer to be completed by the recipient.\\n   */\\n  function acceptOwnership() external override {\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @notice Get the current owner\\n   */\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /**\\n   * @notice validate, transfer ownership, and emit relevant events\\n   */\\n  function _transferOwnership(address to) private {\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /**\\n   * @notice validate access\\n   */\\n  function _validateOwnership() internal view {\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /**\\n   * @notice Reverts if called by anyone other than the contract owner.\\n   */\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0xa2f137a1d066795aeac76226e58f33c982278cdd34b4f09e5a2243d5a0924654\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0xec8b7e3032e887dd0732d2a5f8552ddce64a99a81b0008ef0bcf6cad68a535fc\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface OwnableInterface {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0xb8b3a97783dddc198b790c4cec1eda7fb47aa38cbaea6555220d0ed8c735c086\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n}\\n\",\"keccak256\":\"0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256, /* firstTokenId */\\n        uint256 batchSize\\n    ) internal virtual {\\n        if (batchSize > 1) {\\n            if (from != address(0)) {\\n                _balances[from] -= batchSize;\\n            }\\n            if (to != address(0)) {\\n                _balances[to] += batchSize;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/RandomIpfsNft.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport '@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol';\\nimport '@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol';\\nimport '@chainlink/contracts/src/v0.8/ConfirmedOwner.sol';\\n\\n\\npragma solidity ^0.8.7;\\n\\nerror RandomIpfsNft__RangeOutOfBounds();\\nerror RandomIpfsNft__NotEnoughETHToCoverMintFee();\\nerror RandomIpfsNft__ContractBalanceTransferFailed();\\n\\n\\ncontract RandomIpfsNft is ERC721URIStorage, VRFConsumerBaseV2, Ownable {\\n\\n    // Type Declaration\\n    enum Breed {\\n        PUG,\\n        SHIBA_INU,\\n        ST_BERNARD\\n    }\\n\\n\\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\\n    bytes32 private immutable i_keyhash; //gas Lane\\n    uint64 private immutable i_subscriptionId;\\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\\n    uint32 private immutable i_callbackGasLimit;\\n    uint32 private constant NUM_WORDS = 1;\\n    \\n    // VRF helpers\\n    mapping(uint256 => address) public s_requestIdToSender;\\n\\n    // NFT variables\\n    uint256 private s_tokenCounter;\\n    uint256 internal constant MAX_CHANCE_VALUE = 100;\\n    string[] internal s_dogTokenUris;\\n    uint256 internal i_mintFee;\\n\\n    // Events\\n    event NftRequested(uint256 indexed requestId, address requester);\\n    event NftMinted(Breed dogBreed, address minter);\\n\\n    constructor(\\n        address vrfCoodrindatorV2, \\n        bytes32 keyhash, /* gasLane */ \\n        uint64 subscriptionId,\\n        uint32 callbackGasLimit,\\n        string[3] memory dogTokenUris,\\n        uint256 mintFee\\n        ) \\n        VRFConsumerBaseV2(vrfCoodrindatorV2)\\n        ERC721(\\\"Random IPFS NFT\\\", \\\"RIN\\\") \\n        {\\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoodrindatorV2);\\n        i_keyhash = keyhash;\\n        i_subscriptionId = subscriptionId;\\n        i_callbackGasLimit = callbackGasLimit;\\n        i_mintFee = mintFee; \\n        s_dogTokenUris = dogTokenUris;\\n        s_tokenCounter = 0;\\n    }\\n\\n    function requestNft() public payable returns(uint256 requestId){\\n        if(msg.value < i_mintFee){\\n            revert RandomIpfsNft__NotEnoughETHToCoverMintFee();}\\n        requestId = i_vrfCoordinator.requestRandomWords(\\n            i_keyhash, /* Or gasLane once again */\\n            i_subscriptionId,\\n            REQUEST_CONFIRMATIONS,\\n            i_callbackGasLimit,\\n            NUM_WORDS\\n        );\\n\\n        s_requestIdToSender[requestId] = msg.sender;\\n        emit NftRequested(requestId, msg.sender);\\n    }\\n\\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\\n        address dogOwner = s_requestIdToSender[requestId];\\n        uint256 newTokenId = s_tokenCounter;\\n        uint256 moddedRng = randomWords[0] % MAX_CHANCE_VALUE;\\n        //0 - 99\\n        // 7 - PUG\\n        // 88 -> St. Bernard\\n        // 45 -> St. Bernard\\n        // 12 -> Shiba Inu\\n        // 10% of Pug, 30% of Shiba Inu, 60% chance of St. Bernard\\n\\n        Breed dogBreed = getBreedFromModdedRng(moddedRng);\\n        _safeMint(dogOwner, newTokenId);\\n        _setTokenURI(newTokenId,s_dogTokenUris[uint256(dogBreed)]);\\n        s_tokenCounter += 1;\\n        emit NftMinted(dogBreed, dogOwner);\\n        }\\n\\n    function withdraw() public onlyOwner {\\n        uint256 amount = address(this).balance;\\n        (bool success,) = payable(msg.sender).call{value: amount}(\\\"\\\");\\n        if(!success){revert RandomIpfsNft__ContractBalanceTransferFailed();}\\n    }\\n\\n    function getBreedFromModdedRng(uint256 moddedRng) public pure returns(Breed){\\n        uint256 cumulativeSum = 0;\\n        uint256[3] memory chanceArray = getChanceArray();\\n        for(uint256 i=0; i<chanceArray.length; i++){\\n            if(moddedRng >= cumulativeSum && moddedRng < cumulativeSum + chanceArray[i]){\\n                return Breed(i);\\n            }\\n            cumulativeSum += chanceArray[i];\\n        } \\n        revert RandomIpfsNft__RangeOutOfBounds();\\n    }\\n\\n    function getChanceArray() public pure returns(uint256[3] memory) {\\n        return [10,30, MAX_CHANCE_VALUE];\\n    }\\n\\n    function getTokenCounter() public view returns (uint256){\\n        return s_tokenCounter;\\n    }\\n\\n    function getMintFee() public view returns(uint256){\\n        return i_mintFee;\\n    }\\n\\n    function getDogTokenUris(uint256 index) public view returns (string memory) {\\n        return s_dogTokenUris[index];\\n    }\\n}\",\"keccak256\":\"0xa1a53a84daa4a906154d87e62e638007bd0a2ce0bc4d712174b34728a2b15469\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1203,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1205,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1209,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1213,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1217,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1223,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2269,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":1072,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_owner","offset":0,"slot":"7","type":"t_address"},{"astId":4273,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"s_requestIdToSender","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_address)"},{"astId":4275,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"s_tokenCounter","offset":0,"slot":"9","type":"t_uint256"},{"astId":4281,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"s_dogTokenUris","offset":0,"slot":"10","type":"t_array(t_string_storage)dyn_storage"},{"astId":4283,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"i_mintFee","offset":0,"slot":"11","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_string_storage)dyn_storage":{"base":"t_string_storage","encoding":"dynamic_array","label":"string[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}